//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="HostLocationSoap", Namespace="http://novell.com/simias/host/location")]
public class HostLocation : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public HostLocation() {
        this.Url = "http://192.168.1.114:8086/simias10/HostLocation.asmx";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias/host/location/IsCollectionOnHost", RequestNamespace="http://novell.com/simias/host/location", ResponseNamespace="http://novell.com/simias/host/location", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool IsCollectionOnHost(string collectionID) {
        object[] results = this.Invoke("IsCollectionOnHost", new object[] {
                    collectionID});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginIsCollectionOnHost(string collectionID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("IsCollectionOnHost", new object[] {
                    collectionID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndIsCollectionOnHost(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias/host/location/GetHomeServer", RequestNamespace="http://novell.com/simias/host/location", ResponseNamespace="http://novell.com/simias/host/location", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public HostInformation GetHomeServer(string Username) {
        object[] results = this.Invoke("GetHomeServer", new object[] {
                    Username});
        return ((HostInformation)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHomeServer(string Username, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHomeServer", new object[] {
                    Username}, callback, asyncState);
    }
    
    /// <remarks/>
    public HostInformation EndGetHomeServer(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HostInformation)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias/host/location/GetHostInfo", RequestNamespace="http://novell.com/simias/host/location", ResponseNamespace="http://novell.com/simias/host/location", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public HostInformation GetHostInfo(string CollectionID, string HostID) {
        object[] results = this.Invoke("GetHostInfo", new object[] {
                    CollectionID,
                    HostID});
        return ((HostInformation)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHostInfo(string CollectionID, string HostID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHostInfo", new object[] {
                    CollectionID,
                    HostID}, callback, asyncState);
    }
    
    /// <remarks/>
    public HostInformation EndGetHostInfo(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HostInformation)(results[0]));
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://novell.com/simias/host/location/GetHosts", RequestNamespace="http://novell.com/simias/host/location", ResponseNamespace="http://novell.com/simias/host/location", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public HostInformation[] GetHosts() {
        object[] results = this.Invoke("GetHosts", new object[0]);
        return ((HostInformation[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHosts(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHosts", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public HostInformation[] EndGetHosts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((HostInformation[])(results[0]));
    }
}

/// <remarks/>
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/simias/host/location")]
public class HostInformation {
    
    /// <remarks/>
    public string ID;
    
    /// <remarks/>
    public string Name;
    
    /// <remarks/>
    public string MemberID;
    
    /// <remarks/>
    public string PublicAddress;
    
    /// <remarks/>
    public string PrivateAddress;
    
    /// <remarks/>
    public string PublicKey;
    
    /// <remarks/>
    public bool Master;
}
