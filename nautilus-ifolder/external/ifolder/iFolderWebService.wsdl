<?xml version="1.0" encoding="us-ascii"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:s0="http://novell.com/ifolder/web/" name="iFolderWebService" targetNamespace="http://novell.com/ifolder/web/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://novell.com/ifolder/web/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="Ping">
        <xs:complexType />
      </xs:element>
      <xs:element name="PingResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="IsiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsiFolderResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanBeiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanBeiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CanBeiFolderResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPathIniFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPathIniFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsPathIniFolderResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateLocaliFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Path" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="iFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="0" maxOccurs="1" name="ManagedPath" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UnManagedPath" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="MasterIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Owner" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="OwnerID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="EffectiveSyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="Synchronizable" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="Type" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsSubscription" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="EnumeratedState" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsWorkgroup" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="HasConflicts" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserRights" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LastSyncTime" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Role" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ssl" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="encryptionAlgorithm" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="shared" type="xs:boolean" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CreateLocaliFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CreateLocaliFolderResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomainEncr">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Path" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="SSL" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="EncryptionAlgorithm" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="Passphrase" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomainEncrResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CreateiFolderInDomainEncrResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Path" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CreateiFolderInDomainResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSecurityPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetSecurityPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetSecurityPolicyResult" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDisableSharingPolicy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="currentUserID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="OwnerID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDisableSharingPolicyResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetDisableSharingPolicyResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsTransferAllowed">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="newUserID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsTransferAllowedResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsTransferAllowedResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetLimitPolicyStatus">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetLimitPolicyStatusResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetLimitPolicyStatusResult" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="POBoxID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderInvitationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderInvitationResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderByLocalPath">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderByLocalPathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderByLocalPathResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteiFolderResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="RevertiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RevertiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="RevertiFolderResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RevertiFolder1">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RevertiFolder1Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="RevertiFolder1Result" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAlliFolders">
        <xs:complexType />
      </xs:element>
      <xs:complexType name="ArrayOfIFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="iFolderWeb" nillable="true" type="s0:iFolderWeb" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetAlliFoldersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetAlliFoldersResult" type="s0:ArrayOfIFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAlliFolders1">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetAlliFolders1Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetAlliFolders1Result" type="s0:ArrayOfIFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersForDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersForDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFoldersForDomainResult" type="s0:ArrayOfIFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFoldersResult" type="s0:ArrayOfIFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserRights">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserRightsResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="iFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsOwner" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="FirstName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Surname" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="FN" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetOwnerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetOwnerResult" type="s0:iFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="NewOwnerUserID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="OldOwnerRights" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeOwnerResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="RemoveiFolderUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveiFolderUserResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetiFolderUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfIFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="iFolderUser" nillable="true" type="s0:iFolderUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetiFolderUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUsersResult" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="numUsers" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainUsersResult" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForDomainUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="SearchString" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForDomainUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="SearchForDomainUsersResult" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindCloseiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindCloseiFolderMembersResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="FindFirstiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindFirstiFolderMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindFirstiFolderMembersResult" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfIFolderUser" />
            <xs:element minOccurs="1" maxOccurs="1" name="totalMembers" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:simpleType name="iFolderSearchType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="Equal" />
          <xs:enumeration value="Not_Equal" />
          <xs:enumeration value="Begins" />
          <xs:enumeration value="Ends" />
          <xs:enumeration value="Contains" />
          <xs:enumeration value="Greater" />
          <xs:enumeration value="Less" />
          <xs:enumeration value="Greater_Equal" />
          <xs:enumeration value="Less_Equal" />
          <xs:enumeration value="Exists" />
          <xs:enumeration value="CaseEqual" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="FindFirstSpecificiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="attributeName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchString" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="operation" type="s0:iFolderSearchType" />
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindFirstSpecificiFolderMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindFirstSpecificiFolderMembersResult" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfIFolderUser" />
            <xs:element minOccurs="1" maxOccurs="1" name="totalMembers" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindNextiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindNextiFolderMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindNextiFolderMembersResult" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindPreviousiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindPreviousiFolderMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindPreviousiFolderMembersResult" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindSeekiFolderMembers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="offset" type="xs:int" />
            <xs:element minOccurs="1" maxOccurs="1" name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="FindSeekiFolderMembersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="FindSeekiFolderMembersResult" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="searchContext" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="memberList" type="s0:ArrayOfIFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUserResult" type="s0:iFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRAName">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetRANameResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetRANameResult" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserFromNodeID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="NodeID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserFromNodeIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUserFromNodeIDResult" type="s0:iFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddAndInviteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="MemberName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="GivenName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="FamilyName" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="MemberID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="PublicKey" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AddAndInviteUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="AddAndInviteUserResult" type="s0:iFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InviteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InviteUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="InviteUserResult" type="s0:iFolderUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MergeiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="path" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="MergeiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="MergeiFolderResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="AcceptiFolderInvitationResult" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitation1">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitation1Response">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="AcceptiFolderInvitation1Result" type="s0:iFolderWeb" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeclineiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeclineiFolderInvitationResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetUserDiskSpace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DiskSpace">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="AvailableSpace" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="UsedSpace" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetUserDiskSpaceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetUserDiskSpaceResult" type="s0:DiskSpace" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderDiskSpace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderDiskSpaceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderDiskSpaceResult" type="s0:DiskSpace" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserDiskSpaceLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserDiskSpaceLimitResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="SetiFolderDiskSpaceLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderDiskSpaceLimitResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="SetiFolderSyncInterval">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="Interval" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderSyncIntervalResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="SetDefaultSyncInterval">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="Interval" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDefaultSyncIntervalResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetDefaultSyncInterval">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetDefaultSyncIntervalResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetDefaultSyncIntervalResult" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AuthenticateToDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="Password" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AuthenticateToDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="AuthenticateToDomainResult" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderConflicts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfConflict">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Conflict" nillable="true" type="s0:Conflict" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Conflict">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ConflictID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalDate" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalSize" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalFullPath" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsNameConflict" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerDate" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerSize" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerFullPath" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetiFolderConflictsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderConflictsResult" type="s0:ArrayOfConflict" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveFileConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="localChangesWin" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveFileConflictResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="ResolveEnhancedFileConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="localChangesWin" type="xs:boolean" />
            <xs:element minOccurs="0" maxOccurs="1" name="conflictBinPath" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveEnhancedFileConflictResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="ResolveNameConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="newLocalName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveNameConflictResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="RenameAndResolveConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="newFileName" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RenameAndResolveConflictResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="SetupProxy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="Port" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetupProxyResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="RemoveProxy">
        <xs:complexType />
      </xs:element>
      <xs:element name="RemoveProxyResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="CalculateSyncSize">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SyncSize">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncNodeCount" type="xs:unsignedInt" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncByteCount" type="xs:unsignedLong" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CalculateSyncSizeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CalculateSyncSizeResult" type="s0:SyncSize" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SynciFolderNow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SynciFolderNowResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="DeleteiFolderFileSizeLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteiFolderFileSizeLimitResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetMemberiFolderFileSizeLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetMemberiFolderFileSizeLimitResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetMemberiFolderFileSizeLimitResult" type="xs:long" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderFileSizeLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderFileSizeLimitResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetiFolderFileSizeLimitResult" type="xs:long" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderFileSizeLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderFileSizeLimitResponse">
        <xs:complexType />
      </xs:element>
      <xs:element name="CheckForUpdatedClientAvailable">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForUpdatedClientAvailableResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CheckForUpdatedClientAvailableResult" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForUpdatedClient">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForUpdatedClientResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CheckForUpdatedClientResult" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForUpdate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForUpdateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CheckForUpdateResult" type="xs:int" />
            <xs:element minOccurs="0" maxOccurs="1" name="ServerVersion" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForServerUpdate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CheckForServerUpdateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CheckForServerUpdateResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RunClientUpdate">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string" />
            <xs:element minOccurs="0" maxOccurs="1" name="path" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RunClientUpdateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="RunClientUpdateResult" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="boolean" type="xs:boolean" />
      <xs:element name="iFolderWeb" nillable="true" type="s0:iFolderWeb" />
      <xs:element name="int" type="xs:int" />
      <xs:element name="ArrayOfIFolderWeb" nillable="true" type="s0:ArrayOfIFolderWeb" />
      <xs:element name="iFolderUser" nillable="true" type="s0:iFolderUser" />
      <xs:element name="ArrayOfIFolderUser" nillable="true" type="s0:ArrayOfIFolderUser" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="DiskSpace" nillable="true" type="s0:DiskSpace" />
      <xs:element name="ArrayOfConflict" nillable="true" type="s0:ArrayOfConflict" />
      <xs:element name="SyncSize" nillable="true" type="s0:SyncSize" />
      <xs:element name="long" type="xs:long" />
    </xs:schema>
  </types>
  <message name="PingSoapIn">
    <part element="s0:Ping" name="parameters" />
  </message>
  <message name="PingSoapOut">
    <part element="s0:PingResponse" name="parameters" />
  </message>
  <message name="IsiFolderSoapIn">
    <part element="s0:IsiFolder" name="parameters" />
  </message>
  <message name="IsiFolderSoapOut">
    <part element="s0:IsiFolderResponse" name="parameters" />
  </message>
  <message name="CanBeiFolderSoapIn">
    <part element="s0:CanBeiFolder" name="parameters" />
  </message>
  <message name="CanBeiFolderSoapOut">
    <part element="s0:CanBeiFolderResponse" name="parameters" />
  </message>
  <message name="IsPathIniFolderSoapIn">
    <part element="s0:IsPathIniFolder" name="parameters" />
  </message>
  <message name="IsPathIniFolderSoapOut">
    <part element="s0:IsPathIniFolderResponse" name="parameters" />
  </message>
  <message name="CreateLocaliFolderSoapIn">
    <part element="s0:CreateLocaliFolder" name="parameters" />
  </message>
  <message name="CreateLocaliFolderSoapOut">
    <part element="s0:CreateLocaliFolderResponse" name="parameters" />
  </message>
  <message name="CreateiFolderInDomainEncrSoapIn">
    <part element="s0:CreateiFolderInDomainEncr" name="parameters" />
  </message>
  <message name="CreateiFolderInDomainEncrSoapOut">
    <part element="s0:CreateiFolderInDomainEncrResponse" name="parameters" />
  </message>
  <message name="CreateiFolderInDomainSoapIn">
    <part element="s0:CreateiFolderInDomain" name="parameters" />
  </message>
  <message name="CreateiFolderInDomainSoapOut">
    <part element="s0:CreateiFolderInDomainResponse" name="parameters" />
  </message>
  <message name="GetiFolderSoapIn">
    <part element="s0:GetiFolder" name="parameters" />
  </message>
  <message name="GetiFolderSoapOut">
    <part element="s0:GetiFolderResponse" name="parameters" />
  </message>
  <message name="GetSecurityPolicySoapIn">
    <part element="s0:GetSecurityPolicy" name="parameters" />
  </message>
  <message name="GetSecurityPolicySoapOut">
    <part element="s0:GetSecurityPolicyResponse" name="parameters" />
  </message>
  <message name="GetDisableSharingPolicySoapIn">
    <part element="s0:GetDisableSharingPolicy" name="parameters" />
  </message>
  <message name="GetDisableSharingPolicySoapOut">
    <part element="s0:GetDisableSharingPolicyResponse" name="parameters" />
  </message>
  <message name="IsTransferAllowedSoapIn">
    <part element="s0:IsTransferAllowed" name="parameters" />
  </message>
  <message name="IsTransferAllowedSoapOut">
    <part element="s0:IsTransferAllowedResponse" name="parameters" />
  </message>
  <message name="GetLimitPolicyStatusSoapIn">
    <part element="s0:GetLimitPolicyStatus" name="parameters" />
  </message>
  <message name="GetLimitPolicyStatusSoapOut">
    <part element="s0:GetLimitPolicyStatusResponse" name="parameters" />
  </message>
  <message name="GetiFolderInvitationSoapIn">
    <part element="s0:GetiFolderInvitation" name="parameters" />
  </message>
  <message name="GetiFolderInvitationSoapOut">
    <part element="s0:GetiFolderInvitationResponse" name="parameters" />
  </message>
  <message name="GetiFolderByLocalPathSoapIn">
    <part element="s0:GetiFolderByLocalPath" name="parameters" />
  </message>
  <message name="GetiFolderByLocalPathSoapOut">
    <part element="s0:GetiFolderByLocalPathResponse" name="parameters" />
  </message>
  <message name="DeleteiFolderSoapIn">
    <part element="s0:DeleteiFolder" name="parameters" />
  </message>
  <message name="DeleteiFolderSoapOut">
    <part element="s0:DeleteiFolderResponse" name="parameters" />
  </message>
  <message name="RevertiFolderSoapIn">
    <part element="s0:RevertiFolder" name="parameters" />
  </message>
  <message name="RevertiFolderSoapOut">
    <part element="s0:RevertiFolderResponse" name="parameters" />
  </message>
  <message name="RevertiFolder1SoapIn">
    <part element="s0:RevertiFolder1" name="parameters" />
  </message>
  <message name="RevertiFolder1SoapOut">
    <part element="s0:RevertiFolder1Response" name="parameters" />
  </message>
  <message name="GetAlliFoldersSoapIn">
    <part element="s0:GetAlliFolders" name="parameters" />
  </message>
  <message name="GetAlliFoldersSoapOut">
    <part element="s0:GetAlliFoldersResponse" name="parameters" />
  </message>
  <message name="GetAlliFolders1SoapIn">
    <part element="s0:GetAlliFolders1" name="parameters" />
  </message>
  <message name="GetAlliFolders1SoapOut">
    <part element="s0:GetAlliFolders1Response" name="parameters" />
  </message>
  <message name="GetiFoldersForDomainSoapIn">
    <part element="s0:GetiFoldersForDomain" name="parameters" />
  </message>
  <message name="GetiFoldersForDomainSoapOut">
    <part element="s0:GetiFoldersForDomainResponse" name="parameters" />
  </message>
  <message name="GetiFoldersSoapIn">
    <part element="s0:GetiFolders" name="parameters" />
  </message>
  <message name="GetiFoldersSoapOut">
    <part element="s0:GetiFoldersResponse" name="parameters" />
  </message>
  <message name="SetUserRightsSoapIn">
    <part element="s0:SetUserRights" name="parameters" />
  </message>
  <message name="SetUserRightsSoapOut">
    <part element="s0:SetUserRightsResponse" name="parameters" />
  </message>
  <message name="GetOwnerSoapIn">
    <part element="s0:GetOwner" name="parameters" />
  </message>
  <message name="GetOwnerSoapOut">
    <part element="s0:GetOwnerResponse" name="parameters" />
  </message>
  <message name="ChangeOwnerSoapIn">
    <part element="s0:ChangeOwner" name="parameters" />
  </message>
  <message name="ChangeOwnerSoapOut">
    <part element="s0:ChangeOwnerResponse" name="parameters" />
  </message>
  <message name="RemoveiFolderUserSoapIn">
    <part element="s0:RemoveiFolderUser" name="parameters" />
  </message>
  <message name="RemoveiFolderUserSoapOut">
    <part element="s0:RemoveiFolderUserResponse" name="parameters" />
  </message>
  <message name="GetiFolderUsersSoapIn">
    <part element="s0:GetiFolderUsers" name="parameters" />
  </message>
  <message name="GetiFolderUsersSoapOut">
    <part element="s0:GetiFolderUsersResponse" name="parameters" />
  </message>
  <message name="GetDomainUsersSoapIn">
    <part element="s0:GetDomainUsers" name="parameters" />
  </message>
  <message name="GetDomainUsersSoapOut">
    <part element="s0:GetDomainUsersResponse" name="parameters" />
  </message>
  <message name="SearchForDomainUsersSoapIn">
    <part element="s0:SearchForDomainUsers" name="parameters" />
  </message>
  <message name="SearchForDomainUsersSoapOut">
    <part element="s0:SearchForDomainUsersResponse" name="parameters" />
  </message>
  <message name="FindCloseiFolderMembersSoapIn">
    <part element="s0:FindCloseiFolderMembers" name="parameters" />
  </message>
  <message name="FindCloseiFolderMembersSoapOut">
    <part element="s0:FindCloseiFolderMembersResponse" name="parameters" />
  </message>
  <message name="FindFirstiFolderMembersSoapIn">
    <part element="s0:FindFirstiFolderMembers" name="parameters" />
  </message>
  <message name="FindFirstiFolderMembersSoapOut">
    <part element="s0:FindFirstiFolderMembersResponse" name="parameters" />
  </message>
  <message name="FindFirstSpecificiFolderMembersSoapIn">
    <part element="s0:FindFirstSpecificiFolderMembers" name="parameters" />
  </message>
  <message name="FindFirstSpecificiFolderMembersSoapOut">
    <part element="s0:FindFirstSpecificiFolderMembersResponse" name="parameters" />
  </message>
  <message name="FindNextiFolderMembersSoapIn">
    <part element="s0:FindNextiFolderMembers" name="parameters" />
  </message>
  <message name="FindNextiFolderMembersSoapOut">
    <part element="s0:FindNextiFolderMembersResponse" name="parameters" />
  </message>
  <message name="FindPreviousiFolderMembersSoapIn">
    <part element="s0:FindPreviousiFolderMembers" name="parameters" />
  </message>
  <message name="FindPreviousiFolderMembersSoapOut">
    <part element="s0:FindPreviousiFolderMembersResponse" name="parameters" />
  </message>
  <message name="FindSeekiFolderMembersSoapIn">
    <part element="s0:FindSeekiFolderMembers" name="parameters" />
  </message>
  <message name="FindSeekiFolderMembersSoapOut">
    <part element="s0:FindSeekiFolderMembersResponse" name="parameters" />
  </message>
  <message name="GetiFolderUserSoapIn">
    <part element="s0:GetiFolderUser" name="parameters" />
  </message>
  <message name="GetiFolderUserSoapOut">
    <part element="s0:GetiFolderUserResponse" name="parameters" />
  </message>
  <message name="GetRANameSoapIn">
    <part element="s0:GetRAName" name="parameters" />
  </message>
  <message name="GetRANameSoapOut">
    <part element="s0:GetRANameResponse" name="parameters" />
  </message>
  <message name="GetiFolderUserFromNodeIDSoapIn">
    <part element="s0:GetiFolderUserFromNodeID" name="parameters" />
  </message>
  <message name="GetiFolderUserFromNodeIDSoapOut">
    <part element="s0:GetiFolderUserFromNodeIDResponse" name="parameters" />
  </message>
  <message name="AddAndInviteUserSoapIn">
    <part element="s0:AddAndInviteUser" name="parameters" />
  </message>
  <message name="AddAndInviteUserSoapOut">
    <part element="s0:AddAndInviteUserResponse" name="parameters" />
  </message>
  <message name="InviteUserSoapIn">
    <part element="s0:InviteUser" name="parameters" />
  </message>
  <message name="InviteUserSoapOut">
    <part element="s0:InviteUserResponse" name="parameters" />
  </message>
  <message name="MergeiFolderSoapIn">
    <part element="s0:MergeiFolder" name="parameters" />
  </message>
  <message name="MergeiFolderSoapOut">
    <part element="s0:MergeiFolderResponse" name="parameters" />
  </message>
  <message name="AcceptiFolderInvitationSoapIn">
    <part element="s0:AcceptiFolderInvitation" name="parameters" />
  </message>
  <message name="AcceptiFolderInvitationSoapOut">
    <part element="s0:AcceptiFolderInvitationResponse" name="parameters" />
  </message>
  <message name="AcceptiFolderInvitation1SoapIn">
    <part element="s0:AcceptiFolderInvitation1" name="parameters" />
  </message>
  <message name="AcceptiFolderInvitation1SoapOut">
    <part element="s0:AcceptiFolderInvitation1Response" name="parameters" />
  </message>
  <message name="DeclineiFolderInvitationSoapIn">
    <part element="s0:DeclineiFolderInvitation" name="parameters" />
  </message>
  <message name="DeclineiFolderInvitationSoapOut">
    <part element="s0:DeclineiFolderInvitationResponse" name="parameters" />
  </message>
  <message name="GetUserDiskSpaceSoapIn">
    <part element="s0:GetUserDiskSpace" name="parameters" />
  </message>
  <message name="GetUserDiskSpaceSoapOut">
    <part element="s0:GetUserDiskSpaceResponse" name="parameters" />
  </message>
  <message name="GetiFolderDiskSpaceSoapIn">
    <part element="s0:GetiFolderDiskSpace" name="parameters" />
  </message>
  <message name="GetiFolderDiskSpaceSoapOut">
    <part element="s0:GetiFolderDiskSpaceResponse" name="parameters" />
  </message>
  <message name="SetUserDiskSpaceLimitSoapIn">
    <part element="s0:SetUserDiskSpaceLimit" name="parameters" />
  </message>
  <message name="SetUserDiskSpaceLimitSoapOut">
    <part element="s0:SetUserDiskSpaceLimitResponse" name="parameters" />
  </message>
  <message name="SetiFolderDiskSpaceLimitSoapIn">
    <part element="s0:SetiFolderDiskSpaceLimit" name="parameters" />
  </message>
  <message name="SetiFolderDiskSpaceLimitSoapOut">
    <part element="s0:SetiFolderDiskSpaceLimitResponse" name="parameters" />
  </message>
  <message name="SetiFolderSyncIntervalSoapIn">
    <part element="s0:SetiFolderSyncInterval" name="parameters" />
  </message>
  <message name="SetiFolderSyncIntervalSoapOut">
    <part element="s0:SetiFolderSyncIntervalResponse" name="parameters" />
  </message>
  <message name="SetDefaultSyncIntervalSoapIn">
    <part element="s0:SetDefaultSyncInterval" name="parameters" />
  </message>
  <message name="SetDefaultSyncIntervalSoapOut">
    <part element="s0:SetDefaultSyncIntervalResponse" name="parameters" />
  </message>
  <message name="GetDefaultSyncIntervalSoapIn">
    <part element="s0:GetDefaultSyncInterval" name="parameters" />
  </message>
  <message name="GetDefaultSyncIntervalSoapOut">
    <part element="s0:GetDefaultSyncIntervalResponse" name="parameters" />
  </message>
  <message name="AuthenticateToDomainSoapIn">
    <part element="s0:AuthenticateToDomain" name="parameters" />
  </message>
  <message name="AuthenticateToDomainSoapOut">
    <part element="s0:AuthenticateToDomainResponse" name="parameters" />
  </message>
  <message name="GetiFolderConflictsSoapIn">
    <part element="s0:GetiFolderConflicts" name="parameters" />
  </message>
  <message name="GetiFolderConflictsSoapOut">
    <part element="s0:GetiFolderConflictsResponse" name="parameters" />
  </message>
  <message name="ResolveFileConflictSoapIn">
    <part element="s0:ResolveFileConflict" name="parameters" />
  </message>
  <message name="ResolveFileConflictSoapOut">
    <part element="s0:ResolveFileConflictResponse" name="parameters" />
  </message>
  <message name="ResolveEnhancedFileConflictSoapIn">
    <part element="s0:ResolveEnhancedFileConflict" name="parameters" />
  </message>
  <message name="ResolveEnhancedFileConflictSoapOut">
    <part element="s0:ResolveEnhancedFileConflictResponse" name="parameters" />
  </message>
  <message name="ResolveNameConflictSoapIn">
    <part element="s0:ResolveNameConflict" name="parameters" />
  </message>
  <message name="ResolveNameConflictSoapOut">
    <part element="s0:ResolveNameConflictResponse" name="parameters" />
  </message>
  <message name="RenameAndResolveConflictSoapIn">
    <part element="s0:RenameAndResolveConflict" name="parameters" />
  </message>
  <message name="RenameAndResolveConflictSoapOut">
    <part element="s0:RenameAndResolveConflictResponse" name="parameters" />
  </message>
  <message name="SetupProxySoapIn">
    <part element="s0:SetupProxy" name="parameters" />
  </message>
  <message name="SetupProxySoapOut">
    <part element="s0:SetupProxyResponse" name="parameters" />
  </message>
  <message name="RemoveProxySoapIn">
    <part element="s0:RemoveProxy" name="parameters" />
  </message>
  <message name="RemoveProxySoapOut">
    <part element="s0:RemoveProxyResponse" name="parameters" />
  </message>
  <message name="CalculateSyncSizeSoapIn">
    <part element="s0:CalculateSyncSize" name="parameters" />
  </message>
  <message name="CalculateSyncSizeSoapOut">
    <part element="s0:CalculateSyncSizeResponse" name="parameters" />
  </message>
  <message name="SynciFolderNowSoapIn">
    <part element="s0:SynciFolderNow" name="parameters" />
  </message>
  <message name="SynciFolderNowSoapOut">
    <part element="s0:SynciFolderNowResponse" name="parameters" />
  </message>
  <message name="DeleteiFolderFileSizeLimitSoapIn">
    <part element="s0:DeleteiFolderFileSizeLimit" name="parameters" />
  </message>
  <message name="DeleteiFolderFileSizeLimitSoapOut">
    <part element="s0:DeleteiFolderFileSizeLimitResponse" name="parameters" />
  </message>
  <message name="GetMemberiFolderFileSizeLimitSoapIn">
    <part element="s0:GetMemberiFolderFileSizeLimit" name="parameters" />
  </message>
  <message name="GetMemberiFolderFileSizeLimitSoapOut">
    <part element="s0:GetMemberiFolderFileSizeLimitResponse" name="parameters" />
  </message>
  <message name="GetiFolderFileSizeLimitSoapIn">
    <part element="s0:GetiFolderFileSizeLimit" name="parameters" />
  </message>
  <message name="GetiFolderFileSizeLimitSoapOut">
    <part element="s0:GetiFolderFileSizeLimitResponse" name="parameters" />
  </message>
  <message name="SetiFolderFileSizeLimitSoapIn">
    <part element="s0:SetiFolderFileSizeLimit" name="parameters" />
  </message>
  <message name="SetiFolderFileSizeLimitSoapOut">
    <part element="s0:SetiFolderFileSizeLimitResponse" name="parameters" />
  </message>
  <message name="CheckForUpdatedClientAvailableSoapIn">
    <part element="s0:CheckForUpdatedClientAvailable" name="parameters" />
  </message>
  <message name="CheckForUpdatedClientAvailableSoapOut">
    <part element="s0:CheckForUpdatedClientAvailableResponse" name="parameters" />
  </message>
  <message name="CheckForUpdatedClientSoapIn">
    <part element="s0:CheckForUpdatedClient" name="parameters" />
  </message>
  <message name="CheckForUpdatedClientSoapOut">
    <part element="s0:CheckForUpdatedClientResponse" name="parameters" />
  </message>
  <message name="CheckForUpdateSoapIn">
    <part element="s0:CheckForUpdate" name="parameters" />
  </message>
  <message name="CheckForUpdateSoapOut">
    <part element="s0:CheckForUpdateResponse" name="parameters" />
  </message>
  <message name="CheckForServerUpdateSoapIn">
    <part element="s0:CheckForServerUpdate" name="parameters" />
  </message>
  <message name="CheckForServerUpdateSoapOut">
    <part element="s0:CheckForServerUpdateResponse" name="parameters" />
  </message>
  <message name="RunClientUpdateSoapIn">
    <part element="s0:RunClientUpdate" name="parameters" />
  </message>
  <message name="RunClientUpdateSoapOut">
    <part element="s0:RunClientUpdateResponse" name="parameters" />
  </message>
  <message name="PingHttpGetIn" />
  <message name="PingHttpGetOut" />
  <message name="IsiFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsiFolderHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="CanBeiFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="CanBeiFolderHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="IsPathIniFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsPathIniFolderHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="CreateLocaliFolderHttpGetIn">
    <part name="Path" type="s:string" />
  </message>
  <message name="CreateLocaliFolderHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="CreateiFolderInDomainEncrHttpGetIn">
    <part name="Path" type="s:string" />
    <part name="DomainID" type="s:string" />
    <part name="SSL" type="s:boolean" />
    <part name="EncryptionAlgorithm" type="s:string" />
    <part name="Passphrase" type="s:string" />
  </message>
  <message name="CreateiFolderInDomainEncrHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="CreateiFolderInDomainHttpGetIn">
    <part name="Path" type="s:string" />
    <part name="DomainID" type="s:string" />
  </message>
  <message name="CreateiFolderInDomainHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetiFolderHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetSecurityPolicyHttpGetIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetSecurityPolicyHttpGetOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetDisableSharingPolicyHttpGetIn">
    <part name="currentUserID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="OwnerID" type="s:string" />
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetDisableSharingPolicyHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="IsTransferAllowedHttpGetIn">
    <part name="newUserID" type="s:string" />
  </message>
  <message name="IsTransferAllowedHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="GetLimitPolicyStatusHttpGetIn" />
  <message name="GetLimitPolicyStatusHttpGetOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetiFolderInvitationHttpGetIn">
    <part name="POBoxID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderInvitationHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetiFolderByLocalPathHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="GetiFolderByLocalPathHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="DeleteiFolderHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderHttpGetOut" />
  <message name="RevertiFolderHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolderHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="RevertiFolder1HttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolder1HttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetAlliFoldersHttpGetIn" />
  <message name="GetAlliFoldersHttpGetOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetAlliFolders1HttpGetIn" />
  <message name="GetAlliFolders1HttpGetOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetiFoldersForDomainHttpGetIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetiFoldersForDomainHttpGetOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetiFoldersHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFoldersHttpGetOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="SetUserRightsHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="SetUserRightsHttpGetOut" />
  <message name="GetOwnerHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetOwnerHttpGetOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="ChangeOwnerHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="NewOwnerUserID" type="s:string" />
    <part name="OldOwnerRights" type="s:string" />
  </message>
  <message name="ChangeOwnerHttpGetOut" />
  <message name="RemoveiFolderUserHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
  </message>
  <message name="RemoveiFolderUserHttpGetOut" />
  <message name="GetiFolderUsersHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderUsersHttpGetOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="GetDomainUsersHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="numUsers" type="s:int" />
  </message>
  <message name="GetDomainUsersHttpGetOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="SearchForDomainUsersHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="SearchString" type="s:string" />
  </message>
  <message name="SearchForDomainUsersHttpGetOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="FindCloseiFolderMembersHttpGetIn">
    <part name="domainID" type="s:string" />
    <part name="searchContext" type="s:string" />
  </message>
  <message name="FindCloseiFolderMembersHttpGetOut" />
  <message name="GetiFolderUserHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFolderUserHttpGetOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="GetRANameHttpGetIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetRANameHttpGetOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetIn">
    <part name="CollectionID" type="s:string" />
    <part name="NodeID" type="s:string" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="AddAndInviteUserHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="MemberName" type="s:string" />
    <part name="GivenName" type="s:string" />
    <part name="FamilyName" type="s:string" />
    <part name="MemberID" type="s:string" />
    <part name="PublicKey" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="AddAndInviteUserHttpGetOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="InviteUserHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="InviteUserHttpGetOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="MergeiFolderHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="path" type="s:string" />
  </message>
  <message name="MergeiFolderHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="AcceptiFolderInvitationHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitationHttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="AcceptiFolderInvitation1HttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitation1HttpGetOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="DeclineiFolderInvitationHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeclineiFolderInvitationHttpGetOut" />
  <message name="GetUserDiskSpaceHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetUserDiskSpaceHttpGetOut">
    <part element="s0:DiskSpace" name="Body" />
  </message>
  <message name="GetiFolderDiskSpaceHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderDiskSpaceHttpGetOut">
    <part element="s0:DiskSpace" name="Body" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetOut" />
  <message name="SetiFolderDiskSpaceLimitHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpGetOut" />
  <message name="SetiFolderSyncIntervalHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetiFolderSyncIntervalHttpGetOut" />
  <message name="SetDefaultSyncIntervalHttpGetIn">
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetDefaultSyncIntervalHttpGetOut" />
  <message name="GetDefaultSyncIntervalHttpGetIn" />
  <message name="GetDefaultSyncIntervalHttpGetOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="AuthenticateToDomainHttpGetIn">
    <part name="DomainID" type="s:string" />
    <part name="Password" type="s:string" />
  </message>
  <message name="AuthenticateToDomainHttpGetOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetiFolderConflictsHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderConflictsHttpGetOut">
    <part element="s0:ArrayOfConflict" name="Body" />
  </message>
  <message name="ResolveFileConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
  </message>
  <message name="ResolveFileConflictHttpGetOut" />
  <message name="ResolveEnhancedFileConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
    <part name="conflictBinPath" type="s:string" />
  </message>
  <message name="ResolveEnhancedFileConflictHttpGetOut" />
  <message name="ResolveNameConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newLocalName" type="s:string" />
  </message>
  <message name="ResolveNameConflictHttpGetOut" />
  <message name="RenameAndResolveConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newFileName" type="s:string" />
  </message>
  <message name="RenameAndResolveConflictHttpGetOut" />
  <message name="SetupProxyHttpGetIn">
    <part name="Host" type="s:string" />
    <part name="Port" type="s:int" />
  </message>
  <message name="SetupProxyHttpGetOut" />
  <message name="RemoveProxyHttpGetIn" />
  <message name="RemoveProxyHttpGetOut" />
  <message name="CalculateSyncSizeHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="CalculateSyncSizeHttpGetOut">
    <part element="s0:SyncSize" name="Body" />
  </message>
  <message name="SynciFolderNowHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="SynciFolderNowHttpGetOut" />
  <message name="DeleteiFolderFileSizeLimitHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderFileSizeLimitHttpGetOut" />
  <message name="GetMemberiFolderFileSizeLimitHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetMemberiFolderFileSizeLimitHttpGetOut">
    <part element="s0:long" name="Body" />
  </message>
  <message name="GetiFolderFileSizeLimitHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderFileSizeLimitHttpGetOut">
    <part element="s0:long" name="Body" />
  </message>
  <message name="SetiFolderFileSizeLimitHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderFileSizeLimitHttpGetOut" />
  <message name="CheckForUpdatedClientAvailableHttpGetIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForUpdatedClientAvailableHttpGetOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="CheckForUpdatedClientHttpGetIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForUpdatedClientHttpGetOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="CheckForServerUpdateHttpGetIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForServerUpdateHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="RunClientUpdateHttpGetIn">
    <part name="domainID" type="s:string" />
    <part name="path" type="s:string" />
  </message>
  <message name="RunClientUpdateHttpGetOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="PingHttpPostIn" />
  <message name="PingHttpPostOut" />
  <message name="IsiFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsiFolderHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="CanBeiFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="CanBeiFolderHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="IsPathIniFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsPathIniFolderHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="CreateLocaliFolderHttpPostIn">
    <part name="Path" type="s:string" />
  </message>
  <message name="CreateLocaliFolderHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="CreateiFolderInDomainEncrHttpPostIn">
    <part name="Path" type="s:string" />
    <part name="DomainID" type="s:string" />
    <part name="SSL" type="s:boolean" />
    <part name="EncryptionAlgorithm" type="s:string" />
    <part name="Passphrase" type="s:string" />
  </message>
  <message name="CreateiFolderInDomainEncrHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="CreateiFolderInDomainHttpPostIn">
    <part name="Path" type="s:string" />
    <part name="DomainID" type="s:string" />
  </message>
  <message name="CreateiFolderInDomainHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetiFolderHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetSecurityPolicyHttpPostIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetSecurityPolicyHttpPostOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetDisableSharingPolicyHttpPostIn">
    <part name="currentUserID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="OwnerID" type="s:string" />
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetDisableSharingPolicyHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="IsTransferAllowedHttpPostIn">
    <part name="newUserID" type="s:string" />
  </message>
  <message name="IsTransferAllowedHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="GetLimitPolicyStatusHttpPostIn" />
  <message name="GetLimitPolicyStatusHttpPostOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetiFolderInvitationHttpPostIn">
    <part name="POBoxID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderInvitationHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetiFolderByLocalPathHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="GetiFolderByLocalPathHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="DeleteiFolderHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderHttpPostOut" />
  <message name="RevertiFolderHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolderHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="RevertiFolder1HttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolder1HttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="GetAlliFoldersHttpPostIn" />
  <message name="GetAlliFoldersHttpPostOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetAlliFolders1HttpPostIn" />
  <message name="GetAlliFolders1HttpPostOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetiFoldersForDomainHttpPostIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetiFoldersForDomainHttpPostOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="GetiFoldersHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFoldersHttpPostOut">
    <part element="s0:ArrayOfIFolderWeb" name="Body" />
  </message>
  <message name="SetUserRightsHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="SetUserRightsHttpPostOut" />
  <message name="GetOwnerHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetOwnerHttpPostOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="ChangeOwnerHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="NewOwnerUserID" type="s:string" />
    <part name="OldOwnerRights" type="s:string" />
  </message>
  <message name="ChangeOwnerHttpPostOut" />
  <message name="RemoveiFolderUserHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
  </message>
  <message name="RemoveiFolderUserHttpPostOut" />
  <message name="GetiFolderUsersHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderUsersHttpPostOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="GetDomainUsersHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="numUsers" type="s:int" />
  </message>
  <message name="GetDomainUsersHttpPostOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="SearchForDomainUsersHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="SearchString" type="s:string" />
  </message>
  <message name="SearchForDomainUsersHttpPostOut">
    <part element="s0:ArrayOfIFolderUser" name="Body" />
  </message>
  <message name="FindCloseiFolderMembersHttpPostIn">
    <part name="domainID" type="s:string" />
    <part name="searchContext" type="s:string" />
  </message>
  <message name="FindCloseiFolderMembersHttpPostOut" />
  <message name="GetiFolderUserHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFolderUserHttpPostOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="GetRANameHttpPostIn">
    <part name="DomainID" type="s:string" />
  </message>
  <message name="GetRANameHttpPostOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostIn">
    <part name="CollectionID" type="s:string" />
    <part name="NodeID" type="s:string" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="AddAndInviteUserHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="MemberName" type="s:string" />
    <part name="GivenName" type="s:string" />
    <part name="FamilyName" type="s:string" />
    <part name="MemberID" type="s:string" />
    <part name="PublicKey" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="AddAndInviteUserHttpPostOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="InviteUserHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="InviteUserHttpPostOut">
    <part element="s0:iFolderUser" name="Body" />
  </message>
  <message name="MergeiFolderHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="path" type="s:string" />
  </message>
  <message name="MergeiFolderHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="AcceptiFolderInvitationHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitationHttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="AcceptiFolderInvitation1HttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitation1HttpPostOut">
    <part element="s0:iFolderWeb" name="Body" />
  </message>
  <message name="DeclineiFolderInvitationHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeclineiFolderInvitationHttpPostOut" />
  <message name="GetUserDiskSpaceHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetUserDiskSpaceHttpPostOut">
    <part element="s0:DiskSpace" name="Body" />
  </message>
  <message name="GetiFolderDiskSpaceHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderDiskSpaceHttpPostOut">
    <part element="s0:DiskSpace" name="Body" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostOut" />
  <message name="SetiFolderDiskSpaceLimitHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpPostOut" />
  <message name="SetiFolderSyncIntervalHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetiFolderSyncIntervalHttpPostOut" />
  <message name="SetDefaultSyncIntervalHttpPostIn">
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetDefaultSyncIntervalHttpPostOut" />
  <message name="GetDefaultSyncIntervalHttpPostIn" />
  <message name="GetDefaultSyncIntervalHttpPostOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="AuthenticateToDomainHttpPostIn">
    <part name="DomainID" type="s:string" />
    <part name="Password" type="s:string" />
  </message>
  <message name="AuthenticateToDomainHttpPostOut">
    <part element="s0:int" name="Body" />
  </message>
  <message name="GetiFolderConflictsHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderConflictsHttpPostOut">
    <part element="s0:ArrayOfConflict" name="Body" />
  </message>
  <message name="ResolveFileConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
  </message>
  <message name="ResolveFileConflictHttpPostOut" />
  <message name="ResolveEnhancedFileConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
    <part name="conflictBinPath" type="s:string" />
  </message>
  <message name="ResolveEnhancedFileConflictHttpPostOut" />
  <message name="ResolveNameConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newLocalName" type="s:string" />
  </message>
  <message name="ResolveNameConflictHttpPostOut" />
  <message name="RenameAndResolveConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newFileName" type="s:string" />
  </message>
  <message name="RenameAndResolveConflictHttpPostOut" />
  <message name="SetupProxyHttpPostIn">
    <part name="Host" type="s:string" />
    <part name="Port" type="s:int" />
  </message>
  <message name="SetupProxyHttpPostOut" />
  <message name="RemoveProxyHttpPostIn" />
  <message name="RemoveProxyHttpPostOut" />
  <message name="CalculateSyncSizeHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="CalculateSyncSizeHttpPostOut">
    <part element="s0:SyncSize" name="Body" />
  </message>
  <message name="SynciFolderNowHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="SynciFolderNowHttpPostOut" />
  <message name="DeleteiFolderFileSizeLimitHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderFileSizeLimitHttpPostOut" />
  <message name="GetMemberiFolderFileSizeLimitHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetMemberiFolderFileSizeLimitHttpPostOut">
    <part element="s0:long" name="Body" />
  </message>
  <message name="GetiFolderFileSizeLimitHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderFileSizeLimitHttpPostOut">
    <part element="s0:long" name="Body" />
  </message>
  <message name="SetiFolderFileSizeLimitHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderFileSizeLimitHttpPostOut" />
  <message name="CheckForUpdatedClientAvailableHttpPostIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForUpdatedClientAvailableHttpPostOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="CheckForUpdatedClientHttpPostIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForUpdatedClientHttpPostOut">
    <part element="s0:string" name="Body" />
  </message>
  <message name="CheckForServerUpdateHttpPostIn">
    <part name="domainID" type="s:string" />
  </message>
  <message name="CheckForServerUpdateHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <message name="RunClientUpdateHttpPostIn">
    <part name="domainID" type="s:string" />
    <part name="path" type="s:string" />
  </message>
  <message name="RunClientUpdateHttpPostOut">
    <part element="s0:boolean" name="Body" />
  </message>
  <portType name="iFolderWebServiceSoap">
    <operation name="Ping">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingSoapIn" />
      <output message="s0:PingSoapOut" />
    </operation>
    <operation name="IsiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <input message="s0:IsiFolderSoapIn" />
      <output message="s0:IsiFolderSoapOut" />
    </operation>
    <operation name="CanBeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <input message="s0:CanBeiFolderSoapIn" />
      <output message="s0:CanBeiFolderSoapOut" />
    </operation>
    <operation name="IsPathIniFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <input message="s0:IsPathIniFolderSoapIn" />
      <output message="s0:IsPathIniFolderSoapOut" />
    </operation>
    <operation name="CreateLocaliFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateLocaliFolderSoapIn" />
      <output message="s0:CreateLocaliFolderSoapOut" />
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainEncrSoapIn" />
      <output message="s0:CreateiFolderInDomainEncrSoapOut" />
    </operation>
    <operation name="CreateiFolderInDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainSoapIn" />
      <output message="s0:CreateiFolderInDomainSoapOut" />
    </operation>
    <operation name="GetiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderSoapIn" />
      <output message="s0:GetiFolderSoapOut" />
    </operation>
    <operation name="GetSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetSecurityPolicySoapIn" />
      <output message="s0:GetSecurityPolicySoapOut" />
    </operation>
    <operation name="GetDisableSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetDisableSharingPolicySoapIn" />
      <output message="s0:GetDisableSharingPolicySoapOut" />
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <input message="s0:IsTransferAllowedSoapIn" />
      <output message="s0:IsTransferAllowedSoapOut" />
    </operation>
    <operation name="GetLimitPolicyStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <input message="s0:GetLimitPolicyStatusSoapIn" />
      <output message="s0:GetLimitPolicyStatusSoapOut" />
    </operation>
    <operation name="GetiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderInvitationSoapIn" />
      <output message="s0:GetiFolderInvitationSoapOut" />
    </operation>
    <operation name="GetiFolderByLocalPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <input message="s0:GetiFolderByLocalPathSoapIn" />
      <output message="s0:GetiFolderByLocalPathSoapOut" />
    </operation>
    <operation name="DeleteiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderSoapIn" />
      <output message="s0:DeleteiFolderSoapOut" />
    </operation>
    <operation name="RevertiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolderSoapIn" />
      <output message="s0:RevertiFolderSoapOut" />
    </operation>
    <operation name="RevertiFolder1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolder1SoapIn" />
      <output message="s0:RevertiFolder1SoapOut" />
    </operation>
    <operation name="GetAlliFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFoldersSoapIn" />
      <output message="s0:GetAlliFoldersSoapOut" />
    </operation>
    <operation name="GetAlliFolders1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFolders1SoapIn" />
      <output message="s0:GetAlliFolders1SoapOut" />
    </operation>
    <operation name="GetiFoldersForDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <input message="s0:GetiFoldersForDomainSoapIn" />
      <output message="s0:GetiFoldersForDomainSoapOut" />
    </operation>
    <operation name="GetiFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <input message="s0:GetiFoldersSoapIn" />
      <output message="s0:GetiFoldersSoapOut" />
    </operation>
    <operation name="SetUserRights">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <input message="s0:SetUserRightsSoapIn" />
      <output message="s0:SetUserRightsSoapOut" />
    </operation>
    <operation name="GetOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <input message="s0:GetOwnerSoapIn" />
      <output message="s0:GetOwnerSoapOut" />
    </operation>
    <operation name="ChangeOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <input message="s0:ChangeOwnerSoapIn" />
      <output message="s0:ChangeOwnerSoapOut" />
    </operation>
    <operation name="RemoveiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <input message="s0:RemoveiFolderUserSoapIn" />
      <output message="s0:RemoveiFolderUserSoapOut" />
    </operation>
    <operation name="GetiFolderUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <input message="s0:GetiFolderUsersSoapIn" />
      <output message="s0:GetiFolderUsersSoapOut" />
    </operation>
    <operation name="GetDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <input message="s0:GetDomainUsersSoapIn" />
      <output message="s0:GetDomainUsersSoapOut" />
    </operation>
    <operation name="SearchForDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <input message="s0:SearchForDomainUsersSoapIn" />
      <output message="s0:SearchForDomainUsersSoapOut" />
    </operation>
    <operation name="FindCloseiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseiFolderMembersSoapIn" />
      <output message="s0:FindCloseiFolderMembersSoapOut" />
    </operation>
    <operation name="FindFirstiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for all domain members.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for all domain members.</wsdl:documentation>
      <input message="s0:FindFirstiFolderMembersSoapIn" />
      <output message="s0:FindFirstiFolderMembersSoapOut" />
    </operation>
    <operation name="FindFirstSpecificiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for a specific set of domain members.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Starts a search for a specific set of domain members.</wsdl:documentation>
      <input message="s0:FindFirstSpecificiFolderMembersSoapIn" />
      <output message="s0:FindFirstSpecificiFolderMembersSoapOut" />
    </operation>
    <operation name="FindNextiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the current record location.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the current record location.</wsdl:documentation>
      <input message="s0:FindNextiFolderMembersSoapIn" />
      <output message="s0:FindNextiFolderMembersSoapOut" />
    </operation>
    <operation name="FindPreviousiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members previous to the current record location.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members previous to the current record location.</wsdl:documentation>
      <input message="s0:FindPreviousiFolderMembersSoapIn" />
      <output message="s0:FindPreviousiFolderMembersSoapOut" />
    </operation>
    <operation name="FindSeekiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the specified record location.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the specified record location.</wsdl:documentation>
      <input message="s0:FindSeekiFolderMembersSoapIn" />
      <output message="s0:FindSeekiFolderMembersSoapOut" />
    </operation>
    <operation name="GetiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetiFolderUserSoapIn" />
      <output message="s0:GetiFolderUserSoapOut" />
    </operation>
    <operation name="GetRAName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetRANameSoapIn" />
      <output message="s0:GetRANameSoapOut" />
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <input message="s0:GetiFolderUserFromNodeIDSoapIn" />
      <output message="s0:GetiFolderUserFromNodeIDSoapOut" />
    </operation>
    <operation name="AddAndInviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:AddAndInviteUserSoapIn" />
      <output message="s0:AddAndInviteUserSoapOut" />
    </operation>
    <operation name="InviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:InviteUserSoapIn" />
      <output message="s0:InviteUserSoapOut" />
    </operation>
    <operation name="MergeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:MergeiFolderSoapIn" />
      <output message="s0:MergeiFolderSoapOut" />
    </operation>
    <operation name="AcceptiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitationSoapIn" />
      <output message="s0:AcceptiFolderInvitationSoapOut" />
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitation1SoapIn" />
      <output message="s0:AcceptiFolderInvitation1SoapOut" />
    </operation>
    <operation name="DeclineiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:DeclineiFolderInvitationSoapIn" />
      <output message="s0:DeclineiFolderInvitationSoapOut" />
    </operation>
    <operation name="GetUserDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <input message="s0:GetUserDiskSpaceSoapIn" />
      <output message="s0:GetUserDiskSpaceSoapOut" />
    </operation>
    <operation name="GetiFolderDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderDiskSpaceSoapIn" />
      <output message="s0:GetiFolderDiskSpaceSoapOut" />
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <input message="s0:SetUserDiskSpaceLimitSoapIn" />
      <output message="s0:SetUserDiskSpaceLimitSoapOut" />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderDiskSpaceLimitSoapIn" />
      <output message="s0:SetiFolderDiskSpaceLimitSoapOut" />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderSyncIntervalSoapIn" />
      <output message="s0:SetiFolderSyncIntervalSoapOut" />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <input message="s0:SetDefaultSyncIntervalSoapIn" />
      <output message="s0:SetDefaultSyncIntervalSoapOut" />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <input message="s0:GetDefaultSyncIntervalSoapIn" />
      <output message="s0:GetDefaultSyncIntervalSoapOut" />
    </operation>
    <operation name="AuthenticateToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <input message="s0:AuthenticateToDomainSoapIn" />
      <output message="s0:AuthenticateToDomainSoapOut" />
    </operation>
    <operation name="GetiFolderConflicts">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <input message="s0:GetiFolderConflictsSoapIn" />
      <output message="s0:GetiFolderConflictsSoapOut" />
    </operation>
    <operation name="ResolveFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveFileConflictSoapIn" />
      <output message="s0:ResolveFileConflictSoapOut" />
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveEnhancedFileConflictSoapIn" />
      <output message="s0:ResolveEnhancedFileConflictSoapOut" />
    </operation>
    <operation name="ResolveNameConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <input message="s0:ResolveNameConflictSoapIn" />
      <output message="s0:ResolveNameConflictSoapOut" />
    </operation>
    <operation name="RenameAndResolveConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <input message="s0:RenameAndResolveConflictSoapIn" />
      <output message="s0:RenameAndResolveConflictSoapOut" />
    </operation>
    <operation name="SetupProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <input message="s0:SetupProxySoapIn" />
      <output message="s0:SetupProxySoapOut" />
    </operation>
    <operation name="RemoveProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <input message="s0:RemoveProxySoapIn" />
      <output message="s0:RemoveProxySoapOut" />
    </operation>
    <operation name="CalculateSyncSize">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <input message="s0:CalculateSyncSizeSoapIn" />
      <output message="s0:CalculateSyncSizeSoapOut" />
    </operation>
    <operation name="SynciFolderNow">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <input message="s0:SynciFolderNowSoapIn" />
      <output message="s0:SynciFolderNowSoapOut" />
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderFileSizeLimitSoapIn" />
      <output message="s0:DeleteiFolderFileSizeLimitSoapOut" />
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <input message="s0:GetMemberiFolderFileSizeLimitSoapIn" />
      <output message="s0:GetMemberiFolderFileSizeLimitSoapOut" />
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderFileSizeLimitSoapIn" />
      <output message="s0:GetiFolderFileSizeLimitSoapOut" />
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderFileSizeLimitSoapIn" />
      <output message="s0:SetiFolderFileSizeLimitSoapOut" />
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientAvailableSoapIn" />
      <output message="s0:CheckForUpdatedClientAvailableSoapOut" />
    </operation>
    <operation name="CheckForUpdatedClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientSoapIn" />
      <output message="s0:CheckForUpdatedClientSoapOut" />
    </operation>
    <operation name="CheckForUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdateSoapIn" />
      <output message="s0:CheckForUpdateSoapOut" />
    </operation>
    <operation name="CheckForServerUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForServerUpdateSoapIn" />
      <output message="s0:CheckForServerUpdateSoapOut" />
    </operation>
    <operation name="RunClientUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <input message="s0:RunClientUpdateSoapIn" />
      <output message="s0:RunClientUpdateSoapOut" />
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpGet">
    <operation name="Ping">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingHttpGetIn" />
      <output message="s0:PingHttpGetOut" />
    </operation>
    <operation name="IsiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <input message="s0:IsiFolderHttpGetIn" />
      <output message="s0:IsiFolderHttpGetOut" />
    </operation>
    <operation name="CanBeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <input message="s0:CanBeiFolderHttpGetIn" />
      <output message="s0:CanBeiFolderHttpGetOut" />
    </operation>
    <operation name="IsPathIniFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <input message="s0:IsPathIniFolderHttpGetIn" />
      <output message="s0:IsPathIniFolderHttpGetOut" />
    </operation>
    <operation name="CreateLocaliFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateLocaliFolderHttpGetIn" />
      <output message="s0:CreateLocaliFolderHttpGetOut" />
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainEncrHttpGetIn" />
      <output message="s0:CreateiFolderInDomainEncrHttpGetOut" />
    </operation>
    <operation name="CreateiFolderInDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainHttpGetIn" />
      <output message="s0:CreateiFolderInDomainHttpGetOut" />
    </operation>
    <operation name="GetiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderHttpGetIn" />
      <output message="s0:GetiFolderHttpGetOut" />
    </operation>
    <operation name="GetSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetSecurityPolicyHttpGetIn" />
      <output message="s0:GetSecurityPolicyHttpGetOut" />
    </operation>
    <operation name="GetDisableSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetDisableSharingPolicyHttpGetIn" />
      <output message="s0:GetDisableSharingPolicyHttpGetOut" />
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <input message="s0:IsTransferAllowedHttpGetIn" />
      <output message="s0:IsTransferAllowedHttpGetOut" />
    </operation>
    <operation name="GetLimitPolicyStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <input message="s0:GetLimitPolicyStatusHttpGetIn" />
      <output message="s0:GetLimitPolicyStatusHttpGetOut" />
    </operation>
    <operation name="GetiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderInvitationHttpGetIn" />
      <output message="s0:GetiFolderInvitationHttpGetOut" />
    </operation>
    <operation name="GetiFolderByLocalPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <input message="s0:GetiFolderByLocalPathHttpGetIn" />
      <output message="s0:GetiFolderByLocalPathHttpGetOut" />
    </operation>
    <operation name="DeleteiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderHttpGetIn" />
      <output message="s0:DeleteiFolderHttpGetOut" />
    </operation>
    <operation name="RevertiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolderHttpGetIn" />
      <output message="s0:RevertiFolderHttpGetOut" />
    </operation>
    <operation name="RevertiFolder1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolder1HttpGetIn" />
      <output message="s0:RevertiFolder1HttpGetOut" />
    </operation>
    <operation name="GetAlliFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFoldersHttpGetIn" />
      <output message="s0:GetAlliFoldersHttpGetOut" />
    </operation>
    <operation name="GetAlliFolders1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFolders1HttpGetIn" />
      <output message="s0:GetAlliFolders1HttpGetOut" />
    </operation>
    <operation name="GetiFoldersForDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <input message="s0:GetiFoldersForDomainHttpGetIn" />
      <output message="s0:GetiFoldersForDomainHttpGetOut" />
    </operation>
    <operation name="GetiFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <input message="s0:GetiFoldersHttpGetIn" />
      <output message="s0:GetiFoldersHttpGetOut" />
    </operation>
    <operation name="SetUserRights">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <input message="s0:SetUserRightsHttpGetIn" />
      <output message="s0:SetUserRightsHttpGetOut" />
    </operation>
    <operation name="GetOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <input message="s0:GetOwnerHttpGetIn" />
      <output message="s0:GetOwnerHttpGetOut" />
    </operation>
    <operation name="ChangeOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <input message="s0:ChangeOwnerHttpGetIn" />
      <output message="s0:ChangeOwnerHttpGetOut" />
    </operation>
    <operation name="RemoveiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <input message="s0:RemoveiFolderUserHttpGetIn" />
      <output message="s0:RemoveiFolderUserHttpGetOut" />
    </operation>
    <operation name="GetiFolderUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <input message="s0:GetiFolderUsersHttpGetIn" />
      <output message="s0:GetiFolderUsersHttpGetOut" />
    </operation>
    <operation name="GetDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <input message="s0:GetDomainUsersHttpGetIn" />
      <output message="s0:GetDomainUsersHttpGetOut" />
    </operation>
    <operation name="SearchForDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <input message="s0:SearchForDomainUsersHttpGetIn" />
      <output message="s0:SearchForDomainUsersHttpGetOut" />
    </operation>
    <operation name="FindCloseiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseiFolderMembersHttpGetIn" />
      <output message="s0:FindCloseiFolderMembersHttpGetOut" />
    </operation>
    <operation name="GetiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetiFolderUserHttpGetIn" />
      <output message="s0:GetiFolderUserHttpGetOut" />
    </operation>
    <operation name="GetRAName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetRANameHttpGetIn" />
      <output message="s0:GetRANameHttpGetOut" />
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <input message="s0:GetiFolderUserFromNodeIDHttpGetIn" />
      <output message="s0:GetiFolderUserFromNodeIDHttpGetOut" />
    </operation>
    <operation name="AddAndInviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:AddAndInviteUserHttpGetIn" />
      <output message="s0:AddAndInviteUserHttpGetOut" />
    </operation>
    <operation name="InviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:InviteUserHttpGetIn" />
      <output message="s0:InviteUserHttpGetOut" />
    </operation>
    <operation name="MergeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:MergeiFolderHttpGetIn" />
      <output message="s0:MergeiFolderHttpGetOut" />
    </operation>
    <operation name="AcceptiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitationHttpGetIn" />
      <output message="s0:AcceptiFolderInvitationHttpGetOut" />
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitation1HttpGetIn" />
      <output message="s0:AcceptiFolderInvitation1HttpGetOut" />
    </operation>
    <operation name="DeclineiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:DeclineiFolderInvitationHttpGetIn" />
      <output message="s0:DeclineiFolderInvitationHttpGetOut" />
    </operation>
    <operation name="GetUserDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <input message="s0:GetUserDiskSpaceHttpGetIn" />
      <output message="s0:GetUserDiskSpaceHttpGetOut" />
    </operation>
    <operation name="GetiFolderDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderDiskSpaceHttpGetIn" />
      <output message="s0:GetiFolderDiskSpaceHttpGetOut" />
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <input message="s0:SetUserDiskSpaceLimitHttpGetIn" />
      <output message="s0:SetUserDiskSpaceLimitHttpGetOut" />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderDiskSpaceLimitHttpGetIn" />
      <output message="s0:SetiFolderDiskSpaceLimitHttpGetOut" />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderSyncIntervalHttpGetIn" />
      <output message="s0:SetiFolderSyncIntervalHttpGetOut" />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <input message="s0:SetDefaultSyncIntervalHttpGetIn" />
      <output message="s0:SetDefaultSyncIntervalHttpGetOut" />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <input message="s0:GetDefaultSyncIntervalHttpGetIn" />
      <output message="s0:GetDefaultSyncIntervalHttpGetOut" />
    </operation>
    <operation name="AuthenticateToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <input message="s0:AuthenticateToDomainHttpGetIn" />
      <output message="s0:AuthenticateToDomainHttpGetOut" />
    </operation>
    <operation name="GetiFolderConflicts">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <input message="s0:GetiFolderConflictsHttpGetIn" />
      <output message="s0:GetiFolderConflictsHttpGetOut" />
    </operation>
    <operation name="ResolveFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveFileConflictHttpGetIn" />
      <output message="s0:ResolveFileConflictHttpGetOut" />
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveEnhancedFileConflictHttpGetIn" />
      <output message="s0:ResolveEnhancedFileConflictHttpGetOut" />
    </operation>
    <operation name="ResolveNameConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <input message="s0:ResolveNameConflictHttpGetIn" />
      <output message="s0:ResolveNameConflictHttpGetOut" />
    </operation>
    <operation name="RenameAndResolveConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <input message="s0:RenameAndResolveConflictHttpGetIn" />
      <output message="s0:RenameAndResolveConflictHttpGetOut" />
    </operation>
    <operation name="SetupProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <input message="s0:SetupProxyHttpGetIn" />
      <output message="s0:SetupProxyHttpGetOut" />
    </operation>
    <operation name="RemoveProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <input message="s0:RemoveProxyHttpGetIn" />
      <output message="s0:RemoveProxyHttpGetOut" />
    </operation>
    <operation name="CalculateSyncSize">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <input message="s0:CalculateSyncSizeHttpGetIn" />
      <output message="s0:CalculateSyncSizeHttpGetOut" />
    </operation>
    <operation name="SynciFolderNow">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <input message="s0:SynciFolderNowHttpGetIn" />
      <output message="s0:SynciFolderNowHttpGetOut" />
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderFileSizeLimitHttpGetIn" />
      <output message="s0:DeleteiFolderFileSizeLimitHttpGetOut" />
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <input message="s0:GetMemberiFolderFileSizeLimitHttpGetIn" />
      <output message="s0:GetMemberiFolderFileSizeLimitHttpGetOut" />
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderFileSizeLimitHttpGetIn" />
      <output message="s0:GetiFolderFileSizeLimitHttpGetOut" />
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderFileSizeLimitHttpGetIn" />
      <output message="s0:SetiFolderFileSizeLimitHttpGetOut" />
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientAvailableHttpGetIn" />
      <output message="s0:CheckForUpdatedClientAvailableHttpGetOut" />
    </operation>
    <operation name="CheckForUpdatedClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientHttpGetIn" />
      <output message="s0:CheckForUpdatedClientHttpGetOut" />
    </operation>
    <operation name="CheckForServerUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForServerUpdateHttpGetIn" />
      <output message="s0:CheckForServerUpdateHttpGetOut" />
    </operation>
    <operation name="RunClientUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <input message="s0:RunClientUpdateHttpGetIn" />
      <output message="s0:RunClientUpdateHttpGetOut" />
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpPost">
    <operation name="Ping">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</wsdl:documentation>
      <input message="s0:PingHttpPostIn" />
      <output message="s0:PingHttpPostOut" />
    </operation>
    <operation name="IsiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks a LocalPath to see if it's an iFolder</wsdl:documentation>
      <input message="s0:IsiFolderHttpPostIn" />
      <output message="s0:IsiFolderHttpPostOut" />
    </operation>
    <operation name="CanBeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if can be an iFolder</wsdl:documentation>
      <input message="s0:CanBeiFolderHttpPostIn" />
      <output message="s0:CanBeiFolderHttpPostOut" />
    </operation>
    <operation name="IsPathIniFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks LocalPath to see if is in an iFolder</wsdl:documentation>
      <input message="s0:IsPathIniFolderHttpPostIn" />
      <output message="s0:IsPathIniFolderHttpPostOut" />
    </operation>
    <operation name="CreateLocaliFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateLocaliFolderHttpPostIn" />
      <output message="s0:CreateLocaliFolderHttpPostOut" />
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified with the security Level desired. The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainEncrHttpPostIn" />
      <output message="s0:CreateiFolderInDomainEncrHttpPostOut" />
    </operation>
    <operation name="CreateiFolderInDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Create an iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</wsdl:documentation>
      <input message="s0:CreateiFolderInDomainHttpPostIn" />
      <output message="s0:CreateiFolderInDomainHttpPostOut" />
    </operation>
    <operation name="GetiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderHttpPostIn" />
      <output message="s0:GetiFolderHttpPostOut" />
    </operation>
    <operation name="GetSecurityPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting security policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetSecurityPolicyHttpPostIn" />
      <output message="s0:GetSecurityPolicyHttpPostOut" />
    </operation>
    <operation name="GetDisableSharingPolicy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This method is for getting Disable sharing policy from the Collectionstore.</wsdl:documentation>
      <input message="s0:GetDisableSharingPolicyHttpPostIn" />
      <output message="s0:GetDisableSharingPolicyHttpPostOut" />
    </operation>
    <operation name="IsTransferAllowed">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be transferred or not</wsdl:documentation>
      <input message="s0:IsTransferAllowedHttpPostIn" />
      <output message="s0:IsTransferAllowedHttpPostOut" />
    </operation>
    <operation name="GetLimitPolicyStatus">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets whetgher ifolder can be created or not</wsdl:documentation>
      <input message="s0:GetLimitPolicyStatusHttpPostIn" />
      <output message="s0:GetLimitPolicyStatusHttpPostOut" />
    </operation>
    <operation name="GetiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder</wsdl:documentation>
      <input message="s0:GetiFolderInvitationHttpPostIn" />
      <output message="s0:GetiFolderInvitationHttpPostOut" />
    </operation>
    <operation name="GetiFolderByLocalPath">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get An iFolder using a LocalPath</wsdl:documentation>
      <input message="s0:GetiFolderByLocalPathHttpPostIn" />
      <output message="s0:GetiFolderByLocalPathHttpPostOut" />
    </operation>
    <operation name="DeleteiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete An iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderHttpPostIn" />
      <output message="s0:DeleteiFolderHttpPostOut" />
    </operation>
    <operation name="RevertiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolderHttpPostIn" />
      <output message="s0:RevertiFolderHttpPostOut" />
    </operation>
    <operation name="RevertiFolder1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Revert an iFolder on the local computer but remain a member</wsdl:documentation>
      <input message="s0:RevertiFolder1HttpPostIn" />
      <output message="s0:RevertiFolder1HttpPostOut" />
    </operation>
    <operation name="GetAlliFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFoldersHttpPostIn" />
      <output message="s0:GetAlliFoldersHttpPostOut" />
    </operation>
    <operation name="GetAlliFolders1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders on the Server</wsdl:documentation>
      <input message="s0:GetAlliFolders1HttpPostIn" />
      <output message="s0:GetAlliFolders1HttpPostOut" />
    </operation>
    <operation name="GetiFoldersForDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns all iFolders in the specified domain</wsdl:documentation>
      <input message="s0:GetiFoldersForDomainHttpPostIn" />
      <output message="s0:GetiFoldersForDomainHttpPostOut" />
    </operation>
    <operation name="GetiFolders">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Returns iFolders for the specified UserID</wsdl:documentation>
      <input message="s0:GetiFoldersHttpPostIn" />
      <output message="s0:GetiFoldersHttpPostOut" />
    </operation>
    <operation name="SetUserRights">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</wsdl:documentation>
      <input message="s0:SetUserRightsHttpPostIn" />
      <output message="s0:SetUserRightsHttpPostOut" />
    </operation>
    <operation name="GetOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the Owner of an iFolder</wsdl:documentation>
      <input message="s0:GetOwnerHttpPostIn" />
      <output message="s0:GetOwnerHttpPostOut" />
    </operation>
    <operation name="ChangeOwner">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</wsdl:documentation>
      <input message="s0:ChangeOwnerHttpPostIn" />
      <output message="s0:ChangeOwnerHttpPostOut" />
    </operation>
    <operation name="RemoveiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Remove a single member from an iFolder</wsdl:documentation>
      <input message="s0:RemoveiFolderUserHttpPostIn" />
      <output message="s0:RemoveiFolderUserHttpPostOut" />
    </operation>
    <operation name="GetiFolderUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the list of iFolder Members</wsdl:documentation>
      <input message="s0:GetiFolderUsersHttpPostIn" />
      <output message="s0:GetiFolderUsersHttpPostOut" />
    </operation>
    <operation name="GetDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a scoped list of iFolderUsers for the specified domain</wsdl:documentation>
      <input message="s0:GetDomainUsersHttpPostIn" />
      <output message="s0:GetDomainUsersHttpPostOut" />
    </operation>
    <operation name="SearchForDomainUsers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Search for a Member of a specified name in the specified domain.</wsdl:documentation>
      <input message="s0:SearchForDomainUsersHttpPostIn" />
      <output message="s0:SearchForDomainUsersHttpPostOut" />
    </operation>
    <operation name="FindCloseiFolderMembers">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</wsdl:documentation>
      <input message="s0:FindCloseiFolderMembersHttpPostIn" />
      <output message="s0:FindCloseiFolderMembersHttpPostOut" />
    </operation>
    <operation name="GetiFolderUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetiFolderUserHttpPostIn" />
      <output message="s0:GetiFolderUserHttpPostOut" />
    </operation>
    <operation name="GetRAName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a single member to a collection</wsdl:documentation>
      <input message="s0:GetRANameHttpPostIn" />
      <output message="s0:GetRANameHttpPostOut" />
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Lookup a user in a collection based on node ID.</wsdl:documentation>
      <input message="s0:GetiFolderUserFromNodeIDHttpPostIn" />
      <output message="s0:GetiFolderUserFromNodeIDHttpPostOut" />
    </operation>
    <operation name="AddAndInviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:AddAndInviteUserHttpPostIn" />
      <output message="s0:AddAndInviteUserHttpPostOut" />
    </operation>
    <operation name="InviteUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Invite a user to an iFolder.  This call will only work with Enterprise iFolders</wsdl:documentation>
      <input message="s0:InviteUserHttpPostIn" />
      <output message="s0:InviteUserHttpPostOut" />
    </operation>
    <operation name="MergeiFolder">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:MergeiFolderHttpPostIn" />
      <output message="s0:MergeiFolderHttpPostOut" />
    </operation>
    <operation name="AcceptiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitationHttpPostIn" />
      <output message="s0:AcceptiFolderInvitationHttpPostOut" />
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:AcceptiFolderInvitation1HttpPostIn" />
      <output message="s0:AcceptiFolderInvitation1HttpPostOut" />
    </operation>
    <operation name="DeclineiFolderInvitation">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</wsdl:documentation>
      <input message="s0:DeclineiFolderInvitationHttpPostIn" />
      <output message="s0:DeclineiFolderInvitationHttpPostOut" />
    </operation>
    <operation name="GetUserDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for a member</wsdl:documentation>
      <input message="s0:GetUserDiskSpaceHttpPostIn" />
      <output message="s0:GetUserDiskSpaceHttpPostOut" />
    </operation>
    <operation name="GetiFolderDiskSpace">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the DiskSpaceQuota for an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderDiskSpaceHttpPostIn" />
      <output message="s0:GetiFolderDiskSpaceHttpPostOut" />
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for a user</wsdl:documentation>
      <input message="s0:SetUserDiskSpaceLimitHttpPostIn" />
      <output message="s0:SetUserDiskSpaceLimitHttpPostOut" />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Disk Space Limit for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderDiskSpaceLimitHttpPostIn" />
      <output message="s0:SetiFolderDiskSpaceLimitHttpPostOut" />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Sync Interval for an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderSyncIntervalHttpPostIn" />
      <output message="s0:SetiFolderSyncIntervalHttpPostOut" />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets the Default Sync Interval</wsdl:documentation>
      <input message="s0:SetDefaultSyncIntervalHttpPostIn" />
      <output message="s0:SetDefaultSyncIntervalHttpPostOut" />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the Default Sync Interval</wsdl:documentation>
      <input message="s0:GetDefaultSyncIntervalHttpPostIn" />
      <output message="s0:GetDefaultSyncIntervalHttpPostOut" />
    </operation>
    <operation name="AuthenticateToDomain">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Domain</wsdl:documentation>
      <input message="s0:AuthenticateToDomainHttpPostIn" />
      <output message="s0:AuthenticateToDomainHttpPostOut" />
    </operation>
    <operation name="GetiFolderConflicts">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Connects to an iFolder Enterprise Server</wsdl:documentation>
      <input message="s0:GetiFolderConflictsHttpPostIn" />
      <output message="s0:GetiFolderConflictsHttpPostOut" />
    </operation>
    <operation name="ResolveFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveFileConflictHttpPostIn" />
      <output message="s0:ResolveFileConflictHttpPostOut" />
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a file conflict in an iFolder.</wsdl:documentation>
      <input message="s0:ResolveEnhancedFileConflictHttpPostIn" />
      <output message="s0:ResolveEnhancedFileConflictHttpPostOut" />
    </operation>
    <operation name="ResolveNameConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Resolves a name conflict</wsdl:documentation>
      <input message="s0:ResolveNameConflictHttpPostIn" />
      <output message="s0:ResolveNameConflictHttpPostOut" />
    </operation>
    <operation name="RenameAndResolveConflict">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Renames a file and resolves a name conflict</wsdl:documentation>
      <input message="s0:RenameAndResolveConflictHttpPostIn" />
      <output message="s0:RenameAndResolveConflictHttpPostOut" />
    </operation>
    <operation name="SetupProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sets up a proxy for iFolder to use</wsdl:documentation>
      <input message="s0:SetupProxyHttpPostIn" />
      <output message="s0:SetupProxyHttpPostOut" />
    </operation>
    <operation name="RemoveProxy">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Removes proxy settings</wsdl:documentation>
      <input message="s0:RemoveProxyHttpPostIn" />
      <output message="s0:RemoveProxyHttpPostOut" />
    </operation>
    <operation name="CalculateSyncSize">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Calculates the number of nodes and bytes that need to be sync'd.</wsdl:documentation>
      <input message="s0:CalculateSyncSizeHttpPostIn" />
      <output message="s0:CalculateSyncSizeHttpPostOut" />
    </operation>
    <operation name="SynciFolderNow">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Sends a command to the sync engine to sync the iFolder of the specified ID.</wsdl:documentation>
      <input message="s0:SynciFolderNowHttpPostIn" />
      <output message="s0:SynciFolderNowHttpPostOut" />
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Delete a file size limit policy from an iFolder</wsdl:documentation>
      <input message="s0:DeleteiFolderFileSizeLimitHttpPostIn" />
      <output message="s0:DeleteiFolderFileSizeLimitHttpPostOut" />
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a users file size limit on an iFolder</wsdl:documentation>
      <input message="s0:GetMemberiFolderFileSizeLimitHttpPostIn" />
      <output message="s0:GetMemberiFolderFileSizeLimitHttpPostOut" />
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:GetiFolderFileSizeLimitHttpPostIn" />
      <output message="s0:GetiFolderFileSizeLimitHttpPostOut" />
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Set the file size limit of an iFolder</wsdl:documentation>
      <input message="s0:SetiFolderFileSizeLimitHttpPostIn" />
      <output message="s0:SetiFolderFileSizeLimitHttpPostOut" />
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientAvailableHttpPostIn" />
      <output message="s0:CheckForUpdatedClientAvailableHttpPostOut" />
    </operation>
    <operation name="CheckForUpdatedClient">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForUpdatedClientHttpPostIn" />
      <output message="s0:CheckForUpdatedClientHttpPostOut" />
    </operation>
    <operation name="CheckForServerUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Check for an available update</wsdl:documentation>
      <input message="s0:CheckForServerUpdateHttpPostIn" />
      <output message="s0:CheckForServerUpdateHttpPostOut" />
    </operation>
    <operation name="RunClientUpdate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Run the client update</wsdl:documentation>
      <input message="s0:RunClientUpdateHttpPostIn" />
      <output message="s0:RunClientUpdateHttpPostOut" />
    </operation>
  </portType>
  <binding name="iFolderWebServiceSoap" type="s0:iFolderWebServiceSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="Ping">
      <soap:operation soapAction="http://novell.com/ifolder/web/Ping" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="IsiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CanBeiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsPathIniFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateLocaliFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateiFolderInDomainEncr" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateiFolderInDomain" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetSecurityPolicy">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetSecurityPolicy" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetDisableSharingPolicy">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDisableSharingPolicy" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsTransferAllowed" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetLimitPolicyStatus">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetLimitPolicyStatus" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderInvitation" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderByLocalPath" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeleteiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RevertiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/RevertiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RevertiFolder1">
      <soap:operation soapAction="http://novell.com/ifolder/web/RevertiFolder1" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolders" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetAlliFolders1">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolders1" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFoldersForDomain" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolders" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserRights" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetOwner" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/ChangeOwner" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RemoveiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveiFolderUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUsers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomainUsers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/SearchForDomainUsers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindCloseiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindCloseiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindFirstiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindFirstiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindFirstSpecificiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindFirstSpecificiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindNextiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindNextiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindPreviousiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindPreviousiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="FindSeekiFolderMembers">
      <soap:operation soapAction="http://novell.com/ifolder/web/FindSeekiFolderMembers" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetRAName">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetRAName" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUserFromNodeID" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AddAndInviteUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/AddAndInviteUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="InviteUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/InviteUser" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="MergeiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/MergeiFolder" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/AcceptiFolderInvitation" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <soap:operation soapAction="http://novell.com/ifolder/web/AcceptiFolderInvitation1" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeclineiFolderInvitation" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetUserDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetUserDiskSpace" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderDiskSpace" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserDiskSpaceLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderDiskSpaceLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderSyncInterval" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDefaultSyncInterval" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDefaultSyncInterval" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="AuthenticateToDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/AuthenticateToDomain" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderConflicts" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveFileConflict" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveEnhancedFileConflict" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="ResolveNameConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveNameConflict" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RenameAndResolveConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/RenameAndResolveConflict" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetupProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetupProxy" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RemoveProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveProxy" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CalculateSyncSize">
      <soap:operation soapAction="http://novell.com/ifolder/web/CalculateSyncSize" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <soap:operation soapAction="http://novell.com/ifolder/web/SynciFolderNow" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeleteiFolderFileSizeLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetMemberiFolderFileSizeLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderFileSizeLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderFileSizeLimit" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <soap:operation soapAction="http://novell.com/ifolder/web/CheckForUpdatedClientAvailable" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CheckForUpdatedClient">
      <soap:operation soapAction="http://novell.com/ifolder/web/CheckForUpdatedClient" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CheckForUpdate">
      <soap:operation soapAction="http://novell.com/ifolder/web/CheckForUpdate" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="CheckForServerUpdate">
      <soap:operation soapAction="http://novell.com/ifolder/web/CheckForServerUpdate" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="RunClientUpdate">
      <soap:operation soapAction="http://novell.com/ifolder/web/RunClientUpdate" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpGet" type="s0:iFolderWebServiceHttpGet">
    <http:binding verb="GET" />
    <operation name="Ping">
      <http:operation location="/Ping" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <http:operation location="/CreateiFolderInDomainEncr" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <http:operation location="/CreateiFolderInDomain" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetSecurityPolicy">
      <http:operation location="/GetSecurityPolicy" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDisableSharingPolicy">
      <http:operation location="/GetDisableSharingPolicy" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <http:operation location="/IsTransferAllowed" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetLimitPolicyStatus">
      <http:operation location="/GetLimitPolicyStatus" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <http:operation location="/GetiFolderInvitation" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RevertiFolder1">
      <http:operation location="/RevertiFolder1" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders1">
      <http:operation location="/GetAlliFolders1" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <http:operation location="/GetiFoldersForDomain" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <http:operation location="/GetDomainUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <http:operation location="/SearchForDomainUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="FindCloseiFolderMembers">
      <http:operation location="/FindCloseiFolderMembers" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRAName">
      <http:operation location="/GetRAName" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddAndInviteUser">
      <http:operation location="/AddAndInviteUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="MergeiFolder">
      <http:operation location="/MergeiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <http:operation location="/AcceptiFolderInvitation1" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AuthenticateToDomain">
      <http:operation location="/AuthenticateToDomain" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <http:operation location="/ResolveEnhancedFileConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RenameAndResolveConflict">
      <http:operation location="/RenameAndResolveConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <http:operation location="/DeleteiFolderFileSizeLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <http:operation location="/GetMemberiFolderFileSizeLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <http:operation location="/GetiFolderFileSizeLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <http:operation location="/SetiFolderFileSizeLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <http:operation location="/CheckForUpdatedClientAvailable" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CheckForUpdatedClient">
      <http:operation location="/CheckForUpdatedClient" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CheckForServerUpdate">
      <http:operation location="/CheckForServerUpdate" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RunClientUpdate">
      <http:operation location="/RunClientUpdate" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpPost" type="s0:iFolderWebServiceHttpPost">
    <http:binding verb="POST" />
    <operation name="Ping">
      <http:operation location="/Ping" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomainEncr">
      <http:operation location="/CreateiFolderInDomainEncr" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <http:operation location="/CreateiFolderInDomain" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetSecurityPolicy">
      <http:operation location="/GetSecurityPolicy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDisableSharingPolicy">
      <http:operation location="/GetDisableSharingPolicy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsTransferAllowed">
      <http:operation location="/IsTransferAllowed" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetLimitPolicyStatus">
      <http:operation location="/GetLimitPolicyStatus" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <http:operation location="/GetiFolderInvitation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RevertiFolder1">
      <http:operation location="/RevertiFolder1" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders1">
      <http:operation location="/GetAlliFolders1" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <http:operation location="/GetiFoldersForDomain" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <http:operation location="/GetDomainUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <http:operation location="/SearchForDomainUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="FindCloseiFolderMembers">
      <http:operation location="/FindCloseiFolderMembers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetRAName">
      <http:operation location="/GetRAName" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AddAndInviteUser">
      <http:operation location="/AddAndInviteUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="MergeiFolder">
      <http:operation location="/MergeiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation1">
      <http:operation location="/AcceptiFolderInvitation1" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AuthenticateToDomain">
      <http:operation location="/AuthenticateToDomain" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="ResolveEnhancedFileConflict">
      <http:operation location="/ResolveEnhancedFileConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RenameAndResolveConflict">
      <http:operation location="/RenameAndResolveConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="DeleteiFolderFileSizeLimit">
      <http:operation location="/DeleteiFolderFileSizeLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetMemberiFolderFileSizeLimit">
      <http:operation location="/GetMemberiFolderFileSizeLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderFileSizeLimit">
      <http:operation location="/GetiFolderFileSizeLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetiFolderFileSizeLimit">
      <http:operation location="/SetiFolderFileSizeLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="CheckForUpdatedClientAvailable">
      <http:operation location="/CheckForUpdatedClientAvailable" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CheckForUpdatedClient">
      <http:operation location="/CheckForUpdatedClient" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CheckForServerUpdate">
      <http:operation location="/CheckForServerUpdate" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="RunClientUpdate">
      <http:operation location="/RunClientUpdate" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
  </binding>
  <service name="iFolderWebService">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Web Service providing access to iFolder</wsdl:documentation>
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Web Service providing access to iFolder</wsdl:documentation>
    <port binding="s0:iFolderWebServiceSoap" name="iFolderWebServiceSoap">
      <soap:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
    <port binding="s0:iFolderWebServiceHttpGet" name="iFolderWebServiceHttpGet">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
    <port binding="s0:iFolderWebServiceHttpPost" name="iFolderWebServiceHttpPost">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
  </service>
</definitions>