AC_INIT([nautilus-ifolder3],[3.4])

AM_MAINTAINER_MODE
AC_CONFIG_HEADERS([config.h])

AC_PROG_INTLTOOL

NAUTILUS_REQUIRED=2.10.0
EEL_REQUIRED=2.5.0
GLIB_REQUIRED=2.4.0
GTK_SHARP_REQUIRED=1.9.5
GNOME_SHARP_REQUIRED=1.9.5
SIMIAS_CLIENT_REQUIRED=1.4
IFOLDER_REQUIRED=3.4

AM_INIT_AUTOMAKE($PACKAGE, 3.4)
# Check to see if the BUILDNUM is set by global build
if test "$BUILDNUM" = ""; then
	let "BUILDNUM=`date +%G%j`-2000000"
fi

VERSION=$VERSION.$BUILDNUM.1
AC_SUBST(VERSION)

DATADIRNAME=share

AC_PROG_CC
AM_PROG_LIBTOOL

PACKAGE=nautilus-ifolder3
AC_SUBST(PACKAGE)

dnl ========================================================
dnl PKG_CONFIG and required versions
dnl ========================================================
dnl Check for pkgconfig first
AC_CHECK_PROG(HAVE_PKGCONFIG, pkg-config, yes, no)

dnl Give error and exit if we don't have pkgconfig
if test "x$HAVE_PKGCONFIG" = "xno"; then
  AC_MSG_ERROR(you need to have pkgconfig installed !)
fi

#
# We add $prefix to PKG_CONFIG_PATH so pkg-config will find any other
# packages 'make install'-ed to the same prefix.
#
# The default value of $prefix is not set until later in the script.
# We set the default here, if needed.
#
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="${prefix}"

if test -z "$PKG_CONFIG_PATH"; then
    export PKG_CONFIG_PATH="$prefix/lib/pkgconfig"
else
    export PKG_CONFIG_PATH="$prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
fi
echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH
AC_SUBST(PKG_CONFIG_PATH)

dnl ==========================================================================

PKG_CHECK_MODULES(NAUTILUS, libnautilus-extension >= $NAUTILUS_REQUIRED eel-2.0 >= $EEL_REQUIRED glib-2.0 >= $GLIB_REQUIRED)
PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp-2.0 >= $GTK_SHARP_REQUIRED)
PKG_CHECK_MODULES(GNOME_SHARP, gnome-sharp-2.0 >= $GNOME_SHARP_REQUIRED)
PKG_CHECK_MODULES(SIMIAS_CLIENT, simias-client >= $SIMIAS_CLIENT_REQUIRED)
PKG_CHECK_MODULES(SIMIAS_CLIENT_C, simias-client-c >= $SIMIAS_CLIENT_REQUIRED)
PKG_CHECK_MODULES(IFOLDER, ifolder3 >= $IFOLDER_REQUIRED)
PKG_CHECK_MODULES(IFOLDER_C, ifolder3-c >= $IFOLDER_REQUIRED)

AC_SUBST(NAUTILUS_CFLAGS)
AC_SUBST(NAUTILUS_LIBS)

AC_SUBST(GTK_SHARP_LIBS)

AC_SUBST(GNOME_SHARP_LIBS)

AC_SUBST(SIMIAS_CLIENT_LIBS)

AC_SUBST(SIMIAS_CLIENT_C_CFLAGS)
AC_SUBST(SIMIAS_CLIENT_C_LIBS)

AC_SUBST(IFOLDER_LIBS)

AC_SUBST(IFOLDER_C_CFLAGS)
AC_SUBST(IFOLDER_C_LIBS)

ifolder_prefix=$(pkg-config --variable=prefix ifolder3)
AC_SUBST(ifolder_prefix)

gnome_root=$(pkg-config --variable=prefix libnautilus-extension)
AC_SUBST(gnome_root)
INSTALL_BIN_OPTS='--mode=755'
AC_SUBST(INSTALL_BIN_OPTS)

dnl ========================================================
dnl Set EXTENSION_INSTALL_DIR, PIXMAPS_DIR, & EMBLEMS_DIR
dnl ========================================================

AC_DEFINE_UNQUOTED(EXTENSION_INSTALL_DIR, "${gnome_root}/lib/nautilus/extensions-1.0", [extension install directory])
extension_install_dir="${gnome_root}/lib/nautilus/extensions-1.0"
AC_DEFINE_UNQUOTED(PIXMAPS_DIR, "${gnome_root}/${DATADIRNAME}/${PACKAGE}/pixmaps", [pixmaps directory])
pixmaps_dir="${gnome_root}/${DATADIRNAME}/${PACKAGE}/pixmaps"
AC_DEFINE_UNQUOTED(EMBLEMS_DIR, "${gnome_root}/${DATADIRNAME}/icons/gnome/48x48/emblems", [emblems directory])
emblems_dir="${gnome_root}/${DATADIRNAME}/icons/gnome/48x48/emblems"

AC_SUBST(extension_install_dir)
AC_SUBST(pixmaps_dir)
AC_SUBST(emblems_dir)

dnl ========================================================
dnl Translations
dnl ========================================================

ALL_LINGUAS="cs de en es fi fr it ja hu pl pt pt_BR ru sk zh_CN zh_TW"
GETTEXT_PACKAGE=${PACKAGE}
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [gettext package name])
AM_GLIB_GNU_GETTEXT

# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${gnome_root}/${DATADIRNAME}/locale'
AC_SUBST(gnomelocaledir)

dnl ==========================================================================

#GNOME_COMPILE_WARNINGS(maximum)

AC_CHECK_PROG(CSC, mcs, mcs)
test -z "$CSC" && AC_MSG_ERROR([no C Sharp compiler: mcs not found in \$PATH])

#
# Installation directory options.
#
# These are normally left unexpanded so users can "make install exec_prefix=/foo".
# However, we want them expanded.
#
bindir="${exec_prefix}/bin"
sbindir="${exec_prefix}/sbin"
libexecdir="${exec_prefix}/libexec"
datadir="${prefix}/share"
sysconfdir="${prefix}/etc"
sharedstatedir="${prefix}/com"
localstatedir="${prefix}/var"
libdir="${exec_prefix}/lib"
includedir="${prefix}/include"
oldincludedir="/usr/include"
infodir="${prefix}/info"
mandir="${prefix}/man"
webdir="${exec_prefix}/web"
webbindir="${exec_prefix}/web/bin"

dnl ========================================================
dnl Configure XML2_CONFIG
dnl ========================================================
AC_PATH_PROG(XML2_CONFIG, xml2-config, no)
if test "x$XML2_CONFIG" = "xno"; then
    AC_MSG_ERROR([You need to install libxml2 and libxml2-devel])
fi

XML2_CFLAGS='`xml2-config --cflags`'
XML2_LIBS='`xml2-config --libs`'
AC_SUBST(XML2_CFLAGS)
AC_SUBST(XML2_LIBS)

dnl ========================================================
dnl Configure C# compiler settings
dnl ========================================================
CSC_EXEFLAG=/target:exe
CSC_LIBFLAG=/target:library
CSC_WINEXEFLAG=/terget:winexe
CSCFLAGS='/d:MONO /warn:4 /d:TRACE'
CSCFLAGS_DEBUG="/debug+ /d:DEBUG"
CSCFLAGS_OPTIMIZE="/optimize+"
AC_SUBST(CSC)
AC_SUBST(CSC_EXEFLAG)
AC_SUBST(CSC_LIBFLAG)
AC_SUBST(CSC_WINEXEFLAG)
AC_SUBST(CSCFLAGS)
AC_SUBST(libdir)
AC_SUBST(webdir)
AC_SUBST(webbindir)

dnl ========================================================

AC_CONFIG_FILES([
  Makefile 
  src/Makefile
  src/nautilus-ifolder.h
  src/nautilus-ifolder
  package/Makefile
  package/nautilus-ifolder3.spec
  po/Makefile.in
])
AC_OUTPUT
