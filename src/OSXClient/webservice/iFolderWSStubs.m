/*-
 * WSDL stubs for:  ./../WebService/iFolderWebService.wsdl
 *   Generated by:  calvin
 *           Date:  Tue Dec 14 19:15:21 2004
 *        Emitter:  Objective-C
 */

#import "iFolderWSStubs.h"

/*-
 *   Method Name:  ResolveFileConflict
 * Documentation:  Resolves a file conflict in an iFolder.
 */
@implementation ResolveFileConflict
- (void) setParameters:(NSString*) in_iFolderID in_conflictID:(NSString*) in_conflictID in_localChangesWin:(BOOL) in_localChangesWin
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_conflictID,        
        [NSNumber numberWithBool: in_localChangesWin],        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"conflictID",        
        @"localChangesWin",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"ResolveFileConflict"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/ResolveFileConflict"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* ResolveFileConflict */


/*-
 *   Method Name:  RemoveiFolderUser
 * Documentation:  Remove a single member from an iFolder
 */
@implementation RemoveiFolderUser
- (void) setParameters:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_UserID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"UserID",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"RemoveiFolderUser"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/RemoveiFolderUser"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* RemoveiFolderUser */


/*-
 *   Method Name:  GetSettings
 * Documentation:  Gets the current iFolder Settings
 */
@implementation GetSettings
- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetSettingsResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetSettings"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetSettings"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetSettings */


/*-
 *   Method Name:  GetiFolder
 * Documentation:  Get An iFolder
 */
@implementation GetiFolder
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolder */


/*-
 *   Method Name:  GetiFolderUserFromNodeID
 * Documentation:  Lookup a user in a collection based on node ID.
 */
@implementation GetiFolderUserFromNodeID
- (void) setParameters:(NSString*) in_CollectionID in_NodeID:(NSString*) in_NodeID
{
    id _paramValues[] = {    
        in_CollectionID,        
        in_NodeID,        
    };    
    NSString* _paramNames[] = {    
        @"CollectionID",        
        @"NodeID",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderUserFromNodeIDResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderUserFromNodeID"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderUserFromNodeID"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderUserFromNodeID */


/*-
 *   Method Name:  ConnectToEnterpriseServer
 * Documentation:  Connects to an iFolder Enterprise Server
 */
@implementation ConnectToEnterpriseServer
- (void) setParameters:(NSString*) in_UserName in_Password:(NSString*) in_Password in_Host:(NSString*) in_Host
{
    id _paramValues[] = {    
        in_UserName,        
        in_Password,        
        in_Host,        
    };    
    NSString* _paramNames[] = {    
        @"UserName",        
        @"Password",        
        @"Host",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"ConnectToEnterpriseServerResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"ConnectToEnterpriseServer"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/ConnectToEnterpriseServer"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* ConnectToEnterpriseServer */


/*-
 *   Method Name:  ConnectToDomain
 * Documentation:  Connects to an iFolder Domain
 */
@implementation ConnectToDomain
- (void) setParameters:(NSString*) in_UserName in_Password:(NSString*) in_Password in_Host:(NSString*) in_Host
{
    id _paramValues[] = {    
        in_UserName,        
        in_Password,        
        in_Host,        
    };    
    NSString* _paramNames[] = {    
        @"UserName",        
        @"Password",        
        @"Host",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
//    return [[super getResultDictionary] objectForKey: @"ConnectToDomainResult"];    
    return [super getResultDictionary];
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"ConnectToDomain"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/ConnectToDomain"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* ConnectToDomain */


/*-
 *   Method Name:  RevertiFolder
 * Documentation:  Revert an iFolder on the local computer but remain a member
 */
@implementation RevertiFolder
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"RevertiFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"RevertiFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/RevertiFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* RevertiFolder */


/*-
 *   Method Name:  SetupProxy
 * Documentation:  Sets up a proxy for iFolder to use
 */
@implementation SetupProxy
- (void) setParameters:(NSString*) in_Host in_Port:(SInt32) in_Port
{
    id _paramValues[] = {    
        in_Host,        
        [NSNumber numberWithInt: in_Port],        
    };    
    NSString* _paramNames[] = {    
        @"Host",        
        @"Port",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetupProxy"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetupProxy"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetupProxy */


/*-
 *   Method Name:  ResolveNameConflict
 * Documentation:  Resolves a name conflict
 */
@implementation ResolveNameConflict
- (void) setParameters:(NSString*) in_iFolderID in_conflictID:(NSString*) in_conflictID in_newLocalName:(NSString*) in_newLocalName
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_conflictID,        
        in_newLocalName,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"conflictID",        
        @"newLocalName",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"ResolveNameConflict"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/ResolveNameConflict"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* ResolveNameConflict */


/*-
 *   Method Name:  CreateLocaliFolder
 * Documentation:  Create An iFolder. This will create an iFolder using the path
 *                 specified.  The Path must exist or an exception will be thrown.
 */
@implementation CreateLocaliFolder
- (void) setParameters:(NSString*) in_Path
{
    id _paramValues[] = {    
        in_Path,        
    };    
    NSString* _paramNames[] = {    
        @"Path",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"CreateLocaliFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"CreateLocaliFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/CreateLocaliFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* CreateLocaliFolder */


/*-
 *   Method Name:  SetiFolderDiskSpaceLimit
 * Documentation:  Sets the Disk Space Limit for an iFolder
 */
@implementation SetiFolderDiskSpaceLimit
- (void) setParameters:(NSString*) in_iFolderID in_Limit:(SInt32) in_Limit
{
    id _paramValues[] = {    
        in_iFolderID,        
        [NSNumber numberWithInt: in_Limit],        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"Limit",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetiFolderDiskSpaceLimit"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetiFolderDiskSpaceLimit"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetiFolderDiskSpaceLimit */


/*-
 *   Method Name:  AcceptiFolderInvitation
 * Documentation:  Accept an invitation fo an iFolder.  The iFolder ID represents a
 *                 Subscription object
 */
@implementation AcceptiFolderInvitation
- (void) setParameters:(NSString*) in_iFolderID in_LocalPath:(NSString*) in_LocalPath
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_LocalPath,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"LocalPath",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"AcceptiFolderInvitationResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"AcceptiFolderInvitation"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/AcceptiFolderInvitation"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* AcceptiFolderInvitation */


/*-
 *   Method Name:  CalculateSyncSize
 * Documentation:  Calculates the number of nodes and bytes that need to be sync'd.
 */
@implementation CalculateSyncSize
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"CalculateSyncSizeResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"CalculateSyncSize"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/CalculateSyncSize"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* CalculateSyncSize */


/*-
 *   Method Name:  SetiFolderSyncInterval
 * Documentation:  Sets the Sync Interval for an iFolder
 */
@implementation SetiFolderSyncInterval
- (void) setParameters:(NSString*) in_iFolderID in_Interval:(SInt32) in_Interval
{
    id _paramValues[] = {    
        in_iFolderID,        
        [NSNumber numberWithInt: in_Interval],        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"Interval",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetiFolderSyncInterval"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetiFolderSyncInterval"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetiFolderSyncInterval */


/*-
 *   Method Name:  IsiFolder
 * Documentation:  Checks a LocalPath to see if it's an iFolder
 */
@implementation IsiFolder
- (void) setParameters:(NSString*) in_LocalPath
{
    id _paramValues[] = {    
        in_LocalPath,        
    };    
    NSString* _paramNames[] = {    
        @"LocalPath",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"IsiFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"IsiFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/IsiFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* IsiFolder */


/*-
 *   Method Name:  DeleteiFolder
 * Documentation:  Delete An iFolder
 */
@implementation DeleteiFolder
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"DeleteiFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/DeleteiFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* DeleteiFolder */


/*-
 *   Method Name:  GetDomains
 * Documentation:  Retuns all currently configured Domains
 */
@implementation GetDomains
- (id) resultValue
{
//    return [[super getResultDictionary] objectForKey: @"GetDomainsResult"];    
    return [super getResultDictionary];
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetDomains"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetDomains"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetDomains */


/*-
 *   Method Name:  GetiFolderDiskSpace
 * Documentation:  Gets the DiskSpaceQuota for an iFolder
 */
@implementation GetiFolderDiskSpace
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderDiskSpaceResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderDiskSpace"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderDiskSpace"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderDiskSpace */


/*-
 *   Method Name:  GetDefaultSyncInterval
 * Documentation:  Gets the Default Sync Interval
 */
@implementation GetDefaultSyncInterval
- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetDefaultSyncIntervalResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetDefaultSyncInterval"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetDefaultSyncInterval"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetDefaultSyncInterval */


/*-
 *   Method Name:  SetUserDiskSpaceLimit
 * Documentation:  Sets the Disk Space Limit for a user
 */
@implementation SetUserDiskSpaceLimit
- (void) setParameters:(NSString*) in_UserID in_Limit:(SInt32) in_Limit
{
    id _paramValues[] = {    
        in_UserID,        
        [NSNumber numberWithInt: in_Limit],        
    };    
    NSString* _paramNames[] = {    
        @"UserID",        
        @"Limit",        
    };    
    [super setParameters:2 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetUserDiskSpaceLimit"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetUserDiskSpaceLimit"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetUserDiskSpaceLimit */


/*-
 *   Method Name:  ChangeOwner
 * Documentation:  Changes the owner of an iFolder and sets the rights of the previous
 *                 owner to the rights specified.
 */
@implementation ChangeOwner
- (void) setParameters:(NSString*) in_iFolderID in_NewOwnerUserID:(NSString*) in_NewOwnerUserID in_OldOwnerRights:(NSString*) in_OldOwnerRights
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_NewOwnerUserID,        
        in_OldOwnerRights,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"NewOwnerUserID",        
        @"OldOwnerRights",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"ChangeOwner"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/ChangeOwner"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* ChangeOwner */


/*-
 *   Method Name:  Ping
 * Documentation:  Allows a client to pint to make sure the Web Service is up and
 *                 running
 */
@implementation Ping
- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"Ping"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/Ping"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* Ping */


/*-
 *   Method Name:  SetDisplayConfirmation
 * Documentation:  Sets the display iFolder confirmation setting
 */
@implementation SetDisplayConfirmation
- (void) setParameters:(BOOL) in_DisplayConfirmation
{
    id _paramValues[] = {    
        [NSNumber numberWithBool: in_DisplayConfirmation],        
    };    
    NSString* _paramNames[] = {    
        @"DisplayConfirmation",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetDisplayConfirmation"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetDisplayConfirmation"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetDisplayConfirmation */


/*-
 *   Method Name:  GetAlliFolders
 * Documentation:  Returns all iFolders on the Server
 */
@implementation GetAlliFolders
- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetAlliFoldersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetAlliFolders"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetAlliFolders"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetAlliFolders */


/*-
 *   Method Name:  GetScopediFolderUsers
 * Documentation:  Get a scoped list of iFolderUsers
 */
@implementation GetScopediFolderUsers
- (void) setParameters:(SInt32) in_numUsers
{
    id _paramValues[] = {    
        [NSNumber numberWithInt: in_numUsers],        
    };    
    NSString* _paramNames[] = {    
        @"numUsers",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetScopediFolderUsersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetScopediFolderUsers"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetScopediFolderUsers"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetScopediFolderUsers */


/*-
 *   Method Name:  SetDefaultSyncInterval
 * Documentation:  Sets the Default Sync Interval
 */
@implementation SetDefaultSyncInterval
- (void) setParameters:(SInt32) in_Interval
{
    id _paramValues[] = {    
        [NSNumber numberWithInt: in_Interval],        
    };    
    NSString* _paramNames[] = {    
        @"Interval",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetDefaultSyncInterval"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetDefaultSyncInterval"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetDefaultSyncInterval */


/*-
 *   Method Name:  SetUserRights
 * Documentation:  Set the Rights of a member of an iFolder.  The Rights can be
 *                 "Admin", "ReadOnly", or "ReadWrite".
 */
@implementation SetUserRights
- (void) setParameters:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID in_Rights:(NSString*) in_Rights
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_UserID,        
        in_Rights,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"UserID",        
        @"Rights",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SetUserRights"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SetUserRights"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SetUserRights */


/*-
 *   Method Name:  SynciFolderNow
 * Documentation:  Sends a command to the sync engine to sync the iFolder of the
 *                 specified ID.
 */
@implementation SynciFolderNow
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SynciFolderNow"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SynciFolderNow"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SynciFolderNow */


/*-
 *   Method Name:  RemoveProxy
 * Documentation:  Removes proxy settings
 */
@implementation RemoveProxy
- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"RemoveProxy"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/RemoveProxy"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* RemoveProxy */


/*-
 *   Method Name:  CanBeiFolder
 * Documentation:  Checks LocalPath to see if can be an iFolder
 */
@implementation CanBeiFolder
- (void) setParameters:(NSString*) in_LocalPath
{
    id _paramValues[] = {    
        in_LocalPath,        
    };    
    NSString* _paramNames[] = {    
        @"LocalPath",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"CanBeiFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"CanBeiFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/CanBeiFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* CanBeiFolder */


/*-
 *   Method Name:  IsPathIniFolder
 * Documentation:  Checks LocalPath to see if is in an iFolder
 */
@implementation IsPathIniFolder
- (void) setParameters:(NSString*) in_LocalPath
{
    id _paramValues[] = {    
        in_LocalPath,        
    };    
    NSString* _paramNames[] = {    
        @"LocalPath",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"IsPathIniFolderResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"IsPathIniFolder"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/IsPathIniFolder"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* IsPathIniFolder */


/*-
 *   Method Name:  GetiFolderUsers
 * Documentation:  Get the list of iFolder Members
 */
@implementation GetiFolderUsers
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderUsersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderUsers"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderUsers"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderUsers */


/*-
 *   Method Name:  DeclineiFolderInvitation
 * Documentation:  Decline an invitation to an iFolder.  The iFolder ID represents a
 *                 Subscription object
 */
@implementation DeclineiFolderInvitation
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return nil;    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"DeclineiFolderInvitation"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/DeclineiFolderInvitation"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* DeclineiFolderInvitation */


/*-
 *   Method Name:  GetUserDiskSpace
 * Documentation:  Gets the DiskSpaceQuota for a member
 */
@implementation GetUserDiskSpace
- (void) setParameters:(NSString*) in_UserID
{
    id _paramValues[] = {    
        in_UserID,        
    };    
    NSString* _paramNames[] = {    
        @"UserID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetUserDiskSpaceResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetUserDiskSpace"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetUserDiskSpace"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetUserDiskSpace */


/*-
 *   Method Name:  GetiFolderByLocalPath
 * Documentation:  Get An iFolder using a LocalPath
 */
@implementation GetiFolderByLocalPath
- (void) setParameters:(NSString*) in_LocalPath
{
    id _paramValues[] = {    
        in_LocalPath,        
    };    
    NSString* _paramNames[] = {    
        @"LocalPath",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderByLocalPathResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderByLocalPath"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderByLocalPath"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderByLocalPath */


/*-
 *   Method Name:  GetAlliFolderUsers
 * Documentation:  Get the list of All iFolderUsers
 */
@implementation GetAlliFolderUsers
- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetAlliFolderUsersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetAlliFolderUsers"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetAlliFolderUsers"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetAlliFolderUsers */


/*-
 *   Method Name:  GetiFolders
 * Documentation:  Returns iFolders for the specified UserID
 */
@implementation GetiFolders
- (void) setParameters:(NSString*) in_UserID
{
    id _paramValues[] = {    
        in_UserID,        
    };    
    NSString* _paramNames[] = {    
        @"UserID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFoldersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolders"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolders"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolders */


/*-
 *   Method Name:  GetiFolderUser
 * Documentation:  Lookup a single member to a collection
 */
@implementation GetiFolderUser
- (void) setParameters:(NSString*) in_UserID
{
    id _paramValues[] = {    
        in_UserID,        
    };    
    NSString* _paramNames[] = {    
        @"UserID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderUserResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderUser"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderUser"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderUser */


/*-
 *   Method Name:  GetOwner
 * Documentation:  Get the Owner of an iFolder
 */
@implementation GetOwner
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetOwnerResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetOwner"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetOwner"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetOwner */


/*-
 *   Method Name:  InviteUser
 * Documentation:  Invite a user to an iFolder.  This call will only work with
 *                 Enterprise iFolders
 */
@implementation InviteUser
- (void) setParameters:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID in_Rights:(NSString*) in_Rights
{
    id _paramValues[] = {    
        in_iFolderID,        
        in_UserID,        
        in_Rights,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
        @"UserID",        
        @"Rights",        
    };    
    [super setParameters:3 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"InviteUserResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"InviteUser"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/InviteUser"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* InviteUser */


/*-
 *   Method Name:  SearchForiFolderUsers
 * Documentation:  Search for a Member of a specified name.
 */
@implementation SearchForiFolderUsers
- (void) setParameters:(NSString*) in_SearchString
{
    id _paramValues[] = {    
        in_SearchString,        
    };    
    NSString* _paramNames[] = {    
        @"SearchString",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"SearchForiFolderUsersResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"SearchForiFolderUsers"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/SearchForiFolderUsers"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* SearchForiFolderUsers */


/*-
 *   Method Name:  GetiFolderConflicts
 * Documentation:  Connects to an iFolder Enterprise Server
 */
@implementation GetiFolderConflicts
- (void) setParameters:(NSString*) in_iFolderID
{
    id _paramValues[] = {    
        in_iFolderID,        
    };    
    NSString* _paramNames[] = {    
        @"iFolderID",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"GetiFolderConflictsResult"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://127.0.0.1:8086/simias10/iFolder.asmx"            
                 methodName: @"GetiFolderConflicts"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://novell.com/ifolder/web/GetiFolderConflicts"            
            methodNamespace: @"http://novell.com/ifolder/web/"            
        ];        
}

@end; /* GetiFolderConflicts */



@implementation iFolderWebService

+ (id) ResolveFileConflict:(NSString*) in_iFolderID in_conflictID:(NSString*) in_conflictID in_localChangesWin:(BOOL) in_localChangesWin
{
    id result = NULL;    
    ResolveFileConflict* _invocation = [[ResolveFileConflict alloc] init];    
    [_invocation setParameters: in_iFolderID in_conflictID:in_conflictID in_localChangesWin:in_localChangesWin];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) RemoveiFolderUser:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID
{
    id result = NULL;    
    RemoveiFolderUser* _invocation = [[RemoveiFolderUser alloc] init];    
    [_invocation setParameters: in_iFolderID in_UserID:in_UserID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetSettings
{
    id result = NULL;    
    GetSettings* _invocation = [[GetSettings alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolder:(NSString*) in_iFolderID
{
    id result = NULL;    
    GetiFolder* _invocation = [[GetiFolder alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ConnectToEnterpriseServer:(NSString*) in_UserName in_Password:(NSString*) in_Password in_Host:(NSString*) in_Host
{
    id result = NULL;    
    ConnectToEnterpriseServer* _invocation = [[ConnectToEnterpriseServer alloc] init];    
    [_invocation setParameters: in_UserName in_Password:in_Password in_Host:in_Host];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderUserFromNodeID:(NSString*) in_CollectionID in_NodeID:(NSString*) in_NodeID
{
    id result = NULL;    
    GetiFolderUserFromNodeID* _invocation = [[GetiFolderUserFromNodeID alloc] init];    
    [_invocation setParameters: in_CollectionID in_NodeID:in_NodeID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ConnectToDomain:(NSString*) in_UserName in_Password:(NSString*) in_Password in_Host:(NSString*) in_Host
{
    id result = NULL;    
    ConnectToDomain* _invocation = [[ConnectToDomain alloc] init];    
    [_invocation setParameters: in_UserName in_Password:in_Password in_Host:in_Host];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) RevertiFolder:(NSString*) in_iFolderID
{
    id result = NULL;    
    RevertiFolder* _invocation = [[RevertiFolder alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetupProxy:(NSString*) in_Host in_Port:(SInt32) in_Port
{
    id result = NULL;    
    SetupProxy* _invocation = [[SetupProxy alloc] init];    
    [_invocation setParameters: in_Host in_Port:in_Port];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ResolveNameConflict:(NSString*) in_iFolderID in_conflictID:(NSString*) in_conflictID in_newLocalName:(NSString*) in_newLocalName
{
    id result = NULL;    
    ResolveNameConflict* _invocation = [[ResolveNameConflict alloc] init];    
    [_invocation setParameters: in_iFolderID in_conflictID:in_conflictID in_newLocalName:in_newLocalName];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetiFolderDiskSpaceLimit:(NSString*) in_iFolderID in_Limit:(SInt32) in_Limit
{
    id result = NULL;    
    SetiFolderDiskSpaceLimit* _invocation = [[SetiFolderDiskSpaceLimit alloc] init];    
    [_invocation setParameters: in_iFolderID in_Limit:in_Limit];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) CreateLocaliFolder:(NSString*) in_Path
{
    id result = NULL;    
    CreateLocaliFolder* _invocation = [[CreateLocaliFolder alloc] init];    
    [_invocation setParameters: in_Path];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) CalculateSyncSize:(NSString*) in_iFolderID
{
    id result = NULL;    
    CalculateSyncSize* _invocation = [[CalculateSyncSize alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) AcceptiFolderInvitation:(NSString*) in_iFolderID in_LocalPath:(NSString*) in_LocalPath
{
    id result = NULL;    
    AcceptiFolderInvitation* _invocation = [[AcceptiFolderInvitation alloc] init];    
    [_invocation setParameters: in_iFolderID in_LocalPath:in_LocalPath];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetiFolderSyncInterval:(NSString*) in_iFolderID in_Interval:(SInt32) in_Interval
{
    id result = NULL;    
    SetiFolderSyncInterval* _invocation = [[SetiFolderSyncInterval alloc] init];    
    [_invocation setParameters: in_iFolderID in_Interval:in_Interval];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) IsiFolder:(NSString*) in_LocalPath
{
    id result = NULL;    
    IsiFolder* _invocation = [[IsiFolder alloc] init];    
    [_invocation setParameters: in_LocalPath];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) DeleteiFolder:(NSString*) in_iFolderID
{
    id result = NULL;    
    DeleteiFolder* _invocation = [[DeleteiFolder alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetDomains
{
    id result = NULL;    
    GetDomains* _invocation = [[GetDomains alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderDiskSpace:(NSString*) in_iFolderID
{
    id result = NULL;    
    GetiFolderDiskSpace* _invocation = [[GetiFolderDiskSpace alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetDefaultSyncInterval
{
    id result = NULL;    
    GetDefaultSyncInterval* _invocation = [[GetDefaultSyncInterval alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetUserDiskSpaceLimit:(NSString*) in_UserID in_Limit:(SInt32) in_Limit
{
    id result = NULL;    
    SetUserDiskSpaceLimit* _invocation = [[SetUserDiskSpaceLimit alloc] init];    
    [_invocation setParameters: in_UserID in_Limit:in_Limit];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) ChangeOwner:(NSString*) in_iFolderID in_NewOwnerUserID:(NSString*) in_NewOwnerUserID in_OldOwnerRights:(NSString*) in_OldOwnerRights
{
    id result = NULL;    
    ChangeOwner* _invocation = [[ChangeOwner alloc] init];    
    [_invocation setParameters: in_iFolderID in_NewOwnerUserID:in_NewOwnerUserID in_OldOwnerRights:in_OldOwnerRights];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) Ping
{
    id result = NULL;    
    Ping* _invocation = [[Ping alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetDisplayConfirmation:(BOOL) in_DisplayConfirmation
{
    id result = NULL;    
    SetDisplayConfirmation* _invocation = [[SetDisplayConfirmation alloc] init];    
    [_invocation setParameters: in_DisplayConfirmation];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetAlliFolders
{
    id result = NULL;    
    GetAlliFolders* _invocation = [[GetAlliFolders alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetScopediFolderUsers:(SInt32) in_numUsers
{
    id result = NULL;    
    GetScopediFolderUsers* _invocation = [[GetScopediFolderUsers alloc] init];    
    [_invocation setParameters: in_numUsers];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetDefaultSyncInterval:(SInt32) in_Interval
{
    id result = NULL;    
    SetDefaultSyncInterval* _invocation = [[SetDefaultSyncInterval alloc] init];    
    [_invocation setParameters: in_Interval];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SetUserRights:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID in_Rights:(NSString*) in_Rights
{
    id result = NULL;    
    SetUserRights* _invocation = [[SetUserRights alloc] init];    
    [_invocation setParameters: in_iFolderID in_UserID:in_UserID in_Rights:in_Rights];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SynciFolderNow:(NSString*) in_iFolderID
{
    id result = NULL;    
    SynciFolderNow* _invocation = [[SynciFolderNow alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) RemoveProxy
{
    id result = NULL;    
    RemoveProxy* _invocation = [[RemoveProxy alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) CanBeiFolder:(NSString*) in_LocalPath
{
    id result = NULL;    
    CanBeiFolder* _invocation = [[CanBeiFolder alloc] init];    
    [_invocation setParameters: in_LocalPath];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) IsPathIniFolder:(NSString*) in_LocalPath
{
    id result = NULL;    
    IsPathIniFolder* _invocation = [[IsPathIniFolder alloc] init];    
    [_invocation setParameters: in_LocalPath];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderUsers:(NSString*) in_iFolderID
{
    id result = NULL;    
    GetiFolderUsers* _invocation = [[GetiFolderUsers alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) DeclineiFolderInvitation:(NSString*) in_iFolderID
{
    id result = NULL;    
    DeclineiFolderInvitation* _invocation = [[DeclineiFolderInvitation alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetUserDiskSpace:(NSString*) in_UserID
{
    id result = NULL;    
    GetUserDiskSpace* _invocation = [[GetUserDiskSpace alloc] init];    
    [_invocation setParameters: in_UserID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderByLocalPath:(NSString*) in_LocalPath
{
    id result = NULL;    
    GetiFolderByLocalPath* _invocation = [[GetiFolderByLocalPath alloc] init];    
    [_invocation setParameters: in_LocalPath];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetAlliFolderUsers
{
    id result = NULL;    
    GetAlliFolderUsers* _invocation = [[GetAlliFolderUsers alloc] init];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolders:(NSString*) in_UserID
{
    id result = NULL;    
    GetiFolders* _invocation = [[GetiFolders alloc] init];    
    [_invocation setParameters: in_UserID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderUser:(NSString*) in_UserID
{
    id result = NULL;    
    GetiFolderUser* _invocation = [[GetiFolderUser alloc] init];    
    [_invocation setParameters: in_UserID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetOwner:(NSString*) in_iFolderID
{
    id result = NULL;    
    GetOwner* _invocation = [[GetOwner alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) InviteUser:(NSString*) in_iFolderID in_UserID:(NSString*) in_UserID in_Rights:(NSString*) in_Rights
{
    id result = NULL;    
    InviteUser* _invocation = [[InviteUser alloc] init];    
    [_invocation setParameters: in_iFolderID in_UserID:in_UserID in_Rights:in_Rights];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) SearchForiFolderUsers:(NSString*) in_SearchString
{
    id result = NULL;    
    SearchForiFolderUsers* _invocation = [[SearchForiFolderUsers alloc] init];    
    [_invocation setParameters: in_SearchString];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GetiFolderConflicts:(NSString*) in_iFolderID
{
    id result = NULL;    
    GetiFolderConflicts* _invocation = [[GetiFolderConflicts alloc] init];    
    [_invocation setParameters: in_iFolderID];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;


/*-
 * End of WSDL document at ./../WebService/iFolderWebService.wsdl
 */
