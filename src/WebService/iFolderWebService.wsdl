<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
      xmlns:s0="http://novell.com/ifolder/web/"
      xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
      xmlns:s="http://www.w3.org/2001/XMLSchema"
      xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
      xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/"
      xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" name="iFolderWebService"
      targetNamespace="http://novell.com/ifolder/web/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://novell.com/ifolder/web/"
          xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="Ping">
        <xs:complexType/>
      </xs:element>
      <xs:element name="PingResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetSettings">
        <xs:complexType/>
      </xs:element>
      <xs:complexType name="iFolderSettings">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="DefaultDomainID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="DefaultPOBoxID" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="HaveEnterprise" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="DisplayConfirmation" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="EnterpriseName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="EnterpriseDescription"
                type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="DefaultSyncInterval" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="UseProxy" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ProxyHost" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="ProxyPort" type="xs:int"/>
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetSettingsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetSettingsResult"
                  type="s0:iFolderSettings"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDisplayConfirmation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="DisplayConfirmation"
                  type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDisplayConfirmationResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="IsiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsiFolderResult" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanBeiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CanBeiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="CanBeiFolderResult"
                  type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPathIniFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IsPathIniFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="IsPathIniFolderResult"
                  type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateLocaliFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Path" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="iFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="LocalIncarnation"
                type="xs:unsignedLong"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ManagedPath" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UnManagedPath" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="MasterIncarnation"
                type="xs:unsignedLong"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Owner" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="OwnerID" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="EffectiveSyncInterval" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncInterval" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="Synchronizable" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Type" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsSubscription" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="EnumeratedState" type="xs:int"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsWorkgroup" type="xs:boolean"/>
          <xs:element minOccurs="1" maxOccurs="1" name="HasConflicts" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserRights" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="LastSyncTime" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CreateLocaliFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CreateLocaliFolderResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Path" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CreateiFolderInDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CreateiFolderInDomainResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="POBoxID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderInvitationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderInvitationResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderByLocalPath">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderByLocalPathResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderByLocalPathResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeleteiFolderResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RevertiFolder">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RevertiFolderResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="RevertiFolderResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAlliFolders">
        <xs:complexType/>
      </xs:element>
      <xs:complexType name="ArrayOfIFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="iFolderWeb"
                type="s0:iFolderWeb"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetAlliFoldersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetAlliFoldersResult"
                  type="s0:ArrayOfIFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersForDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersForDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFoldersForDomainResult"
                  type="s0:ArrayOfIFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolders">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFoldersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFoldersResult"
                  type="s0:ArrayOfIFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserRights">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserRightsResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="iFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsOwner" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="FirstName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Surname" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="FN" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetOwnerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetOwnerResult"
                  type="s0:iFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeOwner">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="NewOwnerUserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="OldOwnerRights" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ChangeOwnerResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveiFolderUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveiFolderUserResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetiFolderUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfIFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="iFolderUser"
                type="s0:iFolderUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetiFolderUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAlliFolderUsers">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetAlliFolderUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetAlliFolderUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetScopediFolderUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="numUsers" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetScopediFolderUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetScopediFolderUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="numUsers" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForiFolderUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="SearchString" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForiFolderUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="SearchForiFolderUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForDomainUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="SearchString" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SearchForDomainUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="SearchForDomainUsersResult"
                  type="s0:ArrayOfIFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUserResult"
                  type="s0:iFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainiFolderUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainiFolderUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainiFolderUserResult"
                  type="s0:iFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserFromNodeID">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="NodeID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderUserFromNodeIDResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderUserFromNodeIDResult"
                  type="s0:iFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InviteUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="InviteUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="InviteUserResult"
                  type="s0:iFolderUser"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="LocalPath" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AcceptiFolderInvitationResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="AcceptiFolderInvitationResult"
                  type="s0:iFolderWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeclineiFolderInvitation">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DeclineiFolderInvitationResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetUserDiskSpace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DiskSpace">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="AvailableSpace" type="xs:long"/>
          <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long"/>
          <xs:element minOccurs="1" maxOccurs="1" name="UsedSpace" type="xs:long"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetUserDiskSpaceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetUserDiskSpaceResult"
                  type="s0:DiskSpace"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUserDiskSpace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomainUserDiskSpaceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainUserDiskSpaceResult"
                  type="s0:DiskSpace"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderDiskSpace">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderDiskSpaceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderDiskSpaceResult"
                  type="s0:DiskSpace"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserDiskSpaceLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetUserDiskSpaceLimitResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetDomainUserDiskSpaceLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="DomainID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDomainUserDiskSpaceLimitResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetiFolderDiskSpaceLimit">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderDiskSpaceLimitResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetiFolderSyncInterval">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Interval" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetiFolderSyncIntervalResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetDefaultSyncInterval">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="Interval" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDefaultSyncIntervalResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetDefaultSyncInterval">
        <xs:complexType/>
      </xs:element>
      <xs:element name="GetDefaultSyncIntervalResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="1" name="GetDefaultSyncIntervalResult"
                  type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConnectToEnterpriseServer">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Password" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConnectToEnterpriseServerResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ConnectToEnterpriseServerResult"
                  type="s0:iFolderSettings"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ConnectToDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Password" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="DomainWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="POBoxID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsDefault" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ConnectToDomainResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="ConnectToDomainResult"
                  type="s0:DomainWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetDomains">
        <xs:complexType/>
      </xs:element>
      <xs:complexType name="ArrayOfDomainWeb">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="DomainWeb"
                type="s0:DomainWeb"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetDomainsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetDomainsResult"
                  type="s0:ArrayOfDomainWeb"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetiFolderConflicts">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="ArrayOfConflict">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="Conflict"
                type="s0:Conflict"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Conflict">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ConflictID" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="LocalName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="LocalDate" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="LocalSize" type="xs:string"/>
          <xs:element minOccurs="1" maxOccurs="1" name="IsNameConflict" type="xs:boolean"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ServerName" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ServerDate" type="xs:string"/>
          <xs:element minOccurs="0" maxOccurs="1" name="ServerSize" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetiFolderConflictsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="GetiFolderConflictsResult"
                  type="s0:ArrayOfConflict"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveFileConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="localChangesWin" type="xs:boolean"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveFileConflictResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="ResolveNameConflict">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="conflictID" type="xs:string"/>
            <xs:element minOccurs="0" maxOccurs="1" name="newLocalName" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ResolveNameConflictResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetupProxy">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string"/>
            <xs:element minOccurs="1" maxOccurs="1" name="Port" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetupProxyResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveProxy">
        <xs:complexType/>
      </xs:element>
      <xs:element name="RemoveProxyResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="CalculateSyncSize">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="SyncSize">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncNodeCount" type="xs:unsignedInt"/>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncByteCount" type="xs:unsignedLong"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="CalculateSyncSizeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="CalculateSyncSizeResult"
                  type="s0:SyncSize"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SynciFolderNow">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SynciFolderNowResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="SetDefaultDomain">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="domainID" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="SetDefaultDomainResponse">
        <xs:complexType/>
      </xs:element>
      <xs:element name="iFolderSettings" type="s0:iFolderSettings"/>
      <xs:element name="boolean" type="xs:boolean"/>
      <xs:element name="iFolderWeb" type="s0:iFolderWeb"/>
      <xs:element name="ArrayOfIFolderWeb" type="s0:ArrayOfIFolderWeb"/>
      <xs:element name="iFolderUser" type="s0:iFolderUser"/>
      <xs:element name="ArrayOfIFolderUser" type="s0:ArrayOfIFolderUser"/>
      <xs:element name="DiskSpace" type="s0:DiskSpace"/>
      <xs:element name="int" type="xs:int"/>
      <xs:element name="DomainWeb" type="s0:DomainWeb"/>
      <xs:element name="ArrayOfDomainWeb" type="s0:ArrayOfDomainWeb"/>
      <xs:element name="ArrayOfConflict" type="s0:ArrayOfConflict"/>
      <xs:element name="SyncSize" type="s0:SyncSize"/>
    </xs:schema>
  </types>
  <message name="PingSoapIn">
    <part name="parameters" element="s0:Ping"/>
  </message>
  <message name="PingSoapOut">
    <part name="parameters" element="s0:PingResponse"/>
  </message>
  <message name="GetSettingsSoapIn">
    <part name="parameters" element="s0:GetSettings"/>
  </message>
  <message name="GetSettingsSoapOut">
    <part name="parameters" element="s0:GetSettingsResponse"/>
  </message>
  <message name="SetDisplayConfirmationSoapIn">
    <part name="parameters" element="s0:SetDisplayConfirmation"/>
  </message>
  <message name="SetDisplayConfirmationSoapOut">
    <part name="parameters" element="s0:SetDisplayConfirmationResponse"/>
  </message>
  <message name="IsiFolderSoapIn">
    <part name="parameters" element="s0:IsiFolder"/>
  </message>
  <message name="IsiFolderSoapOut">
    <part name="parameters" element="s0:IsiFolderResponse"/>
  </message>
  <message name="CanBeiFolderSoapIn">
    <part name="parameters" element="s0:CanBeiFolder"/>
  </message>
  <message name="CanBeiFolderSoapOut">
    <part name="parameters" element="s0:CanBeiFolderResponse"/>
  </message>
  <message name="IsPathIniFolderSoapIn">
    <part name="parameters" element="s0:IsPathIniFolder"/>
  </message>
  <message name="IsPathIniFolderSoapOut">
    <part name="parameters" element="s0:IsPathIniFolderResponse"/>
  </message>
  <message name="CreateLocaliFolderSoapIn">
    <part name="parameters" element="s0:CreateLocaliFolder"/>
  </message>
  <message name="CreateLocaliFolderSoapOut">
    <part name="parameters" element="s0:CreateLocaliFolderResponse"/>
  </message>
  <message name="CreateiFolderInDomainSoapIn">
    <part name="parameters" element="s0:CreateiFolderInDomain"/>
  </message>
  <message name="CreateiFolderInDomainSoapOut">
    <part name="parameters" element="s0:CreateiFolderInDomainResponse"/>
  </message>
  <message name="GetiFolderSoapIn">
    <part name="parameters" element="s0:GetiFolder"/>
  </message>
  <message name="GetiFolderSoapOut">
    <part name="parameters" element="s0:GetiFolderResponse"/>
  </message>
  <message name="GetiFolderInvitationSoapIn">
    <part name="parameters" element="s0:GetiFolderInvitation"/>
  </message>
  <message name="GetiFolderInvitationSoapOut">
    <part name="parameters" element="s0:GetiFolderInvitationResponse"/>
  </message>
  <message name="GetiFolderByLocalPathSoapIn">
    <part name="parameters" element="s0:GetiFolderByLocalPath"/>
  </message>
  <message name="GetiFolderByLocalPathSoapOut">
    <part name="parameters" element="s0:GetiFolderByLocalPathResponse"/>
  </message>
  <message name="DeleteiFolderSoapIn">
    <part name="parameters" element="s0:DeleteiFolder"/>
  </message>
  <message name="DeleteiFolderSoapOut">
    <part name="parameters" element="s0:DeleteiFolderResponse"/>
  </message>
  <message name="RevertiFolderSoapIn">
    <part name="parameters" element="s0:RevertiFolder"/>
  </message>
  <message name="RevertiFolderSoapOut">
    <part name="parameters" element="s0:RevertiFolderResponse"/>
  </message>
  <message name="GetAlliFoldersSoapIn">
    <part name="parameters" element="s0:GetAlliFolders"/>
  </message>
  <message name="GetAlliFoldersSoapOut">
    <part name="parameters" element="s0:GetAlliFoldersResponse"/>
  </message>
  <message name="GetiFoldersForDomainSoapIn">
    <part name="parameters" element="s0:GetiFoldersForDomain"/>
  </message>
  <message name="GetiFoldersForDomainSoapOut">
    <part name="parameters" element="s0:GetiFoldersForDomainResponse"/>
  </message>
  <message name="GetiFoldersSoapIn">
    <part name="parameters" element="s0:GetiFolders"/>
  </message>
  <message name="GetiFoldersSoapOut">
    <part name="parameters" element="s0:GetiFoldersResponse"/>
  </message>
  <message name="SetUserRightsSoapIn">
    <part name="parameters" element="s0:SetUserRights"/>
  </message>
  <message name="SetUserRightsSoapOut">
    <part name="parameters" element="s0:SetUserRightsResponse"/>
  </message>
  <message name="GetOwnerSoapIn">
    <part name="parameters" element="s0:GetOwner"/>
  </message>
  <message name="GetOwnerSoapOut">
    <part name="parameters" element="s0:GetOwnerResponse"/>
  </message>
  <message name="ChangeOwnerSoapIn">
    <part name="parameters" element="s0:ChangeOwner"/>
  </message>
  <message name="ChangeOwnerSoapOut">
    <part name="parameters" element="s0:ChangeOwnerResponse"/>
  </message>
  <message name="RemoveiFolderUserSoapIn">
    <part name="parameters" element="s0:RemoveiFolderUser"/>
  </message>
  <message name="RemoveiFolderUserSoapOut">
    <part name="parameters" element="s0:RemoveiFolderUserResponse"/>
  </message>
  <message name="GetiFolderUsersSoapIn">
    <part name="parameters" element="s0:GetiFolderUsers"/>
  </message>
  <message name="GetiFolderUsersSoapOut">
    <part name="parameters" element="s0:GetiFolderUsersResponse"/>
  </message>
  <message name="GetAlliFolderUsersSoapIn">
    <part name="parameters" element="s0:GetAlliFolderUsers"/>
  </message>
  <message name="GetAlliFolderUsersSoapOut">
    <part name="parameters" element="s0:GetAlliFolderUsersResponse"/>
  </message>
  <message name="GetScopediFolderUsersSoapIn">
    <part name="parameters" element="s0:GetScopediFolderUsers"/>
  </message>
  <message name="GetScopediFolderUsersSoapOut">
    <part name="parameters" element="s0:GetScopediFolderUsersResponse"/>
  </message>
  <message name="GetDomainUsersSoapIn">
    <part name="parameters" element="s0:GetDomainUsers"/>
  </message>
  <message name="GetDomainUsersSoapOut">
    <part name="parameters" element="s0:GetDomainUsersResponse"/>
  </message>
  <message name="SearchForiFolderUsersSoapIn">
    <part name="parameters" element="s0:SearchForiFolderUsers"/>
  </message>
  <message name="SearchForiFolderUsersSoapOut">
    <part name="parameters" element="s0:SearchForiFolderUsersResponse"/>
  </message>
  <message name="SearchForDomainUsersSoapIn">
    <part name="parameters" element="s0:SearchForDomainUsers"/>
  </message>
  <message name="SearchForDomainUsersSoapOut">
    <part name="parameters" element="s0:SearchForDomainUsersResponse"/>
  </message>
  <message name="GetiFolderUserSoapIn">
    <part name="parameters" element="s0:GetiFolderUser"/>
  </message>
  <message name="GetiFolderUserSoapOut">
    <part name="parameters" element="s0:GetiFolderUserResponse"/>
  </message>
  <message name="GetDomainiFolderUserSoapIn">
    <part name="parameters" element="s0:GetDomainiFolderUser"/>
  </message>
  <message name="GetDomainiFolderUserSoapOut">
    <part name="parameters" element="s0:GetDomainiFolderUserResponse"/>
  </message>
  <message name="GetiFolderUserFromNodeIDSoapIn">
    <part name="parameters" element="s0:GetiFolderUserFromNodeID"/>
  </message>
  <message name="GetiFolderUserFromNodeIDSoapOut">
    <part name="parameters" element="s0:GetiFolderUserFromNodeIDResponse"/>
  </message>
  <message name="InviteUserSoapIn">
    <part name="parameters" element="s0:InviteUser"/>
  </message>
  <message name="InviteUserSoapOut">
    <part name="parameters" element="s0:InviteUserResponse"/>
  </message>
  <message name="AcceptiFolderInvitationSoapIn">
    <part name="parameters" element="s0:AcceptiFolderInvitation"/>
  </message>
  <message name="AcceptiFolderInvitationSoapOut">
    <part name="parameters" element="s0:AcceptiFolderInvitationResponse"/>
  </message>
  <message name="DeclineiFolderInvitationSoapIn">
    <part name="parameters" element="s0:DeclineiFolderInvitation"/>
  </message>
  <message name="DeclineiFolderInvitationSoapOut">
    <part name="parameters" element="s0:DeclineiFolderInvitationResponse"/>
  </message>
  <message name="GetUserDiskSpaceSoapIn">
    <part name="parameters" element="s0:GetUserDiskSpace"/>
  </message>
  <message name="GetUserDiskSpaceSoapOut">
    <part name="parameters" element="s0:GetUserDiskSpaceResponse"/>
  </message>
  <message name="GetDomainUserDiskSpaceSoapIn">
    <part name="parameters" element="s0:GetDomainUserDiskSpace"/>
  </message>
  <message name="GetDomainUserDiskSpaceSoapOut">
    <part name="parameters" element="s0:GetDomainUserDiskSpaceResponse"/>
  </message>
  <message name="GetiFolderDiskSpaceSoapIn">
    <part name="parameters" element="s0:GetiFolderDiskSpace"/>
  </message>
  <message name="GetiFolderDiskSpaceSoapOut">
    <part name="parameters" element="s0:GetiFolderDiskSpaceResponse"/>
  </message>
  <message name="SetUserDiskSpaceLimitSoapIn">
    <part name="parameters" element="s0:SetUserDiskSpaceLimit"/>
  </message>
  <message name="SetUserDiskSpaceLimitSoapOut">
    <part name="parameters" element="s0:SetUserDiskSpaceLimitResponse"/>
  </message>
  <message name="SetDomainUserDiskSpaceLimitSoapIn">
    <part name="parameters" element="s0:SetDomainUserDiskSpaceLimit"/>
  </message>
  <message name="SetDomainUserDiskSpaceLimitSoapOut">
    <part name="parameters" element="s0:SetDomainUserDiskSpaceLimitResponse"/>
  </message>
  <message name="SetiFolderDiskSpaceLimitSoapIn">
    <part name="parameters" element="s0:SetiFolderDiskSpaceLimit"/>
  </message>
  <message name="SetiFolderDiskSpaceLimitSoapOut">
    <part name="parameters" element="s0:SetiFolderDiskSpaceLimitResponse"/>
  </message>
  <message name="SetiFolderSyncIntervalSoapIn">
    <part name="parameters" element="s0:SetiFolderSyncInterval"/>
  </message>
  <message name="SetiFolderSyncIntervalSoapOut">
    <part name="parameters" element="s0:SetiFolderSyncIntervalResponse"/>
  </message>
  <message name="SetDefaultSyncIntervalSoapIn">
    <part name="parameters" element="s0:SetDefaultSyncInterval"/>
  </message>
  <message name="SetDefaultSyncIntervalSoapOut">
    <part name="parameters" element="s0:SetDefaultSyncIntervalResponse"/>
  </message>
  <message name="GetDefaultSyncIntervalSoapIn">
    <part name="parameters" element="s0:GetDefaultSyncInterval"/>
  </message>
  <message name="GetDefaultSyncIntervalSoapOut">
    <part name="parameters" element="s0:GetDefaultSyncIntervalResponse"/>
  </message>
  <message name="ConnectToEnterpriseServerSoapIn">
    <part name="parameters" element="s0:ConnectToEnterpriseServer"/>
  </message>
  <message name="ConnectToEnterpriseServerSoapOut">
    <part name="parameters" element="s0:ConnectToEnterpriseServerResponse"/>
  </message>
  <message name="ConnectToDomainSoapIn">
    <part name="parameters" element="s0:ConnectToDomain"/>
  </message>
  <message name="ConnectToDomainSoapOut">
    <part name="parameters" element="s0:ConnectToDomainResponse"/>
  </message>
  <message name="GetDomainsSoapIn">
    <part name="parameters" element="s0:GetDomains"/>
  </message>
  <message name="GetDomainsSoapOut">
    <part name="parameters" element="s0:GetDomainsResponse"/>
  </message>
  <message name="GetiFolderConflictsSoapIn">
    <part name="parameters" element="s0:GetiFolderConflicts"/>
  </message>
  <message name="GetiFolderConflictsSoapOut">
    <part name="parameters" element="s0:GetiFolderConflictsResponse"/>
  </message>
  <message name="ResolveFileConflictSoapIn">
    <part name="parameters" element="s0:ResolveFileConflict"/>
  </message>
  <message name="ResolveFileConflictSoapOut">
    <part name="parameters" element="s0:ResolveFileConflictResponse"/>
  </message>
  <message name="ResolveNameConflictSoapIn">
    <part name="parameters" element="s0:ResolveNameConflict"/>
  </message>
  <message name="ResolveNameConflictSoapOut">
    <part name="parameters" element="s0:ResolveNameConflictResponse"/>
  </message>
  <message name="SetupProxySoapIn">
    <part name="parameters" element="s0:SetupProxy"/>
  </message>
  <message name="SetupProxySoapOut">
    <part name="parameters" element="s0:SetupProxyResponse"/>
  </message>
  <message name="RemoveProxySoapIn">
    <part name="parameters" element="s0:RemoveProxy"/>
  </message>
  <message name="RemoveProxySoapOut">
    <part name="parameters" element="s0:RemoveProxyResponse"/>
  </message>
  <message name="CalculateSyncSizeSoapIn">
    <part name="parameters" element="s0:CalculateSyncSize"/>
  </message>
  <message name="CalculateSyncSizeSoapOut">
    <part name="parameters" element="s0:CalculateSyncSizeResponse"/>
  </message>
  <message name="SynciFolderNowSoapIn">
    <part name="parameters" element="s0:SynciFolderNow"/>
  </message>
  <message name="SynciFolderNowSoapOut">
    <part name="parameters" element="s0:SynciFolderNowResponse"/>
  </message>
  <message name="SetDefaultDomainSoapIn">
    <part name="parameters" element="s0:SetDefaultDomain"/>
  </message>
  <message name="SetDefaultDomainSoapOut">
    <part name="parameters" element="s0:SetDefaultDomainResponse"/>
  </message>
  <message name="PingHttpGetIn"/>
  <message name="PingHttpGetOut"/>
  <message name="GetSettingsHttpGetIn"/>
  <message name="GetSettingsHttpGetOut">
    <part name="Body" element="s0:iFolderSettings"/>
  </message>
  <message name="SetDisplayConfirmationHttpGetIn">
    <part name="DisplayConfirmation" type="s:boolean"/>
  </message>
  <message name="SetDisplayConfirmationHttpGetOut"/>
  <message name="IsiFolderHttpGetIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="IsiFolderHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CanBeiFolderHttpGetIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="CanBeiFolderHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="IsPathIniFolderHttpGetIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="IsPathIniFolderHttpGetOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CreateLocaliFolderHttpGetIn">
    <part name="Path" type="s:string"/>
  </message>
  <message name="CreateLocaliFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="CreateiFolderInDomainHttpGetIn">
    <part name="Path" type="s:string"/>
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="CreateiFolderInDomainHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderInvitationHttpGetIn">
    <part name="POBoxID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderInvitationHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderByLocalPathHttpGetIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="GetiFolderByLocalPathHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="DeleteiFolderHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DeleteiFolderHttpGetOut"/>
  <message name="RevertiFolderHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="RevertiFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetAlliFoldersHttpGetIn"/>
  <message name="GetAlliFoldersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="GetiFoldersForDomainHttpGetIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetiFoldersForDomainHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="GetiFoldersHttpGetIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetiFoldersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="SetUserRightsHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Rights" type="s:string"/>
  </message>
  <message name="SetUserRightsHttpGetOut"/>
  <message name="GetOwnerHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetOwnerHttpGetOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="ChangeOwnerHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="NewOwnerUserID" type="s:string"/>
    <part name="OldOwnerRights" type="s:string"/>
  </message>
  <message name="ChangeOwnerHttpGetOut"/>
  <message name="RemoveiFolderUserHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="RemoveiFolderUserHttpGetOut"/>
  <message name="GetiFolderUsersHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetAlliFolderUsersHttpGetIn"/>
  <message name="GetAlliFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetScopediFolderUsersHttpGetIn">
    <part name="numUsers" type="s:int"/>
  </message>
  <message name="GetScopediFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetDomainUsersHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="numUsers" type="s:int"/>
  </message>
  <message name="GetDomainUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="SearchForiFolderUsersHttpGetIn">
    <part name="SearchString" type="s:string"/>
  </message>
  <message name="SearchForiFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="SearchForDomainUsersHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="SearchString" type="s:string"/>
  </message>
  <message name="SearchForDomainUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetiFolderUserHttpGetIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetiFolderUserHttpGetOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="GetDomainiFolderUserHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetDomainiFolderUserHttpGetOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetIn">
    <part name="CollectionID" type="s:string"/>
    <part name="NodeID" type="s:string"/>
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="InviteUserHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Rights" type="s:string"/>
  </message>
  <message name="InviteUserHttpGetOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="AcceptiFolderInvitationHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="AcceptiFolderInvitationHttpGetOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="DeclineiFolderInvitationHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DeclineiFolderInvitationHttpGetOut"/>
  <message name="GetUserDiskSpaceHttpGetIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetUserDiskSpaceHttpGetOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="GetDomainUserDiskSpaceHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetDomainUserDiskSpaceHttpGetOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="GetiFolderDiskSpaceHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderDiskSpaceHttpGetOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetIn">
    <part name="UserID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetOut"/>
  <message name="SetDomainUserDiskSpaceLimitHttpGetIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetDomainUserDiskSpaceLimitHttpGetOut"/>
  <message name="SetiFolderDiskSpaceLimitHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpGetOut"/>
  <message name="SetiFolderSyncIntervalHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="Interval" type="s:int"/>
  </message>
  <message name="SetiFolderSyncIntervalHttpGetOut"/>
  <message name="SetDefaultSyncIntervalHttpGetIn">
    <part name="Interval" type="s:int"/>
  </message>
  <message name="SetDefaultSyncIntervalHttpGetOut"/>
  <message name="GetDefaultSyncIntervalHttpGetIn"/>
  <message name="GetDefaultSyncIntervalHttpGetOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ConnectToEnterpriseServerHttpGetIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToEnterpriseServerHttpGetOut">
    <part name="Body" element="s0:iFolderSettings"/>
  </message>
  <message name="ConnectToDomainHttpGetIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToDomainHttpGetOut">
    <part name="Body" element="s0:DomainWeb"/>
  </message>
  <message name="GetDomainsHttpGetIn"/>
  <message name="GetDomainsHttpGetOut">
    <part name="Body" element="s0:ArrayOfDomainWeb"/>
  </message>
  <message name="GetiFolderConflictsHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderConflictsHttpGetOut">
    <part name="Body" element="s0:ArrayOfConflict"/>
  </message>
  <message name="ResolveFileConflictHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="conflictID" type="s:string"/>
    <part name="localChangesWin" type="s:boolean"/>
  </message>
  <message name="ResolveFileConflictHttpGetOut"/>
  <message name="ResolveNameConflictHttpGetIn">
    <part name="iFolderID" type="s:string"/>
    <part name="conflictID" type="s:string"/>
    <part name="newLocalName" type="s:string"/>
  </message>
  <message name="ResolveNameConflictHttpGetOut"/>
  <message name="SetupProxyHttpGetIn">
    <part name="Host" type="s:string"/>
    <part name="Port" type="s:int"/>
  </message>
  <message name="SetupProxyHttpGetOut"/>
  <message name="RemoveProxyHttpGetIn"/>
  <message name="RemoveProxyHttpGetOut"/>
  <message name="CalculateSyncSizeHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="CalculateSyncSizeHttpGetOut">
    <part name="Body" element="s0:SyncSize"/>
  </message>
  <message name="SynciFolderNowHttpGetIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="SynciFolderNowHttpGetOut"/>
  <message name="SetDefaultDomainHttpGetIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDefaultDomainHttpGetOut"/>
  <message name="PingHttpPostIn"/>
  <message name="PingHttpPostOut"/>
  <message name="GetSettingsHttpPostIn"/>
  <message name="GetSettingsHttpPostOut">
    <part name="Body" element="s0:iFolderSettings"/>
  </message>
  <message name="SetDisplayConfirmationHttpPostIn">
    <part name="DisplayConfirmation" type="s:boolean"/>
  </message>
  <message name="SetDisplayConfirmationHttpPostOut"/>
  <message name="IsiFolderHttpPostIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="IsiFolderHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CanBeiFolderHttpPostIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="CanBeiFolderHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="IsPathIniFolderHttpPostIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="IsPathIniFolderHttpPostOut">
    <part name="Body" element="s0:boolean"/>
  </message>
  <message name="CreateLocaliFolderHttpPostIn">
    <part name="Path" type="s:string"/>
  </message>
  <message name="CreateLocaliFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="CreateiFolderInDomainHttpPostIn">
    <part name="Path" type="s:string"/>
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="CreateiFolderInDomainHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderInvitationHttpPostIn">
    <part name="POBoxID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderInvitationHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetiFolderByLocalPathHttpPostIn">
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="GetiFolderByLocalPathHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="DeleteiFolderHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DeleteiFolderHttpPostOut"/>
  <message name="RevertiFolderHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="RevertiFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="GetAlliFoldersHttpPostIn"/>
  <message name="GetAlliFoldersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="GetiFoldersForDomainHttpPostIn">
    <part name="DomainID" type="s:string"/>
  </message>
  <message name="GetiFoldersForDomainHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="GetiFoldersHttpPostIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetiFoldersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb"/>
  </message>
  <message name="SetUserRightsHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Rights" type="s:string"/>
  </message>
  <message name="SetUserRightsHttpPostOut"/>
  <message name="GetOwnerHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetOwnerHttpPostOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="ChangeOwnerHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="NewOwnerUserID" type="s:string"/>
    <part name="OldOwnerRights" type="s:string"/>
  </message>
  <message name="ChangeOwnerHttpPostOut"/>
  <message name="RemoveiFolderUserHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="RemoveiFolderUserHttpPostOut"/>
  <message name="GetiFolderUsersHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetAlliFolderUsersHttpPostIn"/>
  <message name="GetAlliFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetScopediFolderUsersHttpPostIn">
    <part name="numUsers" type="s:int"/>
  </message>
  <message name="GetScopediFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetDomainUsersHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="numUsers" type="s:int"/>
  </message>
  <message name="GetDomainUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="SearchForiFolderUsersHttpPostIn">
    <part name="SearchString" type="s:string"/>
  </message>
  <message name="SearchForiFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="SearchForDomainUsersHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="SearchString" type="s:string"/>
  </message>
  <message name="SearchForDomainUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser"/>
  </message>
  <message name="GetiFolderUserHttpPostIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetiFolderUserHttpPostOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="GetDomainiFolderUserHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetDomainiFolderUserHttpPostOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostIn">
    <part name="CollectionID" type="s:string"/>
    <part name="NodeID" type="s:string"/>
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="InviteUserHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Rights" type="s:string"/>
  </message>
  <message name="InviteUserHttpPostOut">
    <part name="Body" element="s0:iFolderUser"/>
  </message>
  <message name="AcceptiFolderInvitationHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
    <part name="LocalPath" type="s:string"/>
  </message>
  <message name="AcceptiFolderInvitationHttpPostOut">
    <part name="Body" element="s0:iFolderWeb"/>
  </message>
  <message name="DeclineiFolderInvitationHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="DeclineiFolderInvitationHttpPostOut"/>
  <message name="GetUserDiskSpaceHttpPostIn">
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetUserDiskSpaceHttpPostOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="GetDomainUserDiskSpaceHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
  </message>
  <message name="GetDomainUserDiskSpaceHttpPostOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="GetiFolderDiskSpaceHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderDiskSpaceHttpPostOut">
    <part name="Body" element="s0:DiskSpace"/>
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostIn">
    <part name="UserID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostOut"/>
  <message name="SetDomainUserDiskSpaceLimitHttpPostIn">
    <part name="DomainID" type="s:string"/>
    <part name="UserID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetDomainUserDiskSpaceLimitHttpPostOut"/>
  <message name="SetiFolderDiskSpaceLimitHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="Limit" type="s:long"/>
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpPostOut"/>
  <message name="SetiFolderSyncIntervalHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="Interval" type="s:int"/>
  </message>
  <message name="SetiFolderSyncIntervalHttpPostOut"/>
  <message name="SetDefaultSyncIntervalHttpPostIn">
    <part name="Interval" type="s:int"/>
  </message>
  <message name="SetDefaultSyncIntervalHttpPostOut"/>
  <message name="GetDefaultSyncIntervalHttpPostIn"/>
  <message name="GetDefaultSyncIntervalHttpPostOut">
    <part name="Body" element="s0:int"/>
  </message>
  <message name="ConnectToEnterpriseServerHttpPostIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToEnterpriseServerHttpPostOut">
    <part name="Body" element="s0:iFolderSettings"/>
  </message>
  <message name="ConnectToDomainHttpPostIn">
    <part name="UserName" type="s:string"/>
    <part name="Password" type="s:string"/>
    <part name="Host" type="s:string"/>
  </message>
  <message name="ConnectToDomainHttpPostOut">
    <part name="Body" element="s0:DomainWeb"/>
  </message>
  <message name="GetDomainsHttpPostIn"/>
  <message name="GetDomainsHttpPostOut">
    <part name="Body" element="s0:ArrayOfDomainWeb"/>
  </message>
  <message name="GetiFolderConflictsHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="GetiFolderConflictsHttpPostOut">
    <part name="Body" element="s0:ArrayOfConflict"/>
  </message>
  <message name="ResolveFileConflictHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="conflictID" type="s:string"/>
    <part name="localChangesWin" type="s:boolean"/>
  </message>
  <message name="ResolveFileConflictHttpPostOut"/>
  <message name="ResolveNameConflictHttpPostIn">
    <part name="iFolderID" type="s:string"/>
    <part name="conflictID" type="s:string"/>
    <part name="newLocalName" type="s:string"/>
  </message>
  <message name="ResolveNameConflictHttpPostOut"/>
  <message name="SetupProxyHttpPostIn">
    <part name="Host" type="s:string"/>
    <part name="Port" type="s:int"/>
  </message>
  <message name="SetupProxyHttpPostOut"/>
  <message name="RemoveProxyHttpPostIn"/>
  <message name="RemoveProxyHttpPostOut"/>
  <message name="CalculateSyncSizeHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="CalculateSyncSizeHttpPostOut">
    <part name="Body" element="s0:SyncSize"/>
  </message>
  <message name="SynciFolderNowHttpPostIn">
    <part name="iFolderID" type="s:string"/>
  </message>
  <message name="SynciFolderNowHttpPostOut"/>
  <message name="SetDefaultDomainHttpPostIn">
    <part name="domainID" type="s:string"/>
  </message>
  <message name="SetDefaultDomainHttpPostOut"/>
  <portType name="iFolderWebServiceSoap">
    <operation name="Ping">
      <input message="s0:PingSoapIn"/>
      <output message="s0:PingSoapOut"/>
      <documentation>Allows a client to pint to make sure the Web Service is up and
            running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsSoapIn"/>
      <output message="s0:GetSettingsSoapOut"/>
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationSoapIn"/>
      <output message="s0:SetDisplayConfirmationSoapOut"/>
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderSoapIn"/>
      <output message="s0:IsiFolderSoapOut"/>
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderSoapIn"/>
      <output message="s0:CanBeiFolderSoapOut"/>
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderSoapIn"/>
      <output message="s0:IsPathIniFolderSoapOut"/>
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderSoapIn"/>
      <output message="s0:CreateLocaliFolderSoapOut"/>
      <documentation>Create An iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="CreateiFolderInDomain">
      <input message="s0:CreateiFolderInDomainSoapIn"/>
      <output message="s0:CreateiFolderInDomainSoapOut"/>
      <documentation>Create an iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderSoapIn"/>
      <output message="s0:GetiFolderSoapOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderInvitation">
      <input message="s0:GetiFolderInvitationSoapIn"/>
      <output message="s0:GetiFolderInvitationSoapOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathSoapIn"/>
      <output message="s0:GetiFolderByLocalPathSoapOut"/>
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderSoapIn"/>
      <output message="s0:DeleteiFolderSoapOut"/>
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderSoapIn"/>
      <output message="s0:RevertiFolderSoapOut"/>
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersSoapIn"/>
      <output message="s0:GetAlliFoldersSoapOut"/>
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFoldersForDomain">
      <input message="s0:GetiFoldersForDomainSoapIn"/>
      <output message="s0:GetiFoldersForDomainSoapOut"/>
      <documentation>Returns all iFolders in the specified domain</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersSoapIn"/>
      <output message="s0:GetiFoldersSoapOut"/>
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsSoapIn"/>
      <output message="s0:SetUserRightsSoapOut"/>
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin",
            "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerSoapIn"/>
      <output message="s0:GetOwnerSoapOut"/>
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerSoapIn"/>
      <output message="s0:ChangeOwnerSoapOut"/>
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner
            to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserSoapIn"/>
      <output message="s0:RemoveiFolderUserSoapOut"/>
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersSoapIn"/>
      <output message="s0:GetiFolderUsersSoapOut"/>
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersSoapIn"/>
      <output message="s0:GetAlliFolderUsersSoapOut"/>
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersSoapIn"/>
      <output message="s0:GetScopediFolderUsersSoapOut"/>
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="GetDomainUsers">
      <input message="s0:GetDomainUsersSoapIn"/>
      <output message="s0:GetDomainUsersSoapOut"/>
      <documentation>Get a scoped list of iFolderUsers for the specified domain</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersSoapIn"/>
      <output message="s0:SearchForiFolderUsersSoapOut"/>
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="SearchForDomainUsers">
      <input message="s0:SearchForDomainUsersSoapIn"/>
      <output message="s0:SearchForDomainUsersSoapOut"/>
      <documentation>Search for a Member of a specified name in the specified
            domain.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserSoapIn"/>
      <output message="s0:GetiFolderUserSoapOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetDomainiFolderUser">
      <input message="s0:GetDomainiFolderUserSoapIn"/>
      <output message="s0:GetDomainiFolderUserSoapOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDSoapIn"/>
      <output message="s0:GetiFolderUserFromNodeIDSoapOut"/>
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserSoapIn"/>
      <output message="s0:InviteUserSoapOut"/>
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise
            iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationSoapIn"/>
      <output message="s0:AcceptiFolderInvitationSoapOut"/>
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationSoapIn"/>
      <output message="s0:DeclineiFolderInvitationSoapOut"/>
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceSoapIn"/>
      <output message="s0:GetUserDiskSpaceSoapOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <input message="s0:GetDomainUserDiskSpaceSoapIn"/>
      <output message="s0:GetDomainUserDiskSpaceSoapOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceSoapIn"/>
      <output message="s0:GetiFolderDiskSpaceSoapOut"/>
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitSoapIn"/>
      <output message="s0:SetUserDiskSpaceLimitSoapOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <input message="s0:SetDomainUserDiskSpaceLimitSoapIn"/>
      <output message="s0:SetDomainUserDiskSpaceLimitSoapOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitSoapIn"/>
      <output message="s0:SetiFolderDiskSpaceLimitSoapOut"/>
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalSoapIn"/>
      <output message="s0:SetiFolderSyncIntervalSoapOut"/>
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalSoapIn"/>
      <output message="s0:SetDefaultSyncIntervalSoapOut"/>
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalSoapIn"/>
      <output message="s0:GetDefaultSyncIntervalSoapOut"/>
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerSoapIn"/>
      <output message="s0:ConnectToEnterpriseServerSoapOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainSoapIn"/>
      <output message="s0:ConnectToDomainSoapOut"/>
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsSoapIn"/>
      <output message="s0:GetDomainsSoapOut"/>
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsSoapIn"/>
      <output message="s0:GetiFolderConflictsSoapOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictSoapIn"/>
      <output message="s0:ResolveFileConflictSoapOut"/>
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictSoapIn"/>
      <output message="s0:ResolveNameConflictSoapOut"/>
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxySoapIn"/>
      <output message="s0:SetupProxySoapOut"/>
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxySoapIn"/>
      <output message="s0:RemoveProxySoapOut"/>
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeSoapIn"/>
      <output message="s0:CalculateSyncSizeSoapOut"/>
      <documentation>Calculates the number of nodes and bytes that need to be
            sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowSoapIn"/>
      <output message="s0:SynciFolderNowSoapOut"/>
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified
            ID.</documentation>
    </operation>
    <operation name="SetDefaultDomain">
      <input message="s0:SetDefaultDomainSoapIn"/>
      <output message="s0:SetDefaultDomainSoapOut"/>
      <documentation>Change the default domain to the specified domain ID</documentation>
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpGet">
    <operation name="Ping">
      <input message="s0:PingHttpGetIn"/>
      <output message="s0:PingHttpGetOut"/>
      <documentation>Allows a client to pint to make sure the Web Service is up and
            running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsHttpGetIn"/>
      <output message="s0:GetSettingsHttpGetOut"/>
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationHttpGetIn"/>
      <output message="s0:SetDisplayConfirmationHttpGetOut"/>
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderHttpGetIn"/>
      <output message="s0:IsiFolderHttpGetOut"/>
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderHttpGetIn"/>
      <output message="s0:CanBeiFolderHttpGetOut"/>
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderHttpGetIn"/>
      <output message="s0:IsPathIniFolderHttpGetOut"/>
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderHttpGetIn"/>
      <output message="s0:CreateLocaliFolderHttpGetOut"/>
      <documentation>Create An iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="CreateiFolderInDomain">
      <input message="s0:CreateiFolderInDomainHttpGetIn"/>
      <output message="s0:CreateiFolderInDomainHttpGetOut"/>
      <documentation>Create an iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderHttpGetIn"/>
      <output message="s0:GetiFolderHttpGetOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderInvitation">
      <input message="s0:GetiFolderInvitationHttpGetIn"/>
      <output message="s0:GetiFolderInvitationHttpGetOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathHttpGetIn"/>
      <output message="s0:GetiFolderByLocalPathHttpGetOut"/>
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderHttpGetIn"/>
      <output message="s0:DeleteiFolderHttpGetOut"/>
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderHttpGetIn"/>
      <output message="s0:RevertiFolderHttpGetOut"/>
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersHttpGetIn"/>
      <output message="s0:GetAlliFoldersHttpGetOut"/>
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFoldersForDomain">
      <input message="s0:GetiFoldersForDomainHttpGetIn"/>
      <output message="s0:GetiFoldersForDomainHttpGetOut"/>
      <documentation>Returns all iFolders in the specified domain</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersHttpGetIn"/>
      <output message="s0:GetiFoldersHttpGetOut"/>
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsHttpGetIn"/>
      <output message="s0:SetUserRightsHttpGetOut"/>
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin",
            "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerHttpGetIn"/>
      <output message="s0:GetOwnerHttpGetOut"/>
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerHttpGetIn"/>
      <output message="s0:ChangeOwnerHttpGetOut"/>
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner
            to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserHttpGetIn"/>
      <output message="s0:RemoveiFolderUserHttpGetOut"/>
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersHttpGetIn"/>
      <output message="s0:GetiFolderUsersHttpGetOut"/>
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersHttpGetIn"/>
      <output message="s0:GetAlliFolderUsersHttpGetOut"/>
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersHttpGetIn"/>
      <output message="s0:GetScopediFolderUsersHttpGetOut"/>
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="GetDomainUsers">
      <input message="s0:GetDomainUsersHttpGetIn"/>
      <output message="s0:GetDomainUsersHttpGetOut"/>
      <documentation>Get a scoped list of iFolderUsers for the specified domain</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersHttpGetIn"/>
      <output message="s0:SearchForiFolderUsersHttpGetOut"/>
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="SearchForDomainUsers">
      <input message="s0:SearchForDomainUsersHttpGetIn"/>
      <output message="s0:SearchForDomainUsersHttpGetOut"/>
      <documentation>Search for a Member of a specified name in the specified
            domain.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserHttpGetIn"/>
      <output message="s0:GetiFolderUserHttpGetOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetDomainiFolderUser">
      <input message="s0:GetDomainiFolderUserHttpGetIn"/>
      <output message="s0:GetDomainiFolderUserHttpGetOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDHttpGetIn"/>
      <output message="s0:GetiFolderUserFromNodeIDHttpGetOut"/>
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserHttpGetIn"/>
      <output message="s0:InviteUserHttpGetOut"/>
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise
            iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationHttpGetIn"/>
      <output message="s0:AcceptiFolderInvitationHttpGetOut"/>
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationHttpGetIn"/>
      <output message="s0:DeclineiFolderInvitationHttpGetOut"/>
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceHttpGetIn"/>
      <output message="s0:GetUserDiskSpaceHttpGetOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <input message="s0:GetDomainUserDiskSpaceHttpGetIn"/>
      <output message="s0:GetDomainUserDiskSpaceHttpGetOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceHttpGetIn"/>
      <output message="s0:GetiFolderDiskSpaceHttpGetOut"/>
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitHttpGetIn"/>
      <output message="s0:SetUserDiskSpaceLimitHttpGetOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <input message="s0:SetDomainUserDiskSpaceLimitHttpGetIn"/>
      <output message="s0:SetDomainUserDiskSpaceLimitHttpGetOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitHttpGetIn"/>
      <output message="s0:SetiFolderDiskSpaceLimitHttpGetOut"/>
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalHttpGetIn"/>
      <output message="s0:SetiFolderSyncIntervalHttpGetOut"/>
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalHttpGetIn"/>
      <output message="s0:SetDefaultSyncIntervalHttpGetOut"/>
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalHttpGetIn"/>
      <output message="s0:GetDefaultSyncIntervalHttpGetOut"/>
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerHttpGetIn"/>
      <output message="s0:ConnectToEnterpriseServerHttpGetOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainHttpGetIn"/>
      <output message="s0:ConnectToDomainHttpGetOut"/>
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsHttpGetIn"/>
      <output message="s0:GetDomainsHttpGetOut"/>
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsHttpGetIn"/>
      <output message="s0:GetiFolderConflictsHttpGetOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictHttpGetIn"/>
      <output message="s0:ResolveFileConflictHttpGetOut"/>
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictHttpGetIn"/>
      <output message="s0:ResolveNameConflictHttpGetOut"/>
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxyHttpGetIn"/>
      <output message="s0:SetupProxyHttpGetOut"/>
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxyHttpGetIn"/>
      <output message="s0:RemoveProxyHttpGetOut"/>
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeHttpGetIn"/>
      <output message="s0:CalculateSyncSizeHttpGetOut"/>
      <documentation>Calculates the number of nodes and bytes that need to be
            sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowHttpGetIn"/>
      <output message="s0:SynciFolderNowHttpGetOut"/>
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified
            ID.</documentation>
    </operation>
    <operation name="SetDefaultDomain">
      <input message="s0:SetDefaultDomainHttpGetIn"/>
      <output message="s0:SetDefaultDomainHttpGetOut"/>
      <documentation>Change the default domain to the specified domain ID</documentation>
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpPost">
    <operation name="Ping">
      <input message="s0:PingHttpPostIn"/>
      <output message="s0:PingHttpPostOut"/>
      <documentation>Allows a client to pint to make sure the Web Service is up and
            running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsHttpPostIn"/>
      <output message="s0:GetSettingsHttpPostOut"/>
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationHttpPostIn"/>
      <output message="s0:SetDisplayConfirmationHttpPostOut"/>
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderHttpPostIn"/>
      <output message="s0:IsiFolderHttpPostOut"/>
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderHttpPostIn"/>
      <output message="s0:CanBeiFolderHttpPostOut"/>
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderHttpPostIn"/>
      <output message="s0:IsPathIniFolderHttpPostOut"/>
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderHttpPostIn"/>
      <output message="s0:CreateLocaliFolderHttpPostOut"/>
      <documentation>Create An iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="CreateiFolderInDomain">
      <input message="s0:CreateiFolderInDomainHttpPostIn"/>
      <output message="s0:CreateiFolderInDomainHttpPostOut"/>
      <documentation>Create an iFolder. This will create an iFolder using the path specified. 
            The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderHttpPostIn"/>
      <output message="s0:GetiFolderHttpPostOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderInvitation">
      <input message="s0:GetiFolderInvitationHttpPostIn"/>
      <output message="s0:GetiFolderInvitationHttpPostOut"/>
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathHttpPostIn"/>
      <output message="s0:GetiFolderByLocalPathHttpPostOut"/>
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderHttpPostIn"/>
      <output message="s0:DeleteiFolderHttpPostOut"/>
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderHttpPostIn"/>
      <output message="s0:RevertiFolderHttpPostOut"/>
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersHttpPostIn"/>
      <output message="s0:GetAlliFoldersHttpPostOut"/>
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFoldersForDomain">
      <input message="s0:GetiFoldersForDomainHttpPostIn"/>
      <output message="s0:GetiFoldersForDomainHttpPostOut"/>
      <documentation>Returns all iFolders in the specified domain</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersHttpPostIn"/>
      <output message="s0:GetiFoldersHttpPostOut"/>
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsHttpPostIn"/>
      <output message="s0:SetUserRightsHttpPostOut"/>
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin",
            "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerHttpPostIn"/>
      <output message="s0:GetOwnerHttpPostOut"/>
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerHttpPostIn"/>
      <output message="s0:ChangeOwnerHttpPostOut"/>
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner
            to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserHttpPostIn"/>
      <output message="s0:RemoveiFolderUserHttpPostOut"/>
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersHttpPostIn"/>
      <output message="s0:GetiFolderUsersHttpPostOut"/>
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersHttpPostIn"/>
      <output message="s0:GetAlliFolderUsersHttpPostOut"/>
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersHttpPostIn"/>
      <output message="s0:GetScopediFolderUsersHttpPostOut"/>
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="GetDomainUsers">
      <input message="s0:GetDomainUsersHttpPostIn"/>
      <output message="s0:GetDomainUsersHttpPostOut"/>
      <documentation>Get a scoped list of iFolderUsers for the specified domain</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersHttpPostIn"/>
      <output message="s0:SearchForiFolderUsersHttpPostOut"/>
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="SearchForDomainUsers">
      <input message="s0:SearchForDomainUsersHttpPostIn"/>
      <output message="s0:SearchForDomainUsersHttpPostOut"/>
      <documentation>Search for a Member of a specified name in the specified
            domain.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserHttpPostIn"/>
      <output message="s0:GetiFolderUserHttpPostOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetDomainiFolderUser">
      <input message="s0:GetDomainiFolderUserHttpPostIn"/>
      <output message="s0:GetDomainiFolderUserHttpPostOut"/>
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDHttpPostIn"/>
      <output message="s0:GetiFolderUserFromNodeIDHttpPostOut"/>
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserHttpPostIn"/>
      <output message="s0:InviteUserHttpPostOut"/>
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise
            iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationHttpPostIn"/>
      <output message="s0:AcceptiFolderInvitationHttpPostOut"/>
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationHttpPostIn"/>
      <output message="s0:DeclineiFolderInvitationHttpPostOut"/>
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a
            Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceHttpPostIn"/>
      <output message="s0:GetUserDiskSpaceHttpPostOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <input message="s0:GetDomainUserDiskSpaceHttpPostIn"/>
      <output message="s0:GetDomainUserDiskSpaceHttpPostOut"/>
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceHttpPostIn"/>
      <output message="s0:GetiFolderDiskSpaceHttpPostOut"/>
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitHttpPostIn"/>
      <output message="s0:SetUserDiskSpaceLimitHttpPostOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <input message="s0:SetDomainUserDiskSpaceLimitHttpPostIn"/>
      <output message="s0:SetDomainUserDiskSpaceLimitHttpPostOut"/>
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitHttpPostIn"/>
      <output message="s0:SetiFolderDiskSpaceLimitHttpPostOut"/>
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalHttpPostIn"/>
      <output message="s0:SetiFolderSyncIntervalHttpPostOut"/>
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalHttpPostIn"/>
      <output message="s0:SetDefaultSyncIntervalHttpPostOut"/>
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalHttpPostIn"/>
      <output message="s0:GetDefaultSyncIntervalHttpPostOut"/>
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerHttpPostIn"/>
      <output message="s0:ConnectToEnterpriseServerHttpPostOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainHttpPostIn"/>
      <output message="s0:ConnectToDomainHttpPostOut"/>
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsHttpPostIn"/>
      <output message="s0:GetDomainsHttpPostOut"/>
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsHttpPostIn"/>
      <output message="s0:GetiFolderConflictsHttpPostOut"/>
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictHttpPostIn"/>
      <output message="s0:ResolveFileConflictHttpPostOut"/>
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictHttpPostIn"/>
      <output message="s0:ResolveNameConflictHttpPostOut"/>
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxyHttpPostIn"/>
      <output message="s0:SetupProxyHttpPostOut"/>
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxyHttpPostIn"/>
      <output message="s0:RemoveProxyHttpPostOut"/>
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeHttpPostIn"/>
      <output message="s0:CalculateSyncSizeHttpPostOut"/>
      <documentation>Calculates the number of nodes and bytes that need to be
            sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowHttpPostIn"/>
      <output message="s0:SynciFolderNowHttpPostOut"/>
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified
            ID.</documentation>
    </operation>
    <operation name="SetDefaultDomain">
      <input message="s0:SetDefaultDomainHttpPostIn"/>
      <output message="s0:SetDefaultDomainHttpPostOut"/>
      <documentation>Change the default domain to the specified domain ID</documentation>
    </operation>
  </portType>
  <binding name="iFolderWebServiceSoap" type="s0:iFolderWebServiceSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="Ping">
      <soap:operation soapAction="http://novell.com/ifolder/web/Ping" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetSettings">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetSettings" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDisplayConfirmation"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="IsiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CanBeiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsPathIniFolder"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateLocaliFolder"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateiFolderInDomain"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolder" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderInvitation"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderByLocalPath"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeleteiFolder"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RevertiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/RevertiFolder"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolders"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFoldersForDomain"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolders" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetUserRights">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserRights"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetOwner" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ChangeOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/ChangeOwner" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveiFolderUser"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolderUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetScopediFolderUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomainUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/SearchForiFolderUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/SearchForDomainUsers"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUser"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomainiFolderUser"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUserFromNodeID"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="InviteUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/InviteUser" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/AcceptiFolderInvitation"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeclineiFolderInvitation"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetUserDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetUserDiskSpace"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomainUserDiskSpace"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderDiskSpace"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserDiskSpaceLimit"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDomainUserDiskSpaceLimit"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderDiskSpaceLimit"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderSyncInterval"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDefaultSyncInterval"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDefaultSyncInterval"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <soap:operation soapAction="http://novell.com/ifolder/web/ConnectToEnterpriseServer"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/ConnectToDomain"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomains" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderConflicts"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveFileConflict"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="ResolveNameConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveNameConflict"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetupProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetupProxy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="RemoveProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveProxy" style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="CalculateSyncSize">
      <soap:operation soapAction="http://novell.com/ifolder/web/CalculateSyncSize"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <soap:operation soapAction="http://novell.com/ifolder/web/SynciFolderNow"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="SetDefaultDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDefaultDomain"
            style="document"/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpGet" type="s0:iFolderWebServiceHttpGet">
    <http:binding verb="GET"/>
    <operation name="Ping">
      <http:operation location="/Ping"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetSettings">
      <http:operation location="/GetSettings"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <http:operation location="/SetDisplayConfirmation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <http:operation location="/CreateiFolderInDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <http:operation location="/GetiFolderInvitation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <http:operation location="/GetiFoldersForDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <http:operation location="/GetAlliFolderUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <http:operation location="/GetScopediFolderUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <http:operation location="/GetDomainUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <http:operation location="/SearchForiFolderUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <http:operation location="/SearchForDomainUsers"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainiFolderUser">
      <http:operation location="/GetDomainiFolderUser"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <http:operation location="/GetDomainUserDiskSpace"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <http:operation location="/SetDomainUserDiskSpaceLimit"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <http:operation location="/ConnectToEnterpriseServer"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultDomain">
      <http:operation location="/SetDefaultDomain"/>
      <input>
        <http:urlEncoded/>
      </input>
      <output/>
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpPost" type="s0:iFolderWebServiceHttpPost">
    <http:binding verb="POST"/>
    <operation name="Ping">
      <http:operation location="/Ping"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetSettings">
      <http:operation location="/GetSettings"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <http:operation location="/SetDisplayConfirmation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="CreateiFolderInDomain">
      <http:operation location="/CreateiFolderInDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderInvitation">
      <http:operation location="/GetiFolderInvitation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFoldersForDomain">
      <http:operation location="/GetiFoldersForDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <http:operation location="/GetAlliFolderUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <http:operation location="/GetScopediFolderUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainUsers">
      <http:operation location="/GetDomainUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <http:operation location="/SearchForiFolderUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SearchForDomainUsers">
      <http:operation location="/SearchForDomainUsers"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainiFolderUser">
      <http:operation location="/GetDomainiFolderUser"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomainUserDiskSpace">
      <http:operation location="/GetDomainUserDiskSpace"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetDomainUserDiskSpaceLimit">
      <http:operation location="/SetDomainUserDiskSpaceLimit"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <http:operation location="/ConnectToEnterpriseServer"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output>
        <mime:mimeXml part="Body"/>
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
    <operation name="SetDefaultDomain">
      <http:operation location="/SetDefaultDomain"/>
      <input>
        <mime:content type="application/x-www-form-urlencoded"/>
      </input>
      <output/>
    </operation>
  </binding>
  <service name="iFolderWebService">
    <port name="iFolderWebServiceSoap" binding="s0:iFolderWebServiceSoap">
      <soap:address location="http://127.0.0.1:8086/simias10/iFolder.asmx"/>
    </port>
    <port name="iFolderWebServiceHttpGet" binding="s0:iFolderWebServiceHttpGet">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx"/>
    </port>
    <port name="iFolderWebServiceHttpPost" binding="s0:iFolderWebServiceHttpPost">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx"/>
    </port>
    <documentation>Web Service providing access to iFolder</documentation>
  </service>
</definitions>
