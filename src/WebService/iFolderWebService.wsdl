<?xml version="1.0" encoding="us-ascii"?>
<definitions xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:s0="http://novell.com/ifolder/web/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" name="iFolderWebService" targetNamespace="http://novell.com/ifolder/web/" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <types>
    <xs:schema xmlns:tns="http://novell.com/ifolder/web/encodedTypes" targetNamespace="http://novell.com/ifolder/web/encodedTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.xmlsoap.org/soap/encoding/" />
      <xs:import namespace="http://schemas.xmlsoap.org/wsdl/" />
      <xs:complexType name="iFolderSettings">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="DefaultDomainID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="DefaultPOBoxID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="HaveEnterprise" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="DisplayConfirmation" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="EnterpriseName" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="EnterpriseDescription" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="DefaultSyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="UseProxy" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="ProxyHost" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ProxyPort" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="CurrentUserID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="CurrentUserName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="iFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Domain" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="DomainIdentity" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="1" maxOccurs="1" name="ManagedPath" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="UnManagedPath" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="MasterIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="1" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Owner" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="OwnerID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="EffectiveSyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="Synchronizable" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="Type" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Description" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsSubscription" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="EnumeratedState" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsWorkgroup" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="HasConflicts" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="CurrentUserID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="CurrentUserRights" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="CollectionID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LastSyncTime" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfIFolderWeb">
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" d7p1:arrayType="tns:iFolderWeb[]" xmlns:d7p1="http://schemas.xmlsoap.org/wsdl/" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="iFolderUser">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="UserID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Rights" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsOwner" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="FirstName" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Surname" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="FN" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfIFolderUser">
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" d7p1:arrayType="tns:iFolderUser[]" xmlns:d7p1="http://schemas.xmlsoap.org/wsdl/" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="DiskSpace">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="AvailableSpace" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="UsedSpace" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DomainWeb">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="POBoxID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Description" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="Host" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="UserID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="UserName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ArrayOfDomainWeb">
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" d7p1:arrayType="tns:DomainWeb[]" xmlns:d7p1="http://schemas.xmlsoap.org/wsdl/" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ArrayOfConflict">
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute ref="soapenc:arrayType" d7p1:arrayType="tns:Conflict[]" xmlns:d7p1="http://schemas.xmlsoap.org/wsdl/" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="Conflict">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ConflictID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalName" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalDate" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalSize" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsNameConflict" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="ServerName" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ServerDate" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ServerSize" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SyncSize">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncNodeCount" type="xs:unsignedInt" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncByteCount" type="xs:unsignedLong" />
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema elementFormDefault="qualified" targetNamespace="http://novell.com/ifolder/web/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="iFolderSettings">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="DefaultDomainID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="DefaultPOBoxID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="HaveEnterprise" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="DisplayConfirmation" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="EnterpriseName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="EnterpriseDescription" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="DefaultSyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="UseProxy" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="ProxyHost" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="ProxyPort" type="xs:int" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="iFolderSettings" type="s0:iFolderSettings" />
      <xs:element name="boolean" type="xs:boolean" />
      <xs:complexType name="iFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Domain" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="DomainIdentity" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="LocalIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="0" maxOccurs="1" name="ManagedPath" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UnManagedPath" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="MasterIncarnation" type="xs:unsignedLong" />
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Owner" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="OwnerID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="EffectiveSyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncInterval" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="Synchronizable" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="Type" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsSubscription" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="EnumeratedState" type="xs:int" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsWorkgroup" type="xs:boolean" />
          <xs:element minOccurs="1" maxOccurs="1" name="HasConflicts" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="CurrentUserRights" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="CollectionID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LastSyncTime" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="iFolderWeb" type="s0:iFolderWeb" />
      <xs:complexType name="ArrayOfIFolderWeb">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="iFolderWeb" type="s0:iFolderWeb" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfIFolderWeb" type="s0:ArrayOfIFolderWeb" />
      <xs:complexType name="iFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Rights" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="State" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsOwner" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="FirstName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Surname" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="FN" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="iFolderUser" type="s0:iFolderUser" />
      <xs:complexType name="ArrayOfIFolderUser">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="iFolderUser" type="s0:iFolderUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfIFolderUser" type="s0:ArrayOfIFolderUser" />
      <xs:complexType name="DiskSpace">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="AvailableSpace" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="Limit" type="xs:long" />
          <xs:element minOccurs="1" maxOccurs="1" name="UsedSpace" type="xs:long" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DiskSpace" type="s0:DiskSpace" />
      <xs:element name="int" type="xs:int" />
      <xs:complexType name="DomainWeb">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="ID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="POBoxID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Name" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Description" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="Host" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UserID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="UserName" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="DomainWeb" type="s0:DomainWeb" />
      <xs:complexType name="ArrayOfDomainWeb">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="DomainWeb" type="s0:DomainWeb" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfDomainWeb" type="s0:ArrayOfDomainWeb" />
      <xs:complexType name="ArrayOfConflict">
        <xs:sequence>
          <xs:element minOccurs="0" nillable="true" maxOccurs="unbounded" name="Conflict" type="s0:Conflict" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Conflict">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="iFolderID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ConflictID" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalDate" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="LocalSize" type="xs:string" />
          <xs:element minOccurs="1" maxOccurs="1" name="IsNameConflict" type="xs:boolean" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerName" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerDate" type="xs:string" />
          <xs:element minOccurs="0" maxOccurs="1" name="ServerSize" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfConflict" type="s0:ArrayOfConflict" />
      <xs:complexType name="SyncSize">
        <xs:sequence>
          <xs:element minOccurs="1" maxOccurs="1" name="SyncNodeCount" type="xs:unsignedInt" />
          <xs:element minOccurs="1" maxOccurs="1" name="SyncByteCount" type="xs:unsignedLong" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SyncSize" type="s0:SyncSize" />
    </xs:schema>
  </types>
  <message name="PingSoapIn" />
  <message name="PingSoapOut" />
  <message name="GetSettingsSoapIn" />
  <message name="GetSettingsSoapOut">
    <part name="GetSettingsResult" xmlns:q1="http://novell.com/ifolder/web/encodedTypes" type="q1:iFolderSettings" />
  </message>
  <message name="SetDisplayConfirmationSoapIn">
    <part name="DisplayConfirmation" type="s:boolean" />
  </message>
  <message name="SetDisplayConfirmationSoapOut" />
  <message name="IsiFolderSoapIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsiFolderSoapOut">
    <part name="IsiFolderResult" type="s:boolean" />
  </message>
  <message name="CanBeiFolderSoapIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="CanBeiFolderSoapOut">
    <part name="CanBeiFolderResult" type="s:boolean" />
  </message>
  <message name="IsPathIniFolderSoapIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsPathIniFolderSoapOut">
    <part name="IsPathIniFolderResult" type="s:boolean" />
  </message>
  <message name="CreateLocaliFolderSoapIn">
    <part name="Path" type="s:string" />
  </message>
  <message name="CreateLocaliFolderSoapOut">
    <part name="CreateLocaliFolderResult" xmlns:q2="http://novell.com/ifolder/web/encodedTypes" type="q2:iFolderWeb" />
  </message>
  <message name="GetiFolderSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderSoapOut">
    <part name="GetiFolderResult" xmlns:q3="http://novell.com/ifolder/web/encodedTypes" type="q3:iFolderWeb" />
  </message>
  <message name="GetiFolderByLocalPathSoapIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="GetiFolderByLocalPathSoapOut">
    <part name="GetiFolderByLocalPathResult" xmlns:q4="http://novell.com/ifolder/web/encodedTypes" type="q4:iFolderWeb" />
  </message>
  <message name="DeleteiFolderSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderSoapOut" />
  <message name="RevertiFolderSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolderSoapOut">
    <part name="RevertiFolderResult" xmlns:q5="http://novell.com/ifolder/web/encodedTypes" type="q5:iFolderWeb" />
  </message>
  <message name="GetAlliFoldersSoapIn" />
  <message name="GetAlliFoldersSoapOut">
    <part name="GetAlliFoldersResult" xmlns:q6="http://novell.com/ifolder/web/encodedTypes" type="q6:ArrayOfIFolderWeb" />
  </message>
  <message name="GetiFoldersSoapIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFoldersSoapOut">
    <part name="GetiFoldersResult" xmlns:q7="http://novell.com/ifolder/web/encodedTypes" type="q7:ArrayOfIFolderWeb" />
  </message>
  <message name="SetUserRightsSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="SetUserRightsSoapOut" />
  <message name="GetOwnerSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetOwnerSoapOut">
    <part name="GetOwnerResult" xmlns:q8="http://novell.com/ifolder/web/encodedTypes" type="q8:iFolderUser" />
  </message>
  <message name="ChangeOwnerSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="NewOwnerUserID" type="s:string" />
    <part name="OldOwnerRights" type="s:string" />
  </message>
  <message name="ChangeOwnerSoapOut" />
  <message name="RemoveiFolderUserSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
  </message>
  <message name="RemoveiFolderUserSoapOut" />
  <message name="GetiFolderUsersSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderUsersSoapOut">
    <part name="GetiFolderUsersResult" xmlns:q9="http://novell.com/ifolder/web/encodedTypes" type="q9:ArrayOfIFolderUser" />
  </message>
  <message name="GetAlliFolderUsersSoapIn" />
  <message name="GetAlliFolderUsersSoapOut">
    <part name="GetAlliFolderUsersResult" xmlns:q10="http://novell.com/ifolder/web/encodedTypes" type="q10:ArrayOfIFolderUser" />
  </message>
  <message name="GetScopediFolderUsersSoapIn">
    <part name="numUsers" type="s:int" />
  </message>
  <message name="GetScopediFolderUsersSoapOut">
    <part name="GetScopediFolderUsersResult" xmlns:q11="http://novell.com/ifolder/web/encodedTypes" type="q11:ArrayOfIFolderUser" />
  </message>
  <message name="SearchForiFolderUsersSoapIn">
    <part name="SearchString" type="s:string" />
  </message>
  <message name="SearchForiFolderUsersSoapOut">
    <part name="SearchForiFolderUsersResult" xmlns:q12="http://novell.com/ifolder/web/encodedTypes" type="q12:ArrayOfIFolderUser" />
  </message>
  <message name="GetiFolderUserSoapIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFolderUserSoapOut">
    <part name="GetiFolderUserResult" xmlns:q13="http://novell.com/ifolder/web/encodedTypes" type="q13:iFolderUser" />
  </message>
  <message name="GetiFolderUserFromNodeIDSoapIn">
    <part name="CollectionID" type="s:string" />
    <part name="NodeID" type="s:string" />
  </message>
  <message name="GetiFolderUserFromNodeIDSoapOut">
    <part name="GetiFolderUserFromNodeIDResult" xmlns:q14="http://novell.com/ifolder/web/encodedTypes" type="q14:iFolderUser" />
  </message>
  <message name="InviteUserSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="InviteUserSoapOut">
    <part name="InviteUserResult" xmlns:q15="http://novell.com/ifolder/web/encodedTypes" type="q15:iFolderUser" />
  </message>
  <message name="AcceptiFolderInvitationSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitationSoapOut">
    <part name="AcceptiFolderInvitationResult" xmlns:q16="http://novell.com/ifolder/web/encodedTypes" type="q16:iFolderWeb" />
  </message>
  <message name="DeclineiFolderInvitationSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeclineiFolderInvitationSoapOut" />
  <message name="GetUserDiskSpaceSoapIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetUserDiskSpaceSoapOut">
    <part name="GetUserDiskSpaceResult" xmlns:q17="http://novell.com/ifolder/web/encodedTypes" type="q17:DiskSpace" />
  </message>
  <message name="GetiFolderDiskSpaceSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderDiskSpaceSoapOut">
    <part name="GetiFolderDiskSpaceResult" xmlns:q18="http://novell.com/ifolder/web/encodedTypes" type="q18:DiskSpace" />
  </message>
  <message name="SetUserDiskSpaceLimitSoapIn">
    <part name="UserID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetUserDiskSpaceLimitSoapOut" />
  <message name="SetiFolderDiskSpaceLimitSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderDiskSpaceLimitSoapOut" />
  <message name="SetiFolderSyncIntervalSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetiFolderSyncIntervalSoapOut" />
  <message name="SetDefaultSyncIntervalSoapIn">
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetDefaultSyncIntervalSoapOut" />
  <message name="GetDefaultSyncIntervalSoapIn" />
  <message name="GetDefaultSyncIntervalSoapOut">
    <part name="GetDefaultSyncIntervalResult" type="s:int" />
  </message>
  <message name="ConnectToEnterpriseServerSoapIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToEnterpriseServerSoapOut">
    <part name="ConnectToEnterpriseServerResult" xmlns:q19="http://novell.com/ifolder/web/encodedTypes" type="q19:iFolderSettings" />
  </message>
  <message name="ConnectToDomainSoapIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToDomainSoapOut">
    <part name="ConnectToDomainResult" xmlns:q20="http://novell.com/ifolder/web/encodedTypes" type="q20:DomainWeb" />
  </message>
  <message name="GetDomainsSoapIn" />
  <message name="GetDomainsSoapOut">
    <part name="GetDomainsResult" xmlns:q21="http://novell.com/ifolder/web/encodedTypes" type="q21:ArrayOfDomainWeb" />
  </message>
  <message name="GetiFolderConflictsSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderConflictsSoapOut">
    <part name="GetiFolderConflictsResult" xmlns:q22="http://novell.com/ifolder/web/encodedTypes" type="q22:ArrayOfConflict" />
  </message>
  <message name="ResolveFileConflictSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
  </message>
  <message name="ResolveFileConflictSoapOut" />
  <message name="ResolveNameConflictSoapIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newLocalName" type="s:string" />
  </message>
  <message name="ResolveNameConflictSoapOut" />
  <message name="SetupProxySoapIn">
    <part name="Host" type="s:string" />
    <part name="Port" type="s:int" />
  </message>
  <message name="SetupProxySoapOut" />
  <message name="RemoveProxySoapIn" />
  <message name="RemoveProxySoapOut" />
  <message name="CalculateSyncSizeSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="CalculateSyncSizeSoapOut">
    <part name="CalculateSyncSizeResult" xmlns:q23="http://novell.com/ifolder/web/encodedTypes" type="q23:SyncSize" />
  </message>
  <message name="SynciFolderNowSoapIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="SynciFolderNowSoapOut" />
  <message name="PingHttpGetIn" />
  <message name="PingHttpGetOut" />
  <message name="GetSettingsHttpGetIn" />
  <message name="GetSettingsHttpGetOut">
    <part name="Body" element="s0:iFolderSettings" />
  </message>
  <message name="SetDisplayConfirmationHttpGetIn">
    <part name="DisplayConfirmation" type="s:boolean" />
  </message>
  <message name="SetDisplayConfirmationHttpGetOut" />
  <message name="IsiFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsiFolderHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="CanBeiFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="CanBeiFolderHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="IsPathIniFolderHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsPathIniFolderHttpGetOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="CreateLocaliFolderHttpGetIn">
    <part name="Path" type="s:string" />
  </message>
  <message name="CreateLocaliFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetiFolderHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetiFolderByLocalPathHttpGetIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="GetiFolderByLocalPathHttpGetOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="DeleteiFolderHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderHttpGetOut" />
  <message name="RevertiFolderHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolderHttpGetOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetAlliFoldersHttpGetIn" />
  <message name="GetAlliFoldersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb" />
  </message>
  <message name="GetiFoldersHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFoldersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb" />
  </message>
  <message name="SetUserRightsHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="SetUserRightsHttpGetOut" />
  <message name="GetOwnerHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetOwnerHttpGetOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="ChangeOwnerHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="NewOwnerUserID" type="s:string" />
    <part name="OldOwnerRights" type="s:string" />
  </message>
  <message name="ChangeOwnerHttpGetOut" />
  <message name="RemoveiFolderUserHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
  </message>
  <message name="RemoveiFolderUserHttpGetOut" />
  <message name="GetiFolderUsersHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetAlliFolderUsersHttpGetIn" />
  <message name="GetAlliFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetScopediFolderUsersHttpGetIn">
    <part name="numUsers" type="s:int" />
  </message>
  <message name="GetScopediFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="SearchForiFolderUsersHttpGetIn">
    <part name="SearchString" type="s:string" />
  </message>
  <message name="SearchForiFolderUsersHttpGetOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetiFolderUserHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFolderUserHttpGetOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetIn">
    <part name="CollectionID" type="s:string" />
    <part name="NodeID" type="s:string" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpGetOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="InviteUserHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="InviteUserHttpGetOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="AcceptiFolderInvitationHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitationHttpGetOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="DeclineiFolderInvitationHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeclineiFolderInvitationHttpGetOut" />
  <message name="GetUserDiskSpaceHttpGetIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetUserDiskSpaceHttpGetOut">
    <part name="Body" element="s0:DiskSpace" />
  </message>
  <message name="GetiFolderDiskSpaceHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderDiskSpaceHttpGetOut">
    <part name="Body" element="s0:DiskSpace" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetIn">
    <part name="UserID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpGetOut" />
  <message name="SetiFolderDiskSpaceLimitHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpGetOut" />
  <message name="SetiFolderSyncIntervalHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetiFolderSyncIntervalHttpGetOut" />
  <message name="SetDefaultSyncIntervalHttpGetIn">
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetDefaultSyncIntervalHttpGetOut" />
  <message name="GetDefaultSyncIntervalHttpGetIn" />
  <message name="GetDefaultSyncIntervalHttpGetOut">
    <part name="Body" element="s0:int" />
  </message>
  <message name="ConnectToEnterpriseServerHttpGetIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToEnterpriseServerHttpGetOut">
    <part name="Body" element="s0:iFolderSettings" />
  </message>
  <message name="ConnectToDomainHttpGetIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToDomainHttpGetOut">
    <part name="Body" element="s0:DomainWeb" />
  </message>
  <message name="GetDomainsHttpGetIn" />
  <message name="GetDomainsHttpGetOut">
    <part name="Body" element="s0:ArrayOfDomainWeb" />
  </message>
  <message name="GetiFolderConflictsHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderConflictsHttpGetOut">
    <part name="Body" element="s0:ArrayOfConflict" />
  </message>
  <message name="ResolveFileConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
  </message>
  <message name="ResolveFileConflictHttpGetOut" />
  <message name="ResolveNameConflictHttpGetIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newLocalName" type="s:string" />
  </message>
  <message name="ResolveNameConflictHttpGetOut" />
  <message name="SetupProxyHttpGetIn">
    <part name="Host" type="s:string" />
    <part name="Port" type="s:int" />
  </message>
  <message name="SetupProxyHttpGetOut" />
  <message name="RemoveProxyHttpGetIn" />
  <message name="RemoveProxyHttpGetOut" />
  <message name="CalculateSyncSizeHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="CalculateSyncSizeHttpGetOut">
    <part name="Body" element="s0:SyncSize" />
  </message>
  <message name="SynciFolderNowHttpGetIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="SynciFolderNowHttpGetOut" />
  <message name="PingHttpPostIn" />
  <message name="PingHttpPostOut" />
  <message name="GetSettingsHttpPostIn" />
  <message name="GetSettingsHttpPostOut">
    <part name="Body" element="s0:iFolderSettings" />
  </message>
  <message name="SetDisplayConfirmationHttpPostIn">
    <part name="DisplayConfirmation" type="s:boolean" />
  </message>
  <message name="SetDisplayConfirmationHttpPostOut" />
  <message name="IsiFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsiFolderHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="CanBeiFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="CanBeiFolderHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="IsPathIniFolderHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="IsPathIniFolderHttpPostOut">
    <part name="Body" element="s0:boolean" />
  </message>
  <message name="CreateLocaliFolderHttpPostIn">
    <part name="Path" type="s:string" />
  </message>
  <message name="CreateLocaliFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetiFolderHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetiFolderByLocalPathHttpPostIn">
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="GetiFolderByLocalPathHttpPostOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="DeleteiFolderHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeleteiFolderHttpPostOut" />
  <message name="RevertiFolderHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="RevertiFolderHttpPostOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="GetAlliFoldersHttpPostIn" />
  <message name="GetAlliFoldersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb" />
  </message>
  <message name="GetiFoldersHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFoldersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderWeb" />
  </message>
  <message name="SetUserRightsHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="SetUserRightsHttpPostOut" />
  <message name="GetOwnerHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetOwnerHttpPostOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="ChangeOwnerHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="NewOwnerUserID" type="s:string" />
    <part name="OldOwnerRights" type="s:string" />
  </message>
  <message name="ChangeOwnerHttpPostOut" />
  <message name="RemoveiFolderUserHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
  </message>
  <message name="RemoveiFolderUserHttpPostOut" />
  <message name="GetiFolderUsersHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetAlliFolderUsersHttpPostIn" />
  <message name="GetAlliFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetScopediFolderUsersHttpPostIn">
    <part name="numUsers" type="s:int" />
  </message>
  <message name="GetScopediFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="SearchForiFolderUsersHttpPostIn">
    <part name="SearchString" type="s:string" />
  </message>
  <message name="SearchForiFolderUsersHttpPostOut">
    <part name="Body" element="s0:ArrayOfIFolderUser" />
  </message>
  <message name="GetiFolderUserHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetiFolderUserHttpPostOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostIn">
    <part name="CollectionID" type="s:string" />
    <part name="NodeID" type="s:string" />
  </message>
  <message name="GetiFolderUserFromNodeIDHttpPostOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="InviteUserHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="UserID" type="s:string" />
    <part name="Rights" type="s:string" />
  </message>
  <message name="InviteUserHttpPostOut">
    <part name="Body" element="s0:iFolderUser" />
  </message>
  <message name="AcceptiFolderInvitationHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="LocalPath" type="s:string" />
  </message>
  <message name="AcceptiFolderInvitationHttpPostOut">
    <part name="Body" element="s0:iFolderWeb" />
  </message>
  <message name="DeclineiFolderInvitationHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="DeclineiFolderInvitationHttpPostOut" />
  <message name="GetUserDiskSpaceHttpPostIn">
    <part name="UserID" type="s:string" />
  </message>
  <message name="GetUserDiskSpaceHttpPostOut">
    <part name="Body" element="s0:DiskSpace" />
  </message>
  <message name="GetiFolderDiskSpaceHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderDiskSpaceHttpPostOut">
    <part name="Body" element="s0:DiskSpace" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostIn">
    <part name="UserID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetUserDiskSpaceLimitHttpPostOut" />
  <message name="SetiFolderDiskSpaceLimitHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="Limit" type="s:long" />
  </message>
  <message name="SetiFolderDiskSpaceLimitHttpPostOut" />
  <message name="SetiFolderSyncIntervalHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetiFolderSyncIntervalHttpPostOut" />
  <message name="SetDefaultSyncIntervalHttpPostIn">
    <part name="Interval" type="s:int" />
  </message>
  <message name="SetDefaultSyncIntervalHttpPostOut" />
  <message name="GetDefaultSyncIntervalHttpPostIn" />
  <message name="GetDefaultSyncIntervalHttpPostOut">
    <part name="Body" element="s0:int" />
  </message>
  <message name="ConnectToEnterpriseServerHttpPostIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToEnterpriseServerHttpPostOut">
    <part name="Body" element="s0:iFolderSettings" />
  </message>
  <message name="ConnectToDomainHttpPostIn">
    <part name="UserName" type="s:string" />
    <part name="Password" type="s:string" />
    <part name="Host" type="s:string" />
  </message>
  <message name="ConnectToDomainHttpPostOut">
    <part name="Body" element="s0:DomainWeb" />
  </message>
  <message name="GetDomainsHttpPostIn" />
  <message name="GetDomainsHttpPostOut">
    <part name="Body" element="s0:ArrayOfDomainWeb" />
  </message>
  <message name="GetiFolderConflictsHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="GetiFolderConflictsHttpPostOut">
    <part name="Body" element="s0:ArrayOfConflict" />
  </message>
  <message name="ResolveFileConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="localChangesWin" type="s:boolean" />
  </message>
  <message name="ResolveFileConflictHttpPostOut" />
  <message name="ResolveNameConflictHttpPostIn">
    <part name="iFolderID" type="s:string" />
    <part name="conflictID" type="s:string" />
    <part name="newLocalName" type="s:string" />
  </message>
  <message name="ResolveNameConflictHttpPostOut" />
  <message name="SetupProxyHttpPostIn">
    <part name="Host" type="s:string" />
    <part name="Port" type="s:int" />
  </message>
  <message name="SetupProxyHttpPostOut" />
  <message name="RemoveProxyHttpPostIn" />
  <message name="RemoveProxyHttpPostOut" />
  <message name="CalculateSyncSizeHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="CalculateSyncSizeHttpPostOut">
    <part name="Body" element="s0:SyncSize" />
  </message>
  <message name="SynciFolderNowHttpPostIn">
    <part name="iFolderID" type="s:string" />
  </message>
  <message name="SynciFolderNowHttpPostOut" />
  <portType name="iFolderWebServiceSoap">
    <operation name="Ping">
      <input message="s0:PingSoapIn" />
      <output message="s0:PingSoapOut" />
      <documentation>Allows a client to pint to make sure the Web Service is up and running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsSoapIn" />
      <output message="s0:GetSettingsSoapOut" />
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationSoapIn" />
      <output message="s0:SetDisplayConfirmationSoapOut" />
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderSoapIn" />
      <output message="s0:IsiFolderSoapOut" />
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderSoapIn" />
      <output message="s0:CanBeiFolderSoapOut" />
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderSoapIn" />
      <output message="s0:IsPathIniFolderSoapOut" />
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderSoapIn" />
      <output message="s0:CreateLocaliFolderSoapOut" />
      <documentation>Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderSoapIn" />
      <output message="s0:GetiFolderSoapOut" />
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathSoapIn" />
      <output message="s0:GetiFolderByLocalPathSoapOut" />
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderSoapIn" />
      <output message="s0:DeleteiFolderSoapOut" />
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderSoapIn" />
      <output message="s0:RevertiFolderSoapOut" />
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersSoapIn" />
      <output message="s0:GetAlliFoldersSoapOut" />
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersSoapIn" />
      <output message="s0:GetiFoldersSoapOut" />
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsSoapIn" />
      <output message="s0:SetUserRightsSoapOut" />
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerSoapIn" />
      <output message="s0:GetOwnerSoapOut" />
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerSoapIn" />
      <output message="s0:ChangeOwnerSoapOut" />
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserSoapIn" />
      <output message="s0:RemoveiFolderUserSoapOut" />
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersSoapIn" />
      <output message="s0:GetiFolderUsersSoapOut" />
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersSoapIn" />
      <output message="s0:GetAlliFolderUsersSoapOut" />
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersSoapIn" />
      <output message="s0:GetScopediFolderUsersSoapOut" />
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersSoapIn" />
      <output message="s0:SearchForiFolderUsersSoapOut" />
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserSoapIn" />
      <output message="s0:GetiFolderUserSoapOut" />
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDSoapIn" />
      <output message="s0:GetiFolderUserFromNodeIDSoapOut" />
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserSoapIn" />
      <output message="s0:InviteUserSoapOut" />
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationSoapIn" />
      <output message="s0:AcceptiFolderInvitationSoapOut" />
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationSoapIn" />
      <output message="s0:DeclineiFolderInvitationSoapOut" />
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceSoapIn" />
      <output message="s0:GetUserDiskSpaceSoapOut" />
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceSoapIn" />
      <output message="s0:GetiFolderDiskSpaceSoapOut" />
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitSoapIn" />
      <output message="s0:SetUserDiskSpaceLimitSoapOut" />
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitSoapIn" />
      <output message="s0:SetiFolderDiskSpaceLimitSoapOut" />
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalSoapIn" />
      <output message="s0:SetiFolderSyncIntervalSoapOut" />
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalSoapIn" />
      <output message="s0:SetDefaultSyncIntervalSoapOut" />
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalSoapIn" />
      <output message="s0:GetDefaultSyncIntervalSoapOut" />
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerSoapIn" />
      <output message="s0:ConnectToEnterpriseServerSoapOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainSoapIn" />
      <output message="s0:ConnectToDomainSoapOut" />
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsSoapIn" />
      <output message="s0:GetDomainsSoapOut" />
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsSoapIn" />
      <output message="s0:GetiFolderConflictsSoapOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictSoapIn" />
      <output message="s0:ResolveFileConflictSoapOut" />
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictSoapIn" />
      <output message="s0:ResolveNameConflictSoapOut" />
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxySoapIn" />
      <output message="s0:SetupProxySoapOut" />
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxySoapIn" />
      <output message="s0:RemoveProxySoapOut" />
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeSoapIn" />
      <output message="s0:CalculateSyncSizeSoapOut" />
      <documentation>Calculates the number of nodes and bytes that need to be sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowSoapIn" />
      <output message="s0:SynciFolderNowSoapOut" />
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified ID.</documentation>
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpGet">
    <operation name="Ping">
      <input message="s0:PingHttpGetIn" />
      <output message="s0:PingHttpGetOut" />
      <documentation>Allows a client to pint to make sure the Web Service is up and running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsHttpGetIn" />
      <output message="s0:GetSettingsHttpGetOut" />
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationHttpGetIn" />
      <output message="s0:SetDisplayConfirmationHttpGetOut" />
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderHttpGetIn" />
      <output message="s0:IsiFolderHttpGetOut" />
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderHttpGetIn" />
      <output message="s0:CanBeiFolderHttpGetOut" />
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderHttpGetIn" />
      <output message="s0:IsPathIniFolderHttpGetOut" />
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderHttpGetIn" />
      <output message="s0:CreateLocaliFolderHttpGetOut" />
      <documentation>Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderHttpGetIn" />
      <output message="s0:GetiFolderHttpGetOut" />
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathHttpGetIn" />
      <output message="s0:GetiFolderByLocalPathHttpGetOut" />
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderHttpGetIn" />
      <output message="s0:DeleteiFolderHttpGetOut" />
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderHttpGetIn" />
      <output message="s0:RevertiFolderHttpGetOut" />
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersHttpGetIn" />
      <output message="s0:GetAlliFoldersHttpGetOut" />
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersHttpGetIn" />
      <output message="s0:GetiFoldersHttpGetOut" />
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsHttpGetIn" />
      <output message="s0:SetUserRightsHttpGetOut" />
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerHttpGetIn" />
      <output message="s0:GetOwnerHttpGetOut" />
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerHttpGetIn" />
      <output message="s0:ChangeOwnerHttpGetOut" />
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserHttpGetIn" />
      <output message="s0:RemoveiFolderUserHttpGetOut" />
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersHttpGetIn" />
      <output message="s0:GetiFolderUsersHttpGetOut" />
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersHttpGetIn" />
      <output message="s0:GetAlliFolderUsersHttpGetOut" />
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersHttpGetIn" />
      <output message="s0:GetScopediFolderUsersHttpGetOut" />
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersHttpGetIn" />
      <output message="s0:SearchForiFolderUsersHttpGetOut" />
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserHttpGetIn" />
      <output message="s0:GetiFolderUserHttpGetOut" />
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDHttpGetIn" />
      <output message="s0:GetiFolderUserFromNodeIDHttpGetOut" />
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserHttpGetIn" />
      <output message="s0:InviteUserHttpGetOut" />
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationHttpGetIn" />
      <output message="s0:AcceptiFolderInvitationHttpGetOut" />
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationHttpGetIn" />
      <output message="s0:DeclineiFolderInvitationHttpGetOut" />
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceHttpGetIn" />
      <output message="s0:GetUserDiskSpaceHttpGetOut" />
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceHttpGetIn" />
      <output message="s0:GetiFolderDiskSpaceHttpGetOut" />
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitHttpGetIn" />
      <output message="s0:SetUserDiskSpaceLimitHttpGetOut" />
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitHttpGetIn" />
      <output message="s0:SetiFolderDiskSpaceLimitHttpGetOut" />
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalHttpGetIn" />
      <output message="s0:SetiFolderSyncIntervalHttpGetOut" />
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalHttpGetIn" />
      <output message="s0:SetDefaultSyncIntervalHttpGetOut" />
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalHttpGetIn" />
      <output message="s0:GetDefaultSyncIntervalHttpGetOut" />
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerHttpGetIn" />
      <output message="s0:ConnectToEnterpriseServerHttpGetOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainHttpGetIn" />
      <output message="s0:ConnectToDomainHttpGetOut" />
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsHttpGetIn" />
      <output message="s0:GetDomainsHttpGetOut" />
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsHttpGetIn" />
      <output message="s0:GetiFolderConflictsHttpGetOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictHttpGetIn" />
      <output message="s0:ResolveFileConflictHttpGetOut" />
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictHttpGetIn" />
      <output message="s0:ResolveNameConflictHttpGetOut" />
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxyHttpGetIn" />
      <output message="s0:SetupProxyHttpGetOut" />
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxyHttpGetIn" />
      <output message="s0:RemoveProxyHttpGetOut" />
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeHttpGetIn" />
      <output message="s0:CalculateSyncSizeHttpGetOut" />
      <documentation>Calculates the number of nodes and bytes that need to be sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowHttpGetIn" />
      <output message="s0:SynciFolderNowHttpGetOut" />
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified ID.</documentation>
    </operation>
  </portType>
  <portType name="iFolderWebServiceHttpPost">
    <operation name="Ping">
      <input message="s0:PingHttpPostIn" />
      <output message="s0:PingHttpPostOut" />
      <documentation>Allows a client to pint to make sure the Web Service is up and running</documentation>
    </operation>
    <operation name="GetSettings">
      <input message="s0:GetSettingsHttpPostIn" />
      <output message="s0:GetSettingsHttpPostOut" />
      <documentation>Gets the current iFolder Settings</documentation>
    </operation>
    <operation name="SetDisplayConfirmation">
      <input message="s0:SetDisplayConfirmationHttpPostIn" />
      <output message="s0:SetDisplayConfirmationHttpPostOut" />
      <documentation>Sets the display iFolder confirmation setting</documentation>
    </operation>
    <operation name="IsiFolder">
      <input message="s0:IsiFolderHttpPostIn" />
      <output message="s0:IsiFolderHttpPostOut" />
      <documentation>Checks a LocalPath to see if it's an iFolder</documentation>
    </operation>
    <operation name="CanBeiFolder">
      <input message="s0:CanBeiFolderHttpPostIn" />
      <output message="s0:CanBeiFolderHttpPostOut" />
      <documentation>Checks LocalPath to see if can be an iFolder</documentation>
    </operation>
    <operation name="IsPathIniFolder">
      <input message="s0:IsPathIniFolderHttpPostIn" />
      <output message="s0:IsPathIniFolderHttpPostOut" />
      <documentation>Checks LocalPath to see if is in an iFolder</documentation>
    </operation>
    <operation name="CreateLocaliFolder">
      <input message="s0:CreateLocaliFolderHttpPostIn" />
      <output message="s0:CreateLocaliFolderHttpPostOut" />
      <documentation>Create An iFolder. This will create an iFolder using the path specified.  The Path must exist or an exception will be thrown.</documentation>
    </operation>
    <operation name="GetiFolder">
      <input message="s0:GetiFolderHttpPostIn" />
      <output message="s0:GetiFolderHttpPostOut" />
      <documentation>Get An iFolder</documentation>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <input message="s0:GetiFolderByLocalPathHttpPostIn" />
      <output message="s0:GetiFolderByLocalPathHttpPostOut" />
      <documentation>Get An iFolder using a LocalPath</documentation>
    </operation>
    <operation name="DeleteiFolder">
      <input message="s0:DeleteiFolderHttpPostIn" />
      <output message="s0:DeleteiFolderHttpPostOut" />
      <documentation>Delete An iFolder</documentation>
    </operation>
    <operation name="RevertiFolder">
      <input message="s0:RevertiFolderHttpPostIn" />
      <output message="s0:RevertiFolderHttpPostOut" />
      <documentation>Revert an iFolder on the local computer but remain a member</documentation>
    </operation>
    <operation name="GetAlliFolders">
      <input message="s0:GetAlliFoldersHttpPostIn" />
      <output message="s0:GetAlliFoldersHttpPostOut" />
      <documentation>Returns all iFolders on the Server</documentation>
    </operation>
    <operation name="GetiFolders">
      <input message="s0:GetiFoldersHttpPostIn" />
      <output message="s0:GetiFoldersHttpPostOut" />
      <documentation>Returns iFolders for the specified UserID</documentation>
    </operation>
    <operation name="SetUserRights">
      <input message="s0:SetUserRightsHttpPostIn" />
      <output message="s0:SetUserRightsHttpPostOut" />
      <documentation>Set the Rights of a member of an iFolder.  The Rights can be "Admin", "ReadOnly", or "ReadWrite".</documentation>
    </operation>
    <operation name="GetOwner">
      <input message="s0:GetOwnerHttpPostIn" />
      <output message="s0:GetOwnerHttpPostOut" />
      <documentation>Get the Owner of an iFolder</documentation>
    </operation>
    <operation name="ChangeOwner">
      <input message="s0:ChangeOwnerHttpPostIn" />
      <output message="s0:ChangeOwnerHttpPostOut" />
      <documentation>Changes the owner of an iFolder and sets the rights of the previous owner to the rights specified.</documentation>
    </operation>
    <operation name="RemoveiFolderUser">
      <input message="s0:RemoveiFolderUserHttpPostIn" />
      <output message="s0:RemoveiFolderUserHttpPostOut" />
      <documentation>Remove a single member from an iFolder</documentation>
    </operation>
    <operation name="GetiFolderUsers">
      <input message="s0:GetiFolderUsersHttpPostIn" />
      <output message="s0:GetiFolderUsersHttpPostOut" />
      <documentation>Get the list of iFolder Members</documentation>
    </operation>
    <operation name="GetAlliFolderUsers">
      <input message="s0:GetAlliFolderUsersHttpPostIn" />
      <output message="s0:GetAlliFolderUsersHttpPostOut" />
      <documentation>Get the list of All iFolderUsers</documentation>
    </operation>
    <operation name="GetScopediFolderUsers">
      <input message="s0:GetScopediFolderUsersHttpPostIn" />
      <output message="s0:GetScopediFolderUsersHttpPostOut" />
      <documentation>Get a scoped list of iFolderUsers</documentation>
    </operation>
    <operation name="SearchForiFolderUsers">
      <input message="s0:SearchForiFolderUsersHttpPostIn" />
      <output message="s0:SearchForiFolderUsersHttpPostOut" />
      <documentation>Search for a Member of a specified name.</documentation>
    </operation>
    <operation name="GetiFolderUser">
      <input message="s0:GetiFolderUserHttpPostIn" />
      <output message="s0:GetiFolderUserHttpPostOut" />
      <documentation>Lookup a single member to a collection</documentation>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <input message="s0:GetiFolderUserFromNodeIDHttpPostIn" />
      <output message="s0:GetiFolderUserFromNodeIDHttpPostOut" />
      <documentation>Lookup a user in a collection based on node ID.</documentation>
    </operation>
    <operation name="InviteUser">
      <input message="s0:InviteUserHttpPostIn" />
      <output message="s0:InviteUserHttpPostOut" />
      <documentation>Invite a user to an iFolder.  This call will only work with Enterprise iFolders</documentation>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <input message="s0:AcceptiFolderInvitationHttpPostIn" />
      <output message="s0:AcceptiFolderInvitationHttpPostOut" />
      <documentation>Accept an invitation fo an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <input message="s0:DeclineiFolderInvitationHttpPostIn" />
      <output message="s0:DeclineiFolderInvitationHttpPostOut" />
      <documentation>Decline an invitation to an iFolder.  The iFolder ID represents a Subscription object</documentation>
    </operation>
    <operation name="GetUserDiskSpace">
      <input message="s0:GetUserDiskSpaceHttpPostIn" />
      <output message="s0:GetUserDiskSpaceHttpPostOut" />
      <documentation>Gets the DiskSpaceQuota for a member</documentation>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <input message="s0:GetiFolderDiskSpaceHttpPostIn" />
      <output message="s0:GetiFolderDiskSpaceHttpPostOut" />
      <documentation>Gets the DiskSpaceQuota for an iFolder</documentation>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <input message="s0:SetUserDiskSpaceLimitHttpPostIn" />
      <output message="s0:SetUserDiskSpaceLimitHttpPostOut" />
      <documentation>Sets the Disk Space Limit for a user</documentation>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <input message="s0:SetiFolderDiskSpaceLimitHttpPostIn" />
      <output message="s0:SetiFolderDiskSpaceLimitHttpPostOut" />
      <documentation>Sets the Disk Space Limit for an iFolder</documentation>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <input message="s0:SetiFolderSyncIntervalHttpPostIn" />
      <output message="s0:SetiFolderSyncIntervalHttpPostOut" />
      <documentation>Sets the Sync Interval for an iFolder</documentation>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <input message="s0:SetDefaultSyncIntervalHttpPostIn" />
      <output message="s0:SetDefaultSyncIntervalHttpPostOut" />
      <documentation>Sets the Default Sync Interval</documentation>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <input message="s0:GetDefaultSyncIntervalHttpPostIn" />
      <output message="s0:GetDefaultSyncIntervalHttpPostOut" />
      <documentation>Gets the Default Sync Interval</documentation>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <input message="s0:ConnectToEnterpriseServerHttpPostIn" />
      <output message="s0:ConnectToEnterpriseServerHttpPostOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ConnectToDomain">
      <input message="s0:ConnectToDomainHttpPostIn" />
      <output message="s0:ConnectToDomainHttpPostOut" />
      <documentation>Connects to an iFolder Domain</documentation>
    </operation>
    <operation name="GetDomains">
      <input message="s0:GetDomainsHttpPostIn" />
      <output message="s0:GetDomainsHttpPostOut" />
      <documentation>Retuns all currently configured Domains</documentation>
    </operation>
    <operation name="GetiFolderConflicts">
      <input message="s0:GetiFolderConflictsHttpPostIn" />
      <output message="s0:GetiFolderConflictsHttpPostOut" />
      <documentation>Connects to an iFolder Enterprise Server</documentation>
    </operation>
    <operation name="ResolveFileConflict">
      <input message="s0:ResolveFileConflictHttpPostIn" />
      <output message="s0:ResolveFileConflictHttpPostOut" />
      <documentation>Resolves a file conflict in an iFolder.</documentation>
    </operation>
    <operation name="ResolveNameConflict">
      <input message="s0:ResolveNameConflictHttpPostIn" />
      <output message="s0:ResolveNameConflictHttpPostOut" />
      <documentation>Resolves a name conflict</documentation>
    </operation>
    <operation name="SetupProxy">
      <input message="s0:SetupProxyHttpPostIn" />
      <output message="s0:SetupProxyHttpPostOut" />
      <documentation>Sets up a proxy for iFolder to use</documentation>
    </operation>
    <operation name="RemoveProxy">
      <input message="s0:RemoveProxyHttpPostIn" />
      <output message="s0:RemoveProxyHttpPostOut" />
      <documentation>Removes proxy settings</documentation>
    </operation>
    <operation name="CalculateSyncSize">
      <input message="s0:CalculateSyncSizeHttpPostIn" />
      <output message="s0:CalculateSyncSizeHttpPostOut" />
      <documentation>Calculates the number of nodes and bytes that need to be sync'd.</documentation>
    </operation>
    <operation name="SynciFolderNow">
      <input message="s0:SynciFolderNowHttpPostIn" />
      <output message="s0:SynciFolderNowHttpPostOut" />
      <documentation>Sends a command to the sync engine to sync the iFolder of the specified ID.</documentation>
    </operation>
  </portType>
  <binding name="iFolderWebServiceSoap" type="s0:iFolderWebServiceSoap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="Ping">
      <soap:operation soapAction="http://novell.com/ifolder/web/Ping" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetSettings">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetSettings" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDisplayConfirmation" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="IsiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsiFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CanBeiFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/IsPathIniFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/CreateLocaliFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderByLocalPath" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeleteiFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="RevertiFolder">
      <soap:operation soapAction="http://novell.com/ifolder/web/RevertiFolder" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolders" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolders" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserRights" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetOwner" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <soap:operation soapAction="http://novell.com/ifolder/web/ChangeOwner" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="RemoveiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveiFolderUser" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUsers" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetAlliFolderUsers" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetScopediFolderUsers" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <soap:operation soapAction="http://novell.com/ifolder/web/SearchForiFolderUsers" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUser" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderUserFromNodeID" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="InviteUser">
      <soap:operation soapAction="http://novell.com/ifolder/web/InviteUser" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/AcceptiFolderInvitation" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <soap:operation soapAction="http://novell.com/ifolder/web/DeclineiFolderInvitation" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetUserDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetUserDiskSpace" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderDiskSpace" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetUserDiskSpaceLimit" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderDiskSpaceLimit" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetiFolderSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetiFolderSyncInterval" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetDefaultSyncInterval" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetDefaultSyncInterval">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDefaultSyncInterval" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <soap:operation soapAction="http://novell.com/ifolder/web/ConnectToEnterpriseServer" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <soap:operation soapAction="http://novell.com/ifolder/web/ConnectToDomain" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetDomains">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetDomains" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <soap:operation soapAction="http://novell.com/ifolder/web/GetiFolderConflicts" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveFileConflict" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="ResolveNameConflict">
      <soap:operation soapAction="http://novell.com/ifolder/web/ResolveNameConflict" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SetupProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/SetupProxy" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="RemoveProxy">
      <soap:operation soapAction="http://novell.com/ifolder/web/RemoveProxy" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="CalculateSyncSize">
      <soap:operation soapAction="http://novell.com/ifolder/web/CalculateSyncSize" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <soap:operation soapAction="http://novell.com/ifolder/web/SynciFolderNow" style="rpc" />
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://novell.com/ifolder/web/" use="encoded" />
      </output>
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpGet" type="s0:iFolderWebServiceHttpGet">
    <http:binding verb="GET" />
    <operation name="Ping">
      <http:operation location="/Ping" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetSettings">
      <http:operation location="/GetSettings" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <http:operation location="/SetDisplayConfirmation" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <http:operation location="/GetAlliFolderUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <http:operation location="/GetScopediFolderUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <http:operation location="/SearchForiFolderUsers" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <http:operation location="/ConnectToEnterpriseServer" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize" />
      <input>
        <http:urlEncoded />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow" />
      <input>
        <http:urlEncoded />
      </input>
      <output />
    </operation>
  </binding>
  <binding name="iFolderWebServiceHttpPost" type="s0:iFolderWebServiceHttpPost">
    <http:binding verb="POST" />
    <operation name="Ping">
      <http:operation location="/Ping" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetSettings">
      <http:operation location="/GetSettings" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetDisplayConfirmation">
      <http:operation location="/SetDisplayConfirmation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="IsiFolder">
      <http:operation location="/IsiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CanBeiFolder">
      <http:operation location="/CanBeiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="IsPathIniFolder">
      <http:operation location="/IsPathIniFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="CreateLocaliFolder">
      <http:operation location="/CreateLocaliFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolder">
      <http:operation location="/GetiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderByLocalPath">
      <http:operation location="/GetiFolderByLocalPath" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeleteiFolder">
      <http:operation location="/DeleteiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RevertiFolder">
      <http:operation location="/RevertiFolder" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolders">
      <http:operation location="/GetAlliFolders" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolders">
      <http:operation location="/GetiFolders" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserRights">
      <http:operation location="/SetUserRights" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetOwner">
      <http:operation location="/GetOwner" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ChangeOwner">
      <http:operation location="/ChangeOwner" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RemoveiFolderUser">
      <http:operation location="/RemoveiFolderUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetiFolderUsers">
      <http:operation location="/GetiFolderUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetAlliFolderUsers">
      <http:operation location="/GetAlliFolderUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetScopediFolderUsers">
      <http:operation location="/GetScopediFolderUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SearchForiFolderUsers">
      <http:operation location="/SearchForiFolderUsers" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUser">
      <http:operation location="/GetiFolderUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderUserFromNodeID">
      <http:operation location="/GetiFolderUserFromNodeID" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="InviteUser">
      <http:operation location="/InviteUser" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="AcceptiFolderInvitation">
      <http:operation location="/AcceptiFolderInvitation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="DeclineiFolderInvitation">
      <http:operation location="/DeclineiFolderInvitation" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetUserDiskSpace">
      <http:operation location="/GetUserDiskSpace" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderDiskSpace">
      <http:operation location="/GetiFolderDiskSpace" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SetUserDiskSpaceLimit">
      <http:operation location="/SetUserDiskSpaceLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderDiskSpaceLimit">
      <http:operation location="/SetiFolderDiskSpaceLimit" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetiFolderSyncInterval">
      <http:operation location="/SetiFolderSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetDefaultSyncInterval">
      <http:operation location="/SetDefaultSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="GetDefaultSyncInterval">
      <http:operation location="/GetDefaultSyncInterval" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ConnectToEnterpriseServer">
      <http:operation location="/ConnectToEnterpriseServer" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ConnectToDomain">
      <http:operation location="/ConnectToDomain" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetDomains">
      <http:operation location="/GetDomains" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="GetiFolderConflicts">
      <http:operation location="/GetiFolderConflicts" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="ResolveFileConflict">
      <http:operation location="/ResolveFileConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="ResolveNameConflict">
      <http:operation location="/ResolveNameConflict" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="SetupProxy">
      <http:operation location="/SetupProxy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="RemoveProxy">
      <http:operation location="/RemoveProxy" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
    <operation name="CalculateSyncSize">
      <http:operation location="/CalculateSyncSize" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output>
        <mime:mimeXml part="Body" />
      </output>
    </operation>
    <operation name="SynciFolderNow">
      <http:operation location="/SynciFolderNow" />
      <input>
        <mime:content type="application/x-www-form-urlencoded" />
      </input>
      <output />
    </operation>
  </binding>
  <service name="iFolderWebService">
    <port name="iFolderWebServiceSoap" binding="s0:iFolderWebServiceSoap">
      <soap:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
    <port name="iFolderWebServiceHttpGet" binding="s0:iFolderWebServiceHttpGet">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
    <port name="iFolderWebServiceHttpPost" binding="s0:iFolderWebServiceHttpPost">
      <http:address location="http://127.0.0.1:8086/simias10/iFolder.asmx" />
    </port>
    <documentation>Web Service providing access to iFolder</documentation>
  </service>
</definitions>