<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="http://novell.com/simias/web/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://novell.com/simias/web/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://novell.com/simias/web/">
      <s:element name="PingSimias">
        <s:complexType />
      </s:element>
      <s:element name="PingSimiasResponse">
        <s:complexType />
      </s:element>
      <s:element name="AddMemberToDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="PublicKey" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="GivenName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="FamilyName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddMemberToDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="RemoveMemberFromDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="MemberID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RemoveMemberFromDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="FindCloseMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindCloseMembersResponse">
        <s:complexType />
      </s:element>
      <s:element name="FindFirstMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindFirstMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindFirstMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
            <s:element minOccurs="1" maxOccurs="1" name="totalMembers" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfMemberInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="MemberInfo" nillable="true" type="tns:MemberInfo" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="MemberInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="ObjectID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="GivenName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FamilyName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="FullName" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="AccessRights" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="IsOwner" type="s:boolean" />
        </s:sequence>
      </s:complexType>
      <s:element name="FindFirstSpecificMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="attributeName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchString" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="operation" type="tns:SearchType" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="SearchType">
        <s:restriction base="s:string">
          <s:enumeration value="Equal" />
          <s:enumeration value="Not_Equal" />
          <s:enumeration value="Begins" />
          <s:enumeration value="Ends" />
          <s:enumeration value="Contains" />
          <s:enumeration value="Greater" />
          <s:enumeration value="Less" />
          <s:enumeration value="Greater_Equal" />
          <s:enumeration value="Less_Equal" />
          <s:enumeration value="Exists" />
          <s:enumeration value="CaseEqual" />
        </s:restriction>
      </s:simpleType>
      <s:element name="FindFirstSpecificMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindFirstSpecificMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
            <s:element minOccurs="1" maxOccurs="1" name="totalMembers" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindNextMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindNextMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindNextMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPreviousMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindPreviousMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindPreviousMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindSeekMembers">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="offset" type="s:int" />
            <s:element minOccurs="1" maxOccurs="1" name="count" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="FindSeekMembersResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="FindSeekMembersResult" type="s:boolean" />
            <s:element minOccurs="0" maxOccurs="1" name="searchContext" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberList" type="tns:ArrayOfMemberInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSimiasInformation">
        <s:complexType />
      </s:element>
      <s:element name="GetSimiasInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSimiasInformationResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainInformation">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainInformationResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDomainInformationResult" type="tns:DomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="DomainInformation">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="Type" type="tns:DomainType" />
          <s:element minOccurs="1" maxOccurs="1" name="Active" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="Authenticated" type="s:boolean" />
          <s:element minOccurs="0" maxOccurs="1" name="Name" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Description" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MemberUserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="MemberName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="RemoteUrl" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="POBoxID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="HostUrl" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Host" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="IsSlave" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="IsDefault" type="s:boolean" />
          <s:element minOccurs="1" maxOccurs="1" name="StatusCode" type="tns:StatusCodes" />
          <s:element minOccurs="1" maxOccurs="1" name="RemainingGraceLogins" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:simpleType name="DomainType">
        <s:restriction base="s:string">
          <s:enumeration value="Master" />
          <s:enumeration value="Slave" />
          <s:enumeration value="Local" />
          <s:enumeration value="None" />
        </s:restriction>
      </s:simpleType>
      <s:simpleType name="StatusCodes">
        <s:restriction base="s:string">
          <s:enumeration value="Success" />
          <s:enumeration value="SuccessInGrace" />
          <s:enumeration value="InvalidCertificate" />
          <s:enumeration value="UnknownUser" />
          <s:enumeration value="AmbiguousUser" />
          <s:enumeration value="InvalidCredentials" />
          <s:enumeration value="InvalidPassword" />
          <s:enumeration value="AccountDisabled" />
          <s:enumeration value="AccountLockout" />
          <s:enumeration value="SimiasLoginDisabled" />
          <s:enumeration value="UnknownDomain" />
          <s:enumeration value="InternalException" />
          <s:enumeration value="MethodNotSupported" />
          <s:enumeration value="Timeout" />
          <s:enumeration value="Unknown" />
        </s:restriction>
      </s:simpleType>
      <s:element name="GetDomains">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="onlySlaves" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDomainsResult" type="tns:ArrayOfDomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="ArrayOfDomainInformation">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="DomainInformation" nillable="true" type="tns:DomainInformation" />
        </s:sequence>
      </s:complexType>
      <s:element name="LoginToRemoteDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LoginToRemoteDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LoginToRemoteDomainResult" type="tns:Status" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="Status">
        <s:sequence>
          <s:element minOccurs="1" maxOccurs="1" name="statusCode" type="tns:StatusCodes" />
          <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserID" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="UserName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="DistinguishedUserName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="ExceptionMessage" type="s:string" />
          <s:element minOccurs="1" maxOccurs="1" name="TotalGraceLogins" type="s:int" />
          <s:element minOccurs="1" maxOccurs="1" name="RemainingGraceLogins" type="s:int" />
        </s:sequence>
      </s:complexType>
      <s:element name="LogoutFromRemoteDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LogoutFromRemoteDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="LogoutFromRemoteDomainResult" type="tns:Status" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DisableDomainAutoLogin">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DisableDomainAutoLoginResponse">
        <s:complexType />
      </s:element>
      <s:element name="IsDomainActive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsDomainActiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsDomainActiveResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainActive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainActiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetDomainActiveResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainInactive">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainInactiveResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetDomainInactiveResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="memberID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ValidCredentialsResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="type" type="tns:CredentialType" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:simpleType name="CredentialType">
        <s:restriction base="s:string">
          <s:enumeration value="None" />
          <s:enumeration value="NotRequired" />
          <s:enumeration value="Basic" />
          <s:enumeration value="PPK" />
        </s:restriction>
      </s:simpleType>
      <s:element name="SetDomainCredentialsResponse">
        <s:complexType />
      </s:element>
      <s:element name="GetDomainCredentials">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDomainCredentialsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetDomainCredentialsResult" type="tns:CredentialType" />
            <s:element minOccurs="0" maxOccurs="1" name="userID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="credentials" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConnectToDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="UserName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Password" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="Host" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ConnectToDomainResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="ConnectToDomainResult" type="tns:DomainInformation" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LeaveDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DomainID" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="LocalOnly" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="LeaveDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="SetDefaultDomain">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDefaultDomainResponse">
        <s:complexType />
      </s:element>
      <s:element name="GetDefaultDomainID">
        <s:complexType />
      </s:element>
      <s:element name="GetDefaultDomainIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDefaultDomainIDResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCertificate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="host" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCertificateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCertificateResult" type="s:base64Binary" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoreCertificate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="certificate" type="s:base64Binary" />
            <s:element minOccurs="0" maxOccurs="1" name="host" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StoreCertificateResponse">
        <s:complexType />
      </s:element>
      <s:element name="GetInvalidSyncFilenameChars">
        <s:complexType />
      </s:element>
      <s:element name="GetInvalidSyncFilenameCharsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetInvalidSyncFilenameCharsResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainHostAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="domainID" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="hostAddress" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetDomainHostAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetDomainHostAddressResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetProxyAddress">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="hostUri" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="proxyUri" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="proxyUser" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="proxyPassword" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="SetProxyAddressResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="SetProxyAddressResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CanShareService">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="simiasDataPath" type="s:string" />
            <s:element minOccurs="1" maxOccurs="1" name="isClient" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="CanShareServiceResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="CanShareServiceResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="StopSimiasProcess">
        <s:complexType />
      </s:element>
      <s:element name="StopSimiasProcessResponse">
        <s:complexType />
      </s:element>
      <s:element name="AddSimiasReference">
        <s:complexType />
      </s:element>
      <s:element name="AddSimiasReferenceResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="AddSimiasReferenceResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RemoveSimiasReference">
        <s:complexType />
      </s:element>
      <s:element name="RemoveSimiasReferenceResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="RemoveSimiasReferenceResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSimiasDataPath">
        <s:complexType />
      </s:element>
      <s:element name="GetSimiasDataPathResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetSimiasDataPathResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetSimiasProcessID">
        <s:complexType />
      </s:element>
      <s:element name="GetSimiasProcessIDResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetSimiasProcessIDResult" type="s:int" />
          </s:sequence>
        </s:complexType>
      </s:element>
    </s:schema>
  </wsdl:types>
  <wsdl:message name="PingSimiasSoapIn">
    <wsdl:part name="parameters" element="tns:PingSimias" />
  </wsdl:message>
  <wsdl:message name="PingSimiasSoapOut">
    <wsdl:part name="parameters" element="tns:PingSimiasResponse" />
  </wsdl:message>
  <wsdl:message name="AddMemberToDomainSoapIn">
    <wsdl:part name="parameters" element="tns:AddMemberToDomain" />
  </wsdl:message>
  <wsdl:message name="AddMemberToDomainSoapOut">
    <wsdl:part name="parameters" element="tns:AddMemberToDomainResponse" />
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromDomainSoapIn">
    <wsdl:part name="parameters" element="tns:RemoveMemberFromDomain" />
  </wsdl:message>
  <wsdl:message name="RemoveMemberFromDomainSoapOut">
    <wsdl:part name="parameters" element="tns:RemoveMemberFromDomainResponse" />
  </wsdl:message>
  <wsdl:message name="FindCloseMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindCloseMembers" />
  </wsdl:message>
  <wsdl:message name="FindCloseMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindCloseMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindFirstMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindFirstMembers" />
  </wsdl:message>
  <wsdl:message name="FindFirstMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindFirstMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindFirstSpecificMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindFirstSpecificMembers" />
  </wsdl:message>
  <wsdl:message name="FindFirstSpecificMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindFirstSpecificMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindNextMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindNextMembers" />
  </wsdl:message>
  <wsdl:message name="FindNextMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindNextMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindPreviousMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindPreviousMembers" />
  </wsdl:message>
  <wsdl:message name="FindPreviousMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindPreviousMembersResponse" />
  </wsdl:message>
  <wsdl:message name="FindSeekMembersSoapIn">
    <wsdl:part name="parameters" element="tns:FindSeekMembers" />
  </wsdl:message>
  <wsdl:message name="FindSeekMembersSoapOut">
    <wsdl:part name="parameters" element="tns:FindSeekMembersResponse" />
  </wsdl:message>
  <wsdl:message name="GetSimiasInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetSimiasInformation" />
  </wsdl:message>
  <wsdl:message name="GetSimiasInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetSimiasInformationResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainInformationSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomainInformation" />
  </wsdl:message>
  <wsdl:message name="GetDomainInformationSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainInformationResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainsSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomains" />
  </wsdl:message>
  <wsdl:message name="GetDomainsSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainsResponse" />
  </wsdl:message>
  <wsdl:message name="LoginToRemoteDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LoginToRemoteDomain" />
  </wsdl:message>
  <wsdl:message name="LoginToRemoteDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LoginToRemoteDomainResponse" />
  </wsdl:message>
  <wsdl:message name="LogoutFromRemoteDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LogoutFromRemoteDomain" />
  </wsdl:message>
  <wsdl:message name="LogoutFromRemoteDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LogoutFromRemoteDomainResponse" />
  </wsdl:message>
  <wsdl:message name="DisableDomainAutoLoginSoapIn">
    <wsdl:part name="parameters" element="tns:DisableDomainAutoLogin" />
  </wsdl:message>
  <wsdl:message name="DisableDomainAutoLoginSoapOut">
    <wsdl:part name="parameters" element="tns:DisableDomainAutoLoginResponse" />
  </wsdl:message>
  <wsdl:message name="IsDomainActiveSoapIn">
    <wsdl:part name="parameters" element="tns:IsDomainActive" />
  </wsdl:message>
  <wsdl:message name="IsDomainActiveSoapOut">
    <wsdl:part name="parameters" element="tns:IsDomainActiveResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainActiveSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainActive" />
  </wsdl:message>
  <wsdl:message name="SetDomainActiveSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainActiveResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainInactiveSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainInactive" />
  </wsdl:message>
  <wsdl:message name="SetDomainInactiveSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainInactiveResponse" />
  </wsdl:message>
  <wsdl:message name="ValidCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:ValidCredentials" />
  </wsdl:message>
  <wsdl:message name="ValidCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:ValidCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainCredentials" />
  </wsdl:message>
  <wsdl:message name="SetDomainCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="GetDomainCredentialsSoapIn">
    <wsdl:part name="parameters" element="tns:GetDomainCredentials" />
  </wsdl:message>
  <wsdl:message name="GetDomainCredentialsSoapOut">
    <wsdl:part name="parameters" element="tns:GetDomainCredentialsResponse" />
  </wsdl:message>
  <wsdl:message name="ConnectToDomainSoapIn">
    <wsdl:part name="parameters" element="tns:ConnectToDomain" />
  </wsdl:message>
  <wsdl:message name="ConnectToDomainSoapOut">
    <wsdl:part name="parameters" element="tns:ConnectToDomainResponse" />
  </wsdl:message>
  <wsdl:message name="LeaveDomainSoapIn">
    <wsdl:part name="parameters" element="tns:LeaveDomain" />
  </wsdl:message>
  <wsdl:message name="LeaveDomainSoapOut">
    <wsdl:part name="parameters" element="tns:LeaveDomainResponse" />
  </wsdl:message>
  <wsdl:message name="SetDefaultDomainSoapIn">
    <wsdl:part name="parameters" element="tns:SetDefaultDomain" />
  </wsdl:message>
  <wsdl:message name="SetDefaultDomainSoapOut">
    <wsdl:part name="parameters" element="tns:SetDefaultDomainResponse" />
  </wsdl:message>
  <wsdl:message name="GetDefaultDomainIDSoapIn">
    <wsdl:part name="parameters" element="tns:GetDefaultDomainID" />
  </wsdl:message>
  <wsdl:message name="GetDefaultDomainIDSoapOut">
    <wsdl:part name="parameters" element="tns:GetDefaultDomainIDResponse" />
  </wsdl:message>
  <wsdl:message name="GetCertificateSoapIn">
    <wsdl:part name="parameters" element="tns:GetCertificate" />
  </wsdl:message>
  <wsdl:message name="GetCertificateSoapOut">
    <wsdl:part name="parameters" element="tns:GetCertificateResponse" />
  </wsdl:message>
  <wsdl:message name="StoreCertificateSoapIn">
    <wsdl:part name="parameters" element="tns:StoreCertificate" />
  </wsdl:message>
  <wsdl:message name="StoreCertificateSoapOut">
    <wsdl:part name="parameters" element="tns:StoreCertificateResponse" />
  </wsdl:message>
  <wsdl:message name="GetInvalidSyncFilenameCharsSoapIn">
    <wsdl:part name="parameters" element="tns:GetInvalidSyncFilenameChars" />
  </wsdl:message>
  <wsdl:message name="GetInvalidSyncFilenameCharsSoapOut">
    <wsdl:part name="parameters" element="tns:GetInvalidSyncFilenameCharsResponse" />
  </wsdl:message>
  <wsdl:message name="SetDomainHostAddressSoapIn">
    <wsdl:part name="parameters" element="tns:SetDomainHostAddress" />
  </wsdl:message>
  <wsdl:message name="SetDomainHostAddressSoapOut">
    <wsdl:part name="parameters" element="tns:SetDomainHostAddressResponse" />
  </wsdl:message>
  <wsdl:message name="SetProxyAddressSoapIn">
    <wsdl:part name="parameters" element="tns:SetProxyAddress" />
  </wsdl:message>
  <wsdl:message name="SetProxyAddressSoapOut">
    <wsdl:part name="parameters" element="tns:SetProxyAddressResponse" />
  </wsdl:message>
  <wsdl:message name="CanShareServiceSoapIn">
    <wsdl:part name="parameters" element="tns:CanShareService" />
  </wsdl:message>
  <wsdl:message name="CanShareServiceSoapOut">
    <wsdl:part name="parameters" element="tns:CanShareServiceResponse" />
  </wsdl:message>
  <wsdl:message name="StopSimiasProcessSoapIn">
    <wsdl:part name="parameters" element="tns:StopSimiasProcess" />
  </wsdl:message>
  <wsdl:message name="StopSimiasProcessSoapOut">
    <wsdl:part name="parameters" element="tns:StopSimiasProcessResponse" />
  </wsdl:message>
  <wsdl:message name="AddSimiasReferenceSoapIn">
    <wsdl:part name="parameters" element="tns:AddSimiasReference" />
  </wsdl:message>
  <wsdl:message name="AddSimiasReferenceSoapOut">
    <wsdl:part name="parameters" element="tns:AddSimiasReferenceResponse" />
  </wsdl:message>
  <wsdl:message name="RemoveSimiasReferenceSoapIn">
    <wsdl:part name="parameters" element="tns:RemoveSimiasReference" />
  </wsdl:message>
  <wsdl:message name="RemoveSimiasReferenceSoapOut">
    <wsdl:part name="parameters" element="tns:RemoveSimiasReferenceResponse" />
  </wsdl:message>
  <wsdl:message name="GetSimiasDataPathSoapIn">
    <wsdl:part name="parameters" element="tns:GetSimiasDataPath" />
  </wsdl:message>
  <wsdl:message name="GetSimiasDataPathSoapOut">
    <wsdl:part name="parameters" element="tns:GetSimiasDataPathResponse" />
  </wsdl:message>
  <wsdl:message name="GetSimiasProcessIDSoapIn">
    <wsdl:part name="parameters" element="tns:GetSimiasProcessID" />
  </wsdl:message>
  <wsdl:message name="GetSimiasProcessIDSoapOut">
    <wsdl:part name="parameters" element="tns:GetSimiasProcessIDResponse" />
  </wsdl:message>
  <wsdl:portType name="Simias_x0020_Web_x0020_ServiceSoap">
    <wsdl:operation name="PingSimias">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Allows a client to ping to make sure the Web Service is up and running</documentation>
      <wsdl:input message="tns:PingSimiasSoapIn" />
      <wsdl:output message="tns:PingSimiasSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddMemberToDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Add a member to the domain.</documentation>
      <wsdl:input message="tns:AddMemberToDomainSoapIn" />
      <wsdl:output message="tns:AddMemberToDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Remove a member from the domain.</documentation>
      <wsdl:input message="tns:RemoveMemberFromDomainSoapIn" />
      <wsdl:output message="tns:RemoveMemberFromDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindCloseMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">End the search for domain members.</documentation>
      <wsdl:input message="tns:FindCloseMembersSoapIn" />
      <wsdl:output message="tns:FindCloseMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindFirstMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Starts a search for all domain members.</documentation>
      <wsdl:input message="tns:FindFirstMembersSoapIn" />
      <wsdl:output message="tns:FindFirstMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindFirstSpecificMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Starts a search for a specific set of domain members.</documentation>
      <wsdl:input message="tns:FindFirstSpecificMembersSoapIn" />
      <wsdl:output message="tns:FindFirstSpecificMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindNextMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the current record location.</documentation>
      <wsdl:input message="tns:FindNextMembersSoapIn" />
      <wsdl:output message="tns:FindNextMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindPreviousMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members previous to the current record location.</documentation>
      <wsdl:input message="tns:FindPreviousMembersSoapIn" />
      <wsdl:output message="tns:FindPreviousMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="FindSeekMembers">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Continues the search for domain members from the specified record location.</documentation>
      <wsdl:input message="tns:FindSeekMembersSoapIn" />
      <wsdl:output message="tns:FindSeekMembersSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSimiasInformation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">GetSimiasInformation</documentation>
      <wsdl:input message="tns:GetSimiasInformationSoapIn" />
      <wsdl:output message="tns:GetSimiasInformationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomainInformation">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">GetDomainInformation</documentation>
      <wsdl:input message="tns:GetDomainInformationSoapIn" />
      <wsdl:output message="tns:GetDomainInformationSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomains">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get a list of local domains</documentation>
      <wsdl:input message="tns:GetDomainsSoapIn" />
      <wsdl:output message="tns:GetDomainsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LoginToRemoteDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Login or authenticate to a remote domain</documentation>
      <wsdl:input message="tns:LoginToRemoteDomainSoapIn" />
      <wsdl:output message="tns:LoginToRemoteDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LogoutFromRemoteDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Logout from a remote domain</documentation>
      <wsdl:input message="tns:LogoutFromRemoteDomainSoapIn" />
      <wsdl:output message="tns:LogoutFromRemoteDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="DisableDomainAutoLogin">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Disable automatic authentication to the specified domain</documentation>
      <wsdl:input message="tns:DisableDomainAutoLoginSoapIn" />
      <wsdl:output message="tns:DisableDomainAutoLoginSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="IsDomainActive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">WebMethod to check if a domain is active</documentation>
      <wsdl:input message="tns:IsDomainActiveSoapIn" />
      <wsdl:output message="tns:IsDomainActiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainActive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">SetDomainActive - enables synchronization to the remote server</documentation>
      <wsdl:input message="tns:SetDomainActiveSoapIn" />
      <wsdl:output message="tns:SetDomainActiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainInactive">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">SetDomainInactive - disables remote synchronization</documentation>
      <wsdl:input message="tns:SetDomainInactiveSoapIn" />
      <wsdl:output message="tns:SetDomainInactiveSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ValidCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">ValidCredentials</documentation>
      <wsdl:input message="tns:ValidCredentialsSoapIn" />
      <wsdl:output message="tns:ValidCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Sets domain credentials in the local store</documentation>
      <wsdl:input message="tns:SetDomainCredentialsSoapIn" />
      <wsdl:output message="tns:SetDomainCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDomainCredentials">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get the saved credentials from a domain</documentation>
      <wsdl:input message="tns:GetDomainCredentialsSoapIn" />
      <wsdl:output message="tns:GetDomainCredentialsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ConnectToDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Connects to a Domain</documentation>
      <wsdl:input message="tns:ConnectToDomainSoapIn" />
      <wsdl:output message="tns:ConnectToDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="LeaveDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Removes a domain account from the workstation</documentation>
      <wsdl:input message="tns:LeaveDomainSoapIn" />
      <wsdl:output message="tns:LeaveDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDefaultDomain">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Change the default domain to the specified domain ID</documentation>
      <wsdl:input message="tns:SetDefaultDomainSoapIn" />
      <wsdl:output message="tns:SetDefaultDomainSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDefaultDomainID">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get the ID of the default domain</documentation>
      <wsdl:input message="tns:GetDefaultDomainIDSoapIn" />
      <wsdl:output message="tns:GetDefaultDomainIDSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCertificate">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Get the certificate of the specified host.</documentation>
      <wsdl:input message="tns:GetCertificateSoapIn" />
      <wsdl:output message="tns:GetCertificateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StoreCertificate">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Store the certificate for the specified host.</documentation>
      <wsdl:input message="tns:StoreCertificateSoapIn" />
      <wsdl:output message="tns:StoreCertificateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetInvalidSyncFilenameChars">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Returns the characters which cannot be used for filenames in the Simias namespace (files and folders that contain any of these characters cannot be synchronized with iFolder and conflicts will be generated).</documentation>
      <wsdl:input message="tns:GetInvalidSyncFilenameCharsSoapIn" />
      <wsdl:output message="tns:GetInvalidSyncFilenameCharsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetDomainHostAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Sets a new server network address for a client.</documentation>
      <wsdl:input message="tns:SetDomainHostAddressSoapIn" />
      <wsdl:output message="tns:SetDomainHostAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="SetProxyAddress">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Sets a new proxy address for the specified host.</documentation>
      <wsdl:input message="tns:SetProxyAddressSoapIn" />
      <wsdl:output message="tns:SetProxyAddressSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="CanShareService">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Checks to see if this instance of Simias is shareable.</documentation>
      <wsdl:input message="tns:CanShareServiceSoapIn" />
      <wsdl:output message="tns:CanShareServiceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="StopSimiasProcess">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Shuts down the controlling server process.</documentation>
      <wsdl:input message="tns:StopSimiasProcessSoapIn" />
      <wsdl:output message="tns:StopSimiasProcessSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddSimiasReference">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Increments the reference count that keeps Simias services running.</documentation>
      <wsdl:input message="tns:AddSimiasReferenceSoapIn" />
      <wsdl:output message="tns:AddSimiasReferenceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RemoveSimiasReference">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Decrements the Simias service reference count and signals the server to stop if the count goes to zero.</documentation>
      <wsdl:input message="tns:RemoveSimiasReferenceSoapIn" />
      <wsdl:output message="tns:RemoveSimiasReferenceSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSimiasDataPath">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Gets the directory path to the Simias data area.</documentation>
      <wsdl:input message="tns:GetSimiasDataPathSoapIn" />
      <wsdl:output message="tns:GetSimiasDataPathSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetSimiasProcessID">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Gets the process ID for the current running process.</documentation>
      <wsdl:input message="tns:GetSimiasProcessIDSoapIn" />
      <wsdl:output message="tns:GetSimiasProcessIDSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="Simias_x0020_Web_x0020_ServiceSoap" type="tns:Simias_x0020_Web_x0020_ServiceSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document" />
    <wsdl:operation name="PingSimias">
      <soap:operation soapAction="http://novell.com/simias/web/PingSimias" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddMemberToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/AddMemberToDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveMemberFromDomain">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveMemberFromDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindCloseMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindCloseMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindFirstMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindFirstSpecificMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindFirstSpecificMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindNextMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindNextMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindPreviousMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindPreviousMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="FindSeekMembers">
      <soap:operation soapAction="http://novell.com/simias/web/FindSeekMembers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSimiasInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasInformation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomainInformation">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainInformation" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomains">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomains" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LoginToRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LoginToRemoteDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LogoutFromRemoteDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LogoutFromRemoteDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DisableDomainAutoLogin">
      <soap:operation soapAction="http://novell.com/simias/web/DisableDomainAutoLogin" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/IsDomainActive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainActive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainActive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainInactive">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainInactive" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/ValidCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDomainCredentials">
      <soap:operation soapAction="http://novell.com/simias/web/GetDomainCredentials" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ConnectToDomain">
      <soap:operation soapAction="http://novell.com/simias/web/ConnectToDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="LeaveDomain">
      <soap:operation soapAction="http://novell.com/simias/web/LeaveDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDefaultDomain">
      <soap:operation soapAction="http://novell.com/simias/web/SetDefaultDomain" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultDomainID">
      <soap:operation soapAction="http://novell.com/simias/web/GetDefaultDomainID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCertificate">
      <soap:operation soapAction="http://novell.com/simias/web/GetCertificate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StoreCertificate">
      <soap:operation soapAction="http://novell.com/simias/web/StoreCertificate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetInvalidSyncFilenameChars">
      <soap:operation soapAction="http://novell.com/simias/web/GetInvalidSyncFilenameChars" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetDomainHostAddress">
      <soap:operation soapAction="http://novell.com/simias/web/SetDomainHostAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="SetProxyAddress">
      <soap:operation soapAction="http://novell.com/simias/web/SetProxyAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="CanShareService">
      <soap:operation soapAction="http://novell.com/simias/web/CanShareService" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="StopSimiasProcess">
      <soap:operation soapAction="http://novell.com/simias/web/StopSimiasProcess" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddSimiasReference">
      <soap:operation soapAction="http://novell.com/simias/web/AddSimiasReference" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RemoveSimiasReference">
      <soap:operation soapAction="http://novell.com/simias/web/RemoveSimiasReference" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSimiasDataPath">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasDataPath" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSimiasProcessID">
      <soap:operation soapAction="http://novell.com/simias/web/GetSimiasProcessID" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Simias_x0020_Web_x0020_Service">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Web Service providing access to Simias</documentation>
    <wsdl:port name="Simias_x0020_Web_x0020_ServiceSoap" binding="tns:Simias_x0020_Web_x0020_ServiceSoap">
      <soap:address location="http://localhost:8086/simias10/Simias.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>