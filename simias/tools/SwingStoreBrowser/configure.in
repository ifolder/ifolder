AC_INIT(configure.in)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(simias-swing-store-browser, 1.2)
VERSION=$VERSION.`date +%Y%m%d`
AM_MAINTAINER_MODE

#
# Check for a valid operating system and C# compiler
#
case $host_os in
    linux*)
        IFOLDER_OS='linux'
	PKG_CONFIG_DIR='lib'
    ;;
    darwin*)
        IFOLDER_OS='darwin'
	    PKG_CONFIG_DIR='lib'
    ;;
    cygwin*)
        IFOLDER_OS='windows'
	PKG_CONFIG_DIR='.'
    ;;
    *)
        AC_MSG_ERROR([Unknown host_os: $host_os])
    ;;
esac
AC_SUBST(IFOLDER_OS)
AC_SUBST(VERSION)
AM_CONDITIONAL(LINUX, test "$IFOLDER_OS" = "linux")
AM_CONDITIONAL(WINDOWS, test "$IFOLDER_OS" = "windows")
AM_CONDITIONAL(DARWIN, test "$IFOLDER_OS" = "darwin")

#
# We add $prefix to PKG_CONFIG_PATH so pkg-config will find any other
# packages 'make install'-ed to the same prefix.
#
# The default value of $prefix is not set until later in the script.
# We set the default here, if needed.
#
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="${prefix}"

#
# Installation directory options.
#
# These are normally left unexpanded so users can "make install exec_prefix=/foo".
# However, we want them expanded.
#
bindir="${exec_prefix}/bin"
sbindir="${exec_prefix}/sbin"
libexecdir="${exec_prefix}/libexec"
datadir="${prefix}/share"
sysconfdir="${prefix}/etc"
sharedstatedir="${prefix}/com"
localstatedir="${prefix}/var"
libdir="${exec_prefix}/lib"
includedir="${prefix}/include"
oldincludedir="/usr/include"
infodir="${prefix}/info"
mandir="${prefix}/man"

SRCDIR='$(top_srcdir)/src'
TOOLDIR='$(top_srcdir)/tools'
EXTERNAL_DIR='$(top_srcdir)/external'

AC_SUBST(SRCDIR)
AC_SUBST(TOOLDIR)
AC_SUBST(EXTERNAL_DIR)

EMPTY=
SPACE='$(EMPTY) $(EMPTY)'

AC_SUBST(EMPTY)
AC_SUBST(SPACE)

COMMON_CLEAN_FILES='*.dbg *.pdb */*.pdb *.doc.xml */*.doc.xml *.test.xml */*.test.xml'
COMMON_DISTCLEAN_FILES='*.suo */*.suo *.csproj.user */*.csproj.user bin obj */bin */obj'
COMMON_MAINTAINER_CLEAN_FILES='Makefile.in'
AC_SUBST(COMMON_CLEAN_FILES)
AC_SUBST(COMMON_DISTCLEAN_FILES)
AC_SUBST(COMMON_MAINTAINER_CLEAN_FILES)

#
# Make sure "java", "javac", and "jar" are available on the path
#
AC_CHECK_PROG(JAVA, java, java)
test -z "$JAVA" && AC_MSG_ERROR([no JRE: java not found in \$PATH])

AC_CHECK_PROG(JAVAC, javac, javac)
test -z "$JAVAC" && AC_MSG_ERROR([no Java Compiler: javac not found in \$PATH])

AC_CHECK_PROG(JAR, jar, jar)
test -z "$JAR" && AC_MSG_ERROR([no Jar Tool: jar not found in \$PATH])

JAVA_VERSION_MESSAGE=`java -version 2>&1`
JAVA_VERSION=`echo $JAVA_VERSION_MESSAGE | sed 's/[[^0-9]]*\([[0-9\._]]*\).*/\1/'`
echo JAVA_VERSION=$JAVA_VERSION

#
# Set platform-specific variables
#
case $IFOLDER_OS in
    #
    # Darwin-specific configuration
    #
    darwin)
        #
        # Set variables
        #
        PLATFORM_SUBDIRS=$LINUX_SUBDIRS
        SEP='/'
	PATH_SEP=':'
    ;;
    #
    # Linux-specific configuration
    #
    linux)
        #
        # Set variables
        #
        PLATFORM_SUBDIRS=$LINUX_SUBDIRS
        SEP='/'
	PATH_SEP=':'
    ;;
    #
    # Windows-specific configuration
    #
    windows)
        PLATFORM_SUBDIRS=$WINDOWS_SUBDIRS
		SEP='$(EMPTY)\\$(EMPTY)'
		PATH_SEP=';'
		
		# override Linux-like directory structure
		bindir="${exec_prefix}"
		sbindir="${exec_prefix}"
		libexecdir="${exec_prefix}"
		libdir="${exec_prefix}"
	;;
esac
AC_SUBST(PLATFORM_SUBDIRS)
AC_SUBST(SEP)
AC_SUBST(JAVA)
AC_SUBST(JAVAC)
AC_SUBST(JAR)
AC_SUBST(PATH_SEP)

#
# Run standard macros
#
#AM_PROG_CC_STDC
#AC_PROG_INSTALL
#AC_HEADER_STDC
#AM_PROG_LIBTOOL

#
# Handle --enable-debug
#
AC_ARG_ENABLE(debug, [
  --enable-debug          configure the Makefiles to build in DEBUG mode],
    [case "${enableval}" in
        yes) enable_debug=true ;;
        no)  enable_debug=false ;;
        *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
    esac],[enable_debug=false])
AM_CONDITIONAL(DEBUG, test x$enable_debug = xtrue)
if test "$enable_debug" = "true"
then
  # Build debug version.
  JAVACFLAGS="-g"
else
  # Build optimized version.
  JAVACFLAGS=""
fi

AC_SUBST(JAVACFLAGS)

#
# Configure files
#
AC_OUTPUT([
Makefile
manifest
storebrowser
])

