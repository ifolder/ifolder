AC_INIT(src/FormsBookLib/BooksContacts.cs)
AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(addressbook, 1.2)
VERSION=$VERSION.`date +%Y%m%d`
AM_MAINTAINER_MODE

#
# Check for a valid operating system and C# compiler
#
case $host_os in
    linux*)
        ADDRESSBOOK_OS='linux'
        AC_CHECK_PROG(CSC, mcs, mcs)
        test -z "$CSC" && AC_MSG_ERROR([no C Sharp compiler: mcs not found in \$PATH])
	PKG_CONFIG_DIR='lib'
    ;;
    darwin*)
        ADDRESSBOOK_OS='darwin'
        AC_CHECK_PROG(CSC, mcs, mcs)
        test -z "$CSC" && AC_MSG_ERROR([no C Sharp compiler: mcs not found in \$PATH])
	PKG_CONFIG_DIR='lib'
    ;;
    cygwin*)
        ADDRESSBOOK_OS='windows'
        AC_CHECK_PROG(CSC, csc, csc)
        test -z "$CSC" && AC_CHECK_PROG(CSC, mcs, mcs)
        test -z "$CSC" && AC_MSG_ERROR([no C Sharp compiler: neither csc nor mcs found in \$PATH])
	PKG_CONFIG_DIR='.'
    ;;
    *)
        AC_MSG_ERROR([Unknown host_os: $host_os])
    ;;
esac
AC_SUBST(ADDRESSBOOK_OS)
AM_CONDITIONAL(LINUX, test "$ADDRESSBOOK_OS" = "linux")
AM_CONDITIONAL(WINDOWS, test "$ADDRESSBOOK_OS" = "windows")
AM_CONDITIONAL(DARWIN, test "$ADDRESSBOOK_OS" = "darwin")
AM_CONDITIONAL(MONO, test "$CSC" = "mcs")
AM_CONDITIONAL(DOTNET, test "$CSC" = "csc")

#
# We add $prefix to PKG_CONFIG_PATH so pkg-config will find any other
# packages 'make install'-ed to the same prefix.
#
# The default value of $prefix is not set until later in the script.
# We set the default here, if needed.
#
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix="${prefix}"

#
# Installation directory options.
#
# These are normally left unexpanded so users can "make install exec_prefix=/foo".
# However, we want them expanded.
#
bindir="${exec_prefix}/bin"
sbindir="${exec_prefix}/sbin"
libexecdir="${exec_prefix}/libexec"
datadir="${prefix}/share"
sysconfdir="${prefix}/etc"
sharedstatedir="${prefix}/com"
localstatedir="${prefix}/var"
libdir="${exec_prefix}/lib"
includedir="${prefix}/include"
oldincludedir="/usr/include"
infodir="${prefix}/info"
mandir="${prefix}/man"

if test -z "$PKG_CONFIG_PATH"; then
    export PKG_CONFIG_PATH="$prefix/$PKG_CONFIG_DIR/pkgconfig"
else
    export PKG_CONFIG_PATH="$prefix/$PKG_CONFIG_DIR/pkgconfig:$PKG_CONFIG_PATH"
fi
echo PKG_CONFIG_PATH=$PKG_CONFIG_PATH
AC_SUBST(PKG_CONFIG_PATH)

#
# Configure C# compiler settings
#
case $CSC in
    #
    # Mono-specific configuration
    #
    mcs)
        CSC_EXEFLAG=/target:exe
        CSC_LIBFLAG=/target:library
        CSC_WINEXEFLAG=/target:winexe
        CSCFLAGS='/d:MONO /warn:4 /d:TRACE'
        CSCFLAGS_DEBUG="/debug+ /d:DEBUG"
        CSCFLAGS_OPTIMIZE="/optimize+"
        MONO=mono
        MONO_DEBUG='mono --debug'
        MONO_PATH="`pkg-config --variable=libdir simias`"
        SYSTEM_XML='System.Xml.dll'
    ;;
    #
    # .NET-specific configuration
    #
    csc)
        CSC_EXEFLAG=/target:exe
        CSC_LIBFLAG=/target:library
        CSC_WINEXEFLAG=/target:winexe
        CSCFLAGS='/d:DOTNET /warn:4 /d:TRACE /nologo'
        CSCFLAGS_DEBUG="/debug+ /d:DEBUG"
        CSCFLAGS_OPTIMIZE="/optimize+"
        MONO=
        MONO_DEBUG=
        MONO_PATH=
        SYSTEM_XML='System.XML.dll'
    ;;
esac
AC_SUBST(CSC)
AC_SUBST(CSC_EXEFLAG)
AC_SUBST(CSC_LIBFLAG)
AC_SUBST(CSC_WINEXEFLAG)
AC_SUBST(CSCFLAGS)
AC_SUBST(MONO)
AC_SUBST(MONO_PATH)
AC_SUBST(SYSTEM_XML)

SRCDIR='$(top_srcdir)/src'
TOOLDIR='$(top_srcdir)/tools'
DOCDIR="$SRCDIR/doc"

AC_SUBST(SRCDIR)
AC_SUBST(TOOLDIR)
AC_SUBST(DOCDIR)

EMPTY=
SPACE='$(EMPTY) $(EMPTY)'

AC_SUBST(EMPTY)
AC_SUBST(SPACE)

COMMON_CLEAN_FILES='*.dbg *.pdb */*.pdb *.doc.xml */*.doc.xml *.test.xml */*.test.xml'
COMMON_DISTCLEAN_FILES='*.suo */*.suo *.csproj.user */*.csproj.user bin obj */bin */obj'
COMMON_MAINTAINER_CLEAN_FILES='Makefile.in'
AC_SUBST(COMMON_CLEAN_FILES)
AC_SUBST(COMMON_DISTCLEAN_FILES)
AC_SUBST(COMMON_MAINTAINER_CLEAN_FILES)

#
# Set platform-specific variables
#
case $ADDRESSBOOK_OS in
    #
    # darwin-specific configuration
    #
    darwin)
        #
        # Set variables
        #
        CSCFLAGS="/d:DARWIN $CSCFLAGS"
        ICON_EXT='.ico'
        ICON_FLAG='/resource:'
        INSTALL_EXE_OPTS='--mode=644'
        NUNIT="mono nunit-console.exe"
        NUNIT_LIBPATH="$TOOLDIR/NUnit/mono/bin"
        NUNIT_FLAGS='/nologo'
        NUNITFLAGS_DEBUG=''
        NUNITFLAGS_OPTIMIZE=''
        REPORT_DIR='$(DESTDIR)$(bindir)'
        REPORT_EXE='mono $(top_srcdir)/tools/Report/Report.exe'
        SEP='/'
    ;;
    #
    # Linux-specific configuration
    #
    linux)
        #
        # Set variables
        #
        CSCFLAGS="/d:LINUX $CSCFLAGS"
        ICON_EXT='.ico'
        ICON_FLAG='/resource:'
        INSTALL_EXE_OPTS='--mode=644'
        NUNIT="mono nunit-console.exe"
        NUNIT_LIBPATH="$TOOLDIR/NUnit/mono/bin"
        NUNIT_FLAGS='/nologo'
        NUNITFLAGS_DEBUG=''
        NUNITFLAGS_OPTIMIZE=''
        REPORT_DIR='$(DESTDIR)$(bindir)'
        REPORT_EXE='mono $(top_srcdir)/tools/Report/Report.exe'
        SEP='/'
        #
        # Set pkg-config variables
        #
        GTK_SHARP_MINIMUM_VERSION=0.91
        AC_SUBST(GTK_SHARP_MINIMUM_VERSION)

        GNOME_SHARP_MINIMUM_VERSION=0.91
        AC_SUBST(GNOME_SHARP_MINIMUM_VERSION)

        GLADE_SHARP_MINIMUM_VERSION=0.91
        AC_SUBST(GLADE_SHARP_MINIMUM_VERSION)
        UI_PKG_CONFIG_REQUIRES="addressbook = $VERSION gtk-sharp >= $GTK_SHARP_MINIMUM_VERSION"
        UI_PKG_CONFIG_LIBS="/r:Novell.AddressBook.UI.gtk.dll"
    ;;
    #
    # Windows-specific configuration
    #
    windows)
        CSCFLAGS="/d:WINDOWS $CSCFLAGS"
        ICON_EXT='.ico'
        ICON_FLAG='/win32icon:'
        INSTALL_EXE_OPTS=''
        NUNIT="nunit-console.exe"
        NUNIT_LIBPATH="$TOOLDIR/NUnit/net/bin"
        NUNIT_FLAGS='/nologo'
        NUNITFLAGS_DEBUG=''
        NUNITFLAGS_OPTIMIZE=''
        REPORT_DIR='$(shell cygpath --windows $(DESTDIR)$(bindir) | sed ''s,\\\\,/,g'')'
        REPORT_EXE='$(top_srcdir)/tools/Report/Report.exe'
        SEP='$(EMPTY)\\$(EMPTY)'
        #
        # Set pkg-config variables
        #
        UI_PKG_CONFIG_REQUIRES="addressbook = $VERSION"
        UI_PKG_CONFIG_LIBS="/r:FormsBookLib.dll"
        #
    	# Override Linux-like directory structure
        #
    	bindir="${exec_prefix}"
    	sbindir="${exec_prefix}"
    	libexecdir="${exec_prefix}"
    	libdir="${exec_prefix}"
    ;;
esac
AC_SUBST(ICON_EXT)
AC_SUBST(ICON_FLAG)
AC_SUBST(INSTALL_EXE_OPTS)
AC_SUBST(NUNIT)
AC_SUBST(NUNIT_FLAGS)
AC_SUBST(NUNIT_LIBPATH)
AC_SUBST(REPORT_DIR)
AC_SUBST(REPORT_EXE)
AC_SUBST(SEP)

#
# Set pkg-config variables
#
PKG_CONFIG_REQUIRES="simias >= 1.0"
PKG_CONFIG_CONFLICTS=""
PKG_CONFIG_LIBS="/r:Novell.AddressBook.dll"
AC_SUBST(PKG_CONFIG_REQUIRES)
AC_SUBST(PKG_CONFIG_LIBS)
AC_SUBST(PKG_CONFIG_CONFLICTS)

UI_PKG_CONFIG_CONFLICTS=""
AC_SUBST(UI_PKG_CONFIG_REQUIRES)
AC_SUBST(UI_PKG_CONFIG_LIBS)
AC_SUBST(UI_PKG_CONFIG_CONFLICTS)

#
# Run standard macros
#
#AM_PROG_CC_STDC
#AC_PROG_INSTALL
#AC_HEADER_STDC
#AM_PROG_LIBTOOL

#
# Handle --with-ndoc-path
#
AC_ARG_WITH(ndoc-path, [
  --with-ndoc-path=PATH        path to dir that contains NDocConsole.exe [[NONE]]],
    [ NDOC_PATH="$withval" ],
    [ NDOC_PATH=NONE ]
    )
if test "$NDOC_PATH" = "NONE"; then
    NDOC_PATH=''
else
    if test `basename "$NDOC_PATH"` = "NDocConsole.exe"; then
        NDOC_PATH=`dirname "$NDOC_PATH"`
    fi
    test -d "$NDOC_PATH" || AC_MSG_ERROR([$NDOC_PATH does not exist])
    NDOC_PATH=`cd "$NDOC_PATH" && pwd`
fi
if test -n "$NDOC_PATH"; then
    if test -e "$NDOC_PATH/NDocConsole.exe"; then
        NDOC_CMD="$NDOC_PATH/NDocConsole.exe"
    fi
    test -e "$NDOC_CMD" || AC_MSG_ERROR([NDocConsole.exe not found in $NDOC_PATH])
fi
echo NDOC_CMD=$NDOC_CMD
AC_SUBST(NDOC_CMD)
AM_CONDITIONAL(NDOC, test -n "$NDOC_CMD")
AM_CONDITIONAL(MAKE_DOC_FILE, test -n "$NDOC_CMD")

#
# Handle --enable-debug
#
AC_ARG_ENABLE(debug, [
  --enable-debug          configure the Makefiles to build in DEBUG mode],
    [case "${enableval}" in
        yes) enable_debug=true ;;
        no)  enable_debug=false ;;
        *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
    esac],[enable_debug=false])
AM_CONDITIONAL(DEBUG, test x$enable_debug = xtrue)
if test "$enable_debug" = "true"
then
  # Build debug version.
  CFLAGS="$CFLAGS_DEBUG $CFLAGS"
  CSCFLAGS="$CSCFLAGS_DEBUG $CSCFLAGS"
  CXXFLAGS="$CXXFLAGS_DEBUG $CXXFLAGS"
  DEVENV_CONFIGURATION=Debug
  MONO=$MONO_DEBUG
  NUNIT_FLAGS="$NUNITFLAGS_DEBUG $NUNIT_FLAGS"
else
  # Build optimized version.
  CFLAGS="$CFLAGS_OPTIMIZE $CFLAGS"
  CSCFLAGS="$CSCFLAGS_OPTIMIZE $CSCFLAGS"
  CXXFLAGS="$CXXFLAGS_OPTIMIZE $CXXFLAGS"
  DEVENV_CONFIGURATION=Release
  NUNIT_FLAGS="$NUNITFLAGS_OPTIMIZE $NUNIT_FLAGS"
fi
AC_SUBST(DEVENV_CONFIGURATION)

#
# Configure PKG_CONFIG
#
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
    AC_MSG_ERROR([You need to install pkg-config])
fi

#
# Check for required packages
#
PKG_CHECK_MODULES(SIMIAS, simias >= 1.0)
AC_SUBST(SIMIAS_LIBS)

PKG_CHECK_MODULES(SIMIAS_UI, simias-ui >= 1.0)
AC_SUBST(SIMIAS_UI_LIBS)

# if using csc, convert /lib paths using cygpath
case $CSC in
    csc)
        libdir_pkg=`pkg-config --variable=libdir simias`
	libdir_cyg=`cygpath --windows $libdir_pkg | sed 's,\\\\,/,g'`
	SIMIAS_LIBS=`echo $SIMIAS_LIBS | sed "s,$libdir_pkg,$libdir_cyg,g"`
	SIMIAS_UI_LIBS=`echo $SIMIAS_UI_LIBS | sed "s,$libdir_pkg,$libdir_cyg,g"`
    ;;
esac

case $ADDRESSBOOK_OS in
	linux)
		PKG_CHECK_MODULES(GTK_SHARP, gtk-sharp >= $GTK_SHARP_MINIMUM_VERSION)
		GTK_SHARP_PREFIX=`pkg-config --variable=prefix gtk-sharp`
		GTK_SHARP_VERSION=`pkg-config --modversion gtk-sharp`
		AC_SUBST(GTK_SHARP_PREFIX)
		AC_SUBST(GTK_SHARP_LIBS)

		PKG_CHECK_MODULES(GNOME_SHARP, gnome-sharp >= $GNOME_SHARP_MINIMUM_VERSION)
		AC_SUBST(GNOME_SHARP_PREFIX)
		AC_SUBST(GNOME_SHARP_LIBS)

		PKG_CHECK_MODULES(GLADE_SHARP, glade-sharp >= $GLADE_SHARP_MINIMUM_VERSION)
		AC_SUBST(GLADE_SHARP_PREFIX)
		AC_SUBST(GLADE_SHARP_LIBS)
    ;;
esac



#
# Configure files
#
AC_OUTPUT([
Makefile
addressbook.pc
addressbook-ui.pc
src/Makefile
src/install-addressbook-to-gac
src/AddressBookCmd/Makefile
src/AddressBookCmd/addressbookcmd
src/AddressBookTests/Makefile
src/FormsBookLib/Makefile
src/FormsAddrBook/Makefile
src/GtkAddrBook/Makefile
src/GtkAddrBook/contactbrowser
src/GtkAddrBook/invitationassistant
src/GtkAddrBook/poboxviewer
src/GtkAddrBook/Util.cs
src/WebService/Makefile
test/Makefile
test/AddressBook/Makefile
package/Makefile
package/windows/Makefile
package/linux/Makefile
package/linux/addressbook.spec
doc/Makefile
])

chmod +x src/install-addressbook-to-gac

